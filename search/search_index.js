var __index = {"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"Home","text":"<p>This is the technical documentation for the PassengerSim simulator.</p>"},{"location":"API/index.html","title":"PassengerSim API","text":"<p>The main <code>passengersim</code> package includes configuration and analysis tools.  It is freely available for use.</p> <p>The <code>passengersim.core</code> sub-package is only available to authorized users.</p>"},{"location":"API/Core/index.html","title":"PassengerSim.Core API","text":"<p>While the main <code>passengersim</code> package available as a freely downloadable open source package, the functionality in the <code>passengersim.core</code> sub-package  is only available to authorized users.  The documentation of the API for this  sub-package is provided here. </p>"},{"location":"API/Core/00-SimulationEngine.html","title":"Simulation Engine","text":""},{"location":"API/Core/00-SimulationEngine.html#passengersim_core.SimulationEngine-attributes","title":"Attributes","text":""},{"location":"API/Core/00-SimulationEngine.html#passengersim_core._SimulationEngine.SimulationEngine.airlines","title":"airlines  <code>instance-attribute</code>","text":"<pre><code>airlines: Iterator[Airline]\n</code></pre>"},{"location":"API/Core/00-SimulationEngine.html#passengersim_core._SimulationEngine.SimulationEngine.bucketnames","title":"bucketnames  <code>instance-attribute</code>","text":"<pre><code>bucketnames: Iterator[str]\n</code></pre>"},{"location":"API/Core/00-SimulationEngine.html#passengersim_core._SimulationEngine.SimulationEngine.buckets","title":"buckets  <code>instance-attribute</code>","text":"<pre><code>buckets: Iterator[Bucket]\n</code></pre>"},{"location":"API/Core/00-SimulationEngine.html#passengersim_core._SimulationEngine.SimulationEngine.burn_samples","title":"burn_samples  <code>instance-attribute</code>","text":"<pre><code>burn_samples: int\n</code></pre>"},{"location":"API/Core/00-SimulationEngine.html#passengersim_core._SimulationEngine.SimulationEngine.config","title":"config  <code>instance-attribute</code>","text":"<pre><code>config: Config | None\n</code></pre>"},{"location":"API/Core/00-SimulationEngine.html#passengersim_core._SimulationEngine.SimulationEngine.demands","title":"demands  <code>instance-attribute</code>","text":"<pre><code>demands: Iterator[Demand]\n</code></pre>"},{"location":"API/Core/00-SimulationEngine.html#passengersim_core._SimulationEngine.SimulationEngine.disable_ap","title":"disable_ap  <code>instance-attribute</code>","text":"<pre><code>disable_ap: bool\n</code></pre>"},{"location":"API/Core/00-SimulationEngine.html#passengersim_core._SimulationEngine.SimulationEngine.dwm_lite","title":"dwm_lite  <code>instance-attribute</code>","text":"<pre><code>dwm_lite: bool\n</code></pre>"},{"location":"API/Core/00-SimulationEngine.html#passengersim_core._SimulationEngine.SimulationEngine.fares","title":"fares  <code>instance-attribute</code>","text":"<pre><code>fares: Iterator[Fare]\n</code></pre>"},{"location":"API/Core/00-SimulationEngine.html#passengersim_core._SimulationEngine.SimulationEngine.iteration","title":"iteration  <code>instance-attribute</code>","text":"<pre><code>iteration: int\n</code></pre>"},{"location":"API/Core/00-SimulationEngine.html#passengersim_core._SimulationEngine.SimulationEngine.last_dcp","title":"last_dcp  <code>instance-attribute</code>","text":"<pre><code>last_dcp: int\n</code></pre>"},{"location":"API/Core/00-SimulationEngine.html#passengersim_core._SimulationEngine.SimulationEngine.last_event_time","title":"last_event_time  <code>instance-attribute</code>","text":"<pre><code>last_event_time: int\n</code></pre>"},{"location":"API/Core/00-SimulationEngine.html#passengersim_core._SimulationEngine.SimulationEngine.legs","title":"legs  <code>instance-attribute</code>","text":"<pre><code>legs: Iterator[Leg]\n</code></pre>"},{"location":"API/Core/00-SimulationEngine.html#passengersim_core._SimulationEngine.SimulationEngine.manual_paths","title":"manual_paths  <code>instance-attribute</code>","text":"<pre><code>manual_paths: bool\n</code></pre>"},{"location":"API/Core/00-SimulationEngine.html#passengersim_core._SimulationEngine.SimulationEngine.max_connect_time","title":"max_connect_time  <code>instance-attribute</code>","text":"<pre><code>max_connect_time: int\n</code></pre>"},{"location":"API/Core/00-SimulationEngine.html#passengersim_core._SimulationEngine.SimulationEngine.mkt_k_factor","title":"mkt_k_factor  <code>instance-attribute</code>","text":"<pre><code>mkt_k_factor: float\n</code></pre>"},{"location":"API/Core/00-SimulationEngine.html#passengersim_core._SimulationEngine.SimulationEngine.name","title":"name  <code>instance-attribute</code>","text":"<pre><code>name: str\n</code></pre>"},{"location":"API/Core/00-SimulationEngine.html#passengersim_core._SimulationEngine.SimulationEngine.num_samples","title":"num_samples  <code>instance-attribute</code>","text":"<pre><code>num_samples: int\n</code></pre>"},{"location":"API/Core/00-SimulationEngine.html#passengersim_core._SimulationEngine.SimulationEngine.num_trials","title":"num_trials  <code>instance-attribute</code>","text":"<pre><code>num_trials: int\n</code></pre>"},{"location":"API/Core/00-SimulationEngine.html#passengersim_core._SimulationEngine.SimulationEngine.pathclasses","title":"pathclasses  <code>instance-attribute</code>","text":"<pre><code>pathclasses: Iterator[PathClass]\n</code></pre>"},{"location":"API/Core/00-SimulationEngine.html#passengersim_core._SimulationEngine.SimulationEngine.paths","title":"paths  <code>instance-attribute</code>","text":"<pre><code>paths: Iterator[Path]\n</code></pre>"},{"location":"API/Core/00-SimulationEngine.html#passengersim_core._SimulationEngine.SimulationEngine.pax_type_k_factor","title":"pax_type_k_factor  <code>instance-attribute</code>","text":"<pre><code>pax_type_k_factor: float\n</code></pre>"},{"location":"API/Core/00-SimulationEngine.html#passengersim_core._SimulationEngine.SimulationEngine.prorate_revenue","title":"prorate_revenue  <code>instance-attribute</code>","text":"<pre><code>prorate_revenue: bool\n</code></pre> <p>When set to True, O&amp;D revenue is prorated by mileage to the leg level</p>"},{"location":"API/Core/00-SimulationEngine.html#passengersim_core._SimulationEngine.SimulationEngine.random_generator","title":"random_generator  <code>instance-attribute</code>","text":"<pre><code>random_generator: Generator\n</code></pre>"},{"location":"API/Core/00-SimulationEngine.html#passengersim_core._SimulationEngine.SimulationEngine.revenue","title":"revenue  <code>instance-attribute</code>","text":"<pre><code>revenue: float\n</code></pre>"},{"location":"API/Core/00-SimulationEngine.html#passengersim_core._SimulationEngine.SimulationEngine.sample","title":"sample  <code>instance-attribute</code>","text":"<pre><code>sample: int\n</code></pre>"},{"location":"API/Core/00-SimulationEngine.html#passengersim_core._SimulationEngine.SimulationEngine.save_timeframe_details","title":"save_timeframe_details  <code>instance-attribute</code>","text":"<pre><code>save_timeframe_details: bool\n</code></pre>"},{"location":"API/Core/00-SimulationEngine.html#passengersim_core._SimulationEngine.SimulationEngine.snapshot_filters","title":"snapshot_filters  <code>instance-attribute</code>","text":"<pre><code>snapshot_filters: list[SnapshotFilter] | None\n</code></pre>"},{"location":"API/Core/00-SimulationEngine.html#passengersim_core._SimulationEngine.SimulationEngine.sys_k_factor","title":"sys_k_factor  <code>instance-attribute</code>","text":"<pre><code>sys_k_factor: float\n</code></pre>"},{"location":"API/Core/00-SimulationEngine.html#passengersim_core._SimulationEngine.SimulationEngine.tf_k_factor","title":"tf_k_factor  <code>instance-attribute</code>","text":"<pre><code>tf_k_factor: float\n</code></pre> <p>Timeframe k-factor, controls variance in the passenger arrival curves</p>"},{"location":"API/Core/00-SimulationEngine.html#passengersim_core._SimulationEngine.SimulationEngine.trial","title":"trial  <code>instance-attribute</code>","text":"<pre><code>trial: int\n</code></pre>"},{"location":"API/Core/00-SimulationEngine.html#passengersim_core._SimulationEngine.SimulationEngine.z_factor","title":"z_factor  <code>instance-attribute</code>","text":"<pre><code>z_factor: float\n</code></pre>"},{"location":"API/Core/00-SimulationEngine.html#passengersim_core.SimulationEngine-functions","title":"Functions","text":""},{"location":"API/Core/00-SimulationEngine.html#passengersim_core._SimulationEngine.SimulationEngine.__init__","title":"__init__","text":"<pre><code>__init__(name: str, random_generator: str = None)\n</code></pre>"},{"location":"API/Core/00-SimulationEngine.html#passengersim_core._SimulationEngine.SimulationEngine.add_airline","title":"add_airline","text":"<pre><code>add_airline(airline: Airline) -&gt; None\n</code></pre> <p>Add an Airline to the simulation</p>"},{"location":"API/Core/00-SimulationEngine.html#passengersim_core._SimulationEngine.SimulationEngine.add_demand","title":"add_demand","text":"<pre><code>add_demand(dmd: Demand) -&gt; None\n</code></pre> <p>Add a Market Segment demand to the simulation.</p>"},{"location":"API/Core/00-SimulationEngine.html#passengersim_core._SimulationEngine.SimulationEngine.add_fare","title":"add_fare","text":"<pre><code>add_fare(fare: Fare) -&gt; None\n</code></pre> <p>Add a Fare to the simulation.</p>"},{"location":"API/Core/00-SimulationEngine.html#passengersim_core._SimulationEngine.SimulationEngine.add_leg","title":"add_leg","text":"<pre><code>add_leg(leg: Leg) -&gt; None\n</code></pre> <p>Add a Leg to the simulation.</p>"},{"location":"API/Core/00-SimulationEngine.html#passengersim_core._SimulationEngine.SimulationEngine.add_path","title":"add_path","text":"<pre><code>add_path(path: Path) -&gt; None\n</code></pre> <p>Add a Path to the simulation.</p>"},{"location":"API/Core/00-SimulationEngine.html#passengersim_core._SimulationEngine.SimulationEngine.allocate_demand_to_tf","title":"allocate_demand_to_tf","text":"<pre><code>allocate_demand_to_tf(\ndmd: Demand,\nnum_pax: int,\ntf_k_factor: float,\nendTS: int,\ndebug: bool = False,\n) -&gt; int\n</code></pre> <p>Generate events for a single demand (used to simulate PODS processing)</p> <p>Parameters:</p> <ul> <li> dmd             (<code>Demand</code>)         \u2013          </li> <li> num_pax             (<code>int</code>)         \u2013          </li> <li> tf_k_factor             (<code>float</code>)         \u2013          </li> <li> endTS             (<code>int</code>)         \u2013          </li> <li> debug             (<code>bool</code>, default:                 <code>False</code> )         \u2013          </li> </ul> <p>Returns:</p> <ul> <li> <code>int</code>         \u2013          <p>Number of events allocated.</p> </li> </ul>"},{"location":"API/Core/00-SimulationEngine.html#passengersim_core._SimulationEngine.SimulationEngine.build_connections","title":"build_connections","text":"<pre><code>build_connections() -&gt; None\n</code></pre> <p>Build connections for the demands.</p>"},{"location":"API/Core/00-SimulationEngine.html#passengersim_core._SimulationEngine.SimulationEngine.final_write_to_sqlite","title":"final_write_to_sqlite","text":"<pre><code>final_write_to_sqlite(\ncnx: sqlite3.Connection,\nwrite_detail: set[str] | None = None,\n)\n</code></pre> <p>Write final summary details to sqlite</p>"},{"location":"API/Core/00-SimulationEngine.html#passengersim_core._SimulationEngine.SimulationEngine.go","title":"go","text":"<pre><code>go() -&gt; Any\n</code></pre> <p>Run the simulation.</p>"},{"location":"API/Core/00-SimulationEngine.html#passengersim_core._SimulationEngine.SimulationEngine.num_events","title":"num_events","text":"<pre><code>num_events() -&gt; int\n</code></pre> <p>Return the number of events currently on the event queue.</p>"},{"location":"API/Core/00-SimulationEngine.html#passengersim_core._SimulationEngine.SimulationEngine.path_2_leg","title":"path_2_leg","text":"<pre><code>path_2_leg(airline: str) -&gt; None\n</code></pre> <p>Aggregate PathClass forecasts to Leg/Bucket</p>"},{"location":"API/Core/00-SimulationEngine.html#passengersim_core._SimulationEngine.SimulationEngine.reset_counters","title":"reset_counters","text":"<pre><code>reset_counters() -&gt; None\n</code></pre> <p>Reset counters for sold &amp; revenue, for demands and legs.</p>"},{"location":"API/Core/00-SimulationEngine.html#passengersim_core._SimulationEngine.SimulationEngine.set_parm","title":"set_parm","text":"<pre><code>set_parm(name: str, value: float) -&gt; None\n</code></pre> <p>Set a simulation parameter by name and value</p>"},{"location":"API/Core/00-SimulationEngine.html#passengersim_core._SimulationEngine.SimulationEngine.update_db_write_flags","title":"update_db_write_flags","text":"<pre><code>update_db_write_flags()\n</code></pre> <p>Update database writing flags based on config.</p>"},{"location":"API/Core/00-SimulationEngine.html#passengersim_core._SimulationEngine.SimulationEngine.write_to_sqlite","title":"write_to_sqlite","text":"<pre><code>write_to_sqlite(\ncnx: sqlite3.Connection,\ndcp: int,\nwrite_detail: set[str] | None = None,\n)\n</code></pre> <p>Write details to sqlite</p>"},{"location":"API/Core/Airline.html","title":"Airline","text":""},{"location":"API/Core/Airline.html#passengersim_core._Airline.Airline.control","title":"control  <code>instance-attribute</code>","text":"<pre><code>control: Literal['leg', 'theft', 'bp', 'vn', 'none']\n</code></pre> <p>Control method for this carrier.</p>"},{"location":"API/Core/Airline.html#passengersim_core._Airline.Airline.gt_available_seat_miles","title":"gt_available_seat_miles  <code>instance-attribute</code>","text":"<pre><code>gt_available_seat_miles: float\n</code></pre> <p>Grand total ASM, gets updated outside the burn period and is not reset by the reset methods</p>"},{"location":"API/Core/Airline.html#passengersim_core._Airline.Airline.gt_demand","title":"gt_demand  <code>instance-attribute</code>","text":"<pre><code>gt_demand: int\n</code></pre> <p>Grand total generated demand, gets updated outside the burn period and is not reset by the reset methods</p>"},{"location":"API/Core/Airline.html#passengersim_core._Airline.Airline.gt_revenue","title":"gt_revenue  <code>instance-attribute</code>","text":"<pre><code>gt_revenue: float\n</code></pre> <p>Grand total revenue, gets updated outside the burn period and is not reset by the reset methods</p>"},{"location":"API/Core/Airline.html#passengersim_core._Airline.Airline.gt_revenue_passenger_miles","title":"gt_revenue_passenger_miles  <code>instance-attribute</code>","text":"<pre><code>gt_revenue_passenger_miles: float\n</code></pre> <p>Grand total RPM, gets updated outside the burn period and is not reset by the reset methods</p>"},{"location":"API/Core/Airline.html#passengersim_core._Airline.Airline.gt_sold","title":"gt_sold  <code>instance-attribute</code>","text":"<pre><code>gt_sold: int\n</code></pre> <p>Grand total sold, gets updated outside the burn period and is not reset by the reset methods</p>"},{"location":"API/Core/Airline.html#passengersim_core._Airline.Airline.name","title":"name  <code>instance-attribute</code>","text":"<pre><code>name: str\n</code></pre>"},{"location":"API/Core/Airline.html#passengersim_core._Airline.Airline.revenue","title":"revenue  <code>instance-attribute</code>","text":"<pre><code>revenue: float\n</code></pre>"},{"location":"API/Core/Airline.html#passengersim_core._Airline.Airline.rm_system","title":"rm_system  <code>instance-attribute</code>","text":"<pre><code>rm_system: Any\n</code></pre> <p>An instance of RmSystem, called at each DCP to do detruncation / forecasting / optimization</p>"},{"location":"API/Core/Airline.html#passengersim_core._Airline.Airline.sold","title":"sold  <code>instance-attribute</code>","text":"<pre><code>sold: int\n</code></pre>"},{"location":"API/Core/Airline.html#passengersim_core._Airline.Airline.__init__","title":"__init__","text":"<pre><code>__init__(\nname: str,\ncontrol: Literal[\n\"leg\", \"theft\", \"bp\", \"vn\", \"none\"\n] = \"leg\",\n)\n</code></pre>"},{"location":"API/Core/BookingCurves.html","title":"Booking Curves","text":""},{"location":"API/Core/BookingCurves.html#passengersim_core._BookingCurve.BookingCurve.name","title":"name  <code>instance-attribute</code>","text":"<pre><code>name: str\n</code></pre>"},{"location":"API/Core/BookingCurves.html#passengersim_core._BookingCurve.BookingCurve.random_generator","title":"random_generator  <code>instance-attribute</code>","text":"<pre><code>random_generator: Generator\n</code></pre>"},{"location":"API/Core/BookingCurves.html#passengersim_core._BookingCurve.BookingCurve.__init__","title":"__init__","text":"<pre><code>__init__(name: str)\n</code></pre>"},{"location":"API/Core/BookingCurves.html#passengersim_core._BookingCurve.BookingCurve.add_dcp","title":"add_dcp","text":"<pre><code>add_dcp(dcp: int, pct: float)\n</code></pre>"},{"location":"API/Core/BookingCurves.html#passengersim_core._BookingCurve.BookingCurve.get_curve","title":"get_curve","text":"<pre><code>get_curve() -&gt; dict[int, float]\n</code></pre>"},{"location":"API/Core/Bucket.html","title":"Bucket","text":""},{"location":"API/Core/Bucket.html#passengersim_core._Bucket.Bucket.alloc","title":"alloc  <code>instance-attribute</code>","text":"<pre><code>alloc: float\n</code></pre>"},{"location":"API/Core/Bucket.html#passengersim_core._Bucket.Bucket.fcst_mean","title":"fcst_mean  <code>instance-attribute</code>","text":"<pre><code>fcst_mean: float\n</code></pre>"},{"location":"API/Core/Bucket.html#passengersim_core._Bucket.Bucket.fcst_revenue","title":"fcst_revenue  <code>instance-attribute</code>","text":"<pre><code>fcst_revenue: float\n</code></pre>"},{"location":"API/Core/Bucket.html#passengersim_core._Bucket.Bucket.fcst_std_dev","title":"fcst_std_dev  <code>instance-attribute</code>","text":"<pre><code>fcst_std_dev: float\n</code></pre>"},{"location":"API/Core/Bucket.html#passengersim_core._Bucket.Bucket.gt_revenue","title":"gt_revenue  <code>instance-attribute</code>","text":"<pre><code>gt_revenue: float\n</code></pre>"},{"location":"API/Core/Bucket.html#passengersim_core._Bucket.Bucket.gt_sold","title":"gt_sold  <code>instance-attribute</code>","text":"<pre><code>gt_sold: int\n</code></pre>"},{"location":"API/Core/Bucket.html#passengersim_core._Bucket.Bucket.name","title":"name  <code>instance-attribute</code>","text":"<pre><code>name: str\n</code></pre>"},{"location":"API/Core/Bucket.html#passengersim_core._Bucket.Bucket.price","title":"price  <code>instance-attribute</code>","text":"<pre><code>price: float\n</code></pre>"},{"location":"API/Core/Bucket.html#passengersim_core._Bucket.Bucket.protection","title":"protection  <code>instance-attribute</code>","text":"<pre><code>protection: int\n</code></pre>"},{"location":"API/Core/Bucket.html#passengersim_core._Bucket.Bucket.revenue","title":"revenue  <code>instance-attribute</code>","text":"<pre><code>revenue: float\n</code></pre>"},{"location":"API/Core/Bucket.html#passengersim_core._Bucket.Bucket.sold","title":"sold  <code>instance-attribute</code>","text":"<pre><code>sold: int\n</code></pre>"},{"location":"API/Core/Bucket.html#passengersim_core._Bucket.Bucket.untruncated_demand","title":"untruncated_demand  <code>instance-attribute</code>","text":"<pre><code>untruncated_demand: float\n</code></pre>"},{"location":"API/Core/Bucket.html#passengersim_core._Bucket.Bucket.__init__","title":"__init__","text":"<pre><code>__init__(\nname: str,\nalloc: float = 0,\nprice: float = 0,\nsold: float = 0,\nrevenue: float = 0,\nfcst_mean: float = 0,\nfcst_std_dev: float = 0,\n)\n</code></pre>"},{"location":"API/Core/ChoiceModel.html","title":"Choice Model","text":""},{"location":"API/Core/ChoiceModel.html#passengersim_core._ChoiceModel.ChoiceModel.path_quality_alpha","title":"path_quality_alpha  <code>instance-attribute</code>","text":"<pre><code>path_quality_alpha: float\n</code></pre>"},{"location":"API/Core/ChoiceModel.html#passengersim_core._ChoiceModel.ChoiceModel.path_quality_beta","title":"path_quality_beta  <code>instance-attribute</code>","text":"<pre><code>path_quality_beta: float\n</code></pre>"},{"location":"API/Core/ChoiceModel.html#passengersim_core._ChoiceModel.ChoiceModel.preferred_airline_alpha","title":"preferred_airline_alpha  <code>instance-attribute</code>","text":"<pre><code>preferred_airline_alpha: float\n</code></pre>"},{"location":"API/Core/ChoiceModel.html#passengersim_core._ChoiceModel.ChoiceModel.preferred_airline_beta","title":"preferred_airline_beta  <code>instance-attribute</code>","text":"<pre><code>preferred_airline_beta: float\n</code></pre>"},{"location":"API/Core/ChoiceModel.html#passengersim_core._ChoiceModel.ChoiceModel.random_generator","title":"random_generator  <code>instance-attribute</code>","text":"<pre><code>random_generator: Generator\n</code></pre>"},{"location":"API/Core/ChoiceModel.html#passengersim_core._ChoiceModel.ChoiceModel.__init__","title":"__init__","text":"<pre><code>__init__(name: str, type: Literal['logit', 'pods'])\n</code></pre>"},{"location":"API/Core/ChoiceModel.html#passengersim_core._ChoiceModel.ChoiceModel.add_parm","title":"add_parm","text":"<pre><code>add_parm(\nname: str, value: float, value2: float = 0\n) -&gt; None\n</code></pre> <p>Add a parameter value to the choice model</p>"},{"location":"API/Core/ChoiceModel.html#passengersim_core._ChoiceModel.ChoiceModel.serialize","title":"serialize","text":"<pre><code>serialize() -&gt; dict\n</code></pre> <p>Get all parameter values from the choice model.</p>"},{"location":"API/Core/Demand.html","title":"Demand","text":""},{"location":"API/Core/Demand.html#passengersim_core._Demand.Demand.base_demand","title":"base_demand  <code>instance-attribute</code>","text":"<pre><code>base_demand: float\n</code></pre>"},{"location":"API/Core/Demand.html#passengersim_core._Demand.Demand.business","title":"business  <code>instance-attribute</code>","text":"<pre><code>business: bool\n</code></pre>"},{"location":"API/Core/Demand.html#passengersim_core._Demand.Demand.curve_number","title":"curve_number  <code>instance-attribute</code>","text":"<pre><code>curve_number: int\n</code></pre>"},{"location":"API/Core/Demand.html#passengersim_core._Demand.Demand.dest","title":"dest  <code>instance-attribute</code>","text":"<pre><code>dest: str\n</code></pre>"},{"location":"API/Core/Demand.html#passengersim_core._Demand.Demand.distance","title":"distance  <code>instance-attribute</code>","text":"<pre><code>distance: float\n</code></pre>"},{"location":"API/Core/Demand.html#passengersim_core._Demand.Demand.generated_demand","title":"generated_demand  <code>instance-attribute</code>","text":"<pre><code>generated_demand: float\n</code></pre>"},{"location":"API/Core/Demand.html#passengersim_core._Demand.Demand.gt_demand","title":"gt_demand  <code>instance-attribute</code>","text":"<pre><code>gt_demand: float\n</code></pre>"},{"location":"API/Core/Demand.html#passengersim_core._Demand.Demand.gt_eliminated_chose_nothing","title":"gt_eliminated_chose_nothing  <code>instance-attribute</code>","text":"<pre><code>gt_eliminated_chose_nothing: int\n</code></pre>"},{"location":"API/Core/Demand.html#passengersim_core._Demand.Demand.gt_eliminated_no_offers","title":"gt_eliminated_no_offers  <code>instance-attribute</code>","text":"<pre><code>gt_eliminated_no_offers: int\n</code></pre>"},{"location":"API/Core/Demand.html#passengersim_core._Demand.Demand.gt_eliminated_wtp","title":"gt_eliminated_wtp  <code>instance-attribute</code>","text":"<pre><code>gt_eliminated_wtp: int\n</code></pre>"},{"location":"API/Core/Demand.html#passengersim_core._Demand.Demand.gt_revenue","title":"gt_revenue  <code>instance-attribute</code>","text":"<pre><code>gt_revenue: float\n</code></pre>"},{"location":"API/Core/Demand.html#passengersim_core._Demand.Demand.gt_sold","title":"gt_sold  <code>instance-attribute</code>","text":"<pre><code>gt_sold: int\n</code></pre>"},{"location":"API/Core/Demand.html#passengersim_core._Demand.Demand.orig","title":"orig  <code>instance-attribute</code>","text":"<pre><code>orig: str\n</code></pre>"},{"location":"API/Core/Demand.html#passengersim_core._Demand.Demand.price","title":"price  <code>instance-attribute</code>","text":"<pre><code>price: float\n</code></pre>"},{"location":"API/Core/Demand.html#passengersim_core._Demand.Demand.reference_fare","title":"reference_fare  <code>instance-attribute</code>","text":"<pre><code>reference_fare: float\n</code></pre>"},{"location":"API/Core/Demand.html#passengersim_core._Demand.Demand.revenue","title":"revenue  <code>instance-attribute</code>","text":"<pre><code>revenue: float\n</code></pre>"},{"location":"API/Core/Demand.html#passengersim_core._Demand.Demand.scenario_demand","title":"scenario_demand  <code>instance-attribute</code>","text":"<pre><code>scenario_demand: float\n</code></pre>"},{"location":"API/Core/Demand.html#passengersim_core._Demand.Demand.segment","title":"segment  <code>instance-attribute</code>","text":"<pre><code>segment: str\n</code></pre>"},{"location":"API/Core/Demand.html#passengersim_core._Demand.Demand.sold","title":"sold  <code>instance-attribute</code>","text":"<pre><code>sold: int\n</code></pre>"},{"location":"API/Core/Demand.html#passengersim_core._Demand.Demand.__init__","title":"__init__","text":"<pre><code>__init__(\norig: str,\ndest: str,\nsegment: str = None,\nbase_demand: float = 0,\nscenario_demand: float = 0,\n)\n</code></pre>"},{"location":"API/Core/Demand.html#passengersim_core._Demand.Demand.add_choice_model","title":"add_choice_model","text":"<pre><code>add_choice_model(choicemodel: ChoiceModel)\n</code></pre> <p>Add a choice model to this market segment</p>"},{"location":"API/Core/Demand.html#passengersim_core._Demand.Demand.add_curve","title":"add_curve","text":"<pre><code>add_curve(curve: BookingCurve)\n</code></pre> <p>Add a choice model to this market segment</p>"},{"location":"API/Core/Fare.html","title":"Fare","text":""},{"location":"API/Core/Fare.html#passengersim_core._Fare.Fare.adv_purch","title":"adv_purch  <code>instance-attribute</code>","text":"<pre><code>adv_purch: int\n</code></pre>"},{"location":"API/Core/Fare.html#passengersim_core._Fare.Fare.booking_class","title":"booking_class  <code>instance-attribute</code>","text":"<pre><code>booking_class: str\n</code></pre>"},{"location":"API/Core/Fare.html#passengersim_core._Fare.Fare.carrier","title":"carrier  <code>instance-attribute</code>","text":"<pre><code>carrier: str\n</code></pre>"},{"location":"API/Core/Fare.html#passengersim_core._Fare.Fare.dest","title":"dest  <code>instance-attribute</code>","text":"<pre><code>dest: str\n</code></pre>"},{"location":"API/Core/Fare.html#passengersim_core._Fare.Fare.gt_revenue","title":"gt_revenue  <code>instance-attribute</code>","text":"<pre><code>gt_revenue: float\n</code></pre>"},{"location":"API/Core/Fare.html#passengersim_core._Fare.Fare.gt_sold","title":"gt_sold  <code>instance-attribute</code>","text":"<pre><code>gt_sold: int\n</code></pre>"},{"location":"API/Core/Fare.html#passengersim_core._Fare.Fare.orig","title":"orig  <code>instance-attribute</code>","text":"<pre><code>orig: str\n</code></pre>"},{"location":"API/Core/Fare.html#passengersim_core._Fare.Fare.price","title":"price  <code>instance-attribute</code>","text":"<pre><code>price: float\n</code></pre>"},{"location":"API/Core/Fare.html#passengersim_core._Fare.Fare.sold","title":"sold  <code>instance-attribute</code>","text":"<pre><code>sold: int\n</code></pre>"},{"location":"API/Core/Fare.html#passengersim_core._Fare.Fare.sold_business","title":"sold_business  <code>instance-attribute</code>","text":"<pre><code>sold_business: int\n</code></pre>"},{"location":"API/Core/Fare.html#passengersim_core._Fare.Fare.__init__","title":"__init__","text":"<pre><code>__init__(\ncarrier: str,\norig: str,\ndest: str,\nbooking_class: str,\nprice: float,\n)\n</code></pre>"},{"location":"API/Core/Fare.html#passengersim_core._Fare.Fare.add_restriction","title":"add_restriction","text":"<pre><code>add_restriction(restriction: str) -&gt; None\n</code></pre> <p>Add a restriction code to this Fare.</p>"},{"location":"API/Core/Generator.html","title":"Generator","text":""},{"location":"API/Core/Generator.html#passengersim_core._Generator.Generator.bitgenerator","title":"bitgenerator  <code>instance-attribute</code>","text":"<pre><code>bitgenerator: np.random.BitGenerator\n</code></pre>"},{"location":"API/Core/Generator.html#passengersim_core._Generator.Generator.bitgenerator_class","title":"bitgenerator_class  <code>instance-attribute</code>","text":"<pre><code>bitgenerator_class: type[np.random.BitGenerator]\n</code></pre>"},{"location":"API/Core/Generator.html#passengersim_core._Generator.Generator.__init__","title":"__init__","text":"<pre><code>__init__(\nseed: int | None = None,\nbitgenerator_class: type[np.random.BitGenerator]\n| None = None,\n)\n</code></pre> <p>Initialize a random number generator.</p> <p>Parameters:</p> <ul> <li> seed             (<code>int or None</code>, default:                 <code>None</code> )         \u2013          <p>For reproducibility, provide a seed.  If no seed is provided, a random seed is provided by the operating system and generally the results will be different every time you reseed.</p> </li> <li> bitgenerator_class             (<code>type[np.random.BitGenerator]</code>, default:                 <code>None</code> )         \u2013          <p>This is the class used to create new BitGenerator objects when the seed is reset.</p> </li> </ul>"},{"location":"API/Core/Generator.html#passengersim_core._Generator.Generator.get_normal","title":"get_normal","text":"<pre><code>get_normal() -&gt; float\n</code></pre> <p>Return a random draw from a standard normal distribution.</p>"},{"location":"API/Core/Generator.html#passengersim_core._Generator.Generator.get_uniform","title":"get_uniform","text":"<pre><code>get_uniform() -&gt; float\n</code></pre> <p>Return a random draw standard uniform distribution.</p>"},{"location":"API/Core/Generator.html#passengersim_core._Generator.Generator.seed","title":"seed","text":"<pre><code>seed(seed: int | list[int] | None) -&gt; None\n</code></pre> <p>Reseed the random bit generator.</p>"},{"location":"API/Core/Leg.html","title":"Leg","text":""},{"location":"API/Core/Leg.html#passengersim_core._Leg.Leg.arr_time","title":"arr_time  <code>instance-attribute</code>","text":"<pre><code>arr_time: int\n</code></pre>"},{"location":"API/Core/Leg.html#passengersim_core._Leg.Leg.bid_price","title":"bid_price  <code>instance-attribute</code>","text":"<pre><code>bid_price: float\n</code></pre>"},{"location":"API/Core/Leg.html#passengersim_core._Leg.Leg.bid_price_gradient","title":"bid_price_gradient  <code>instance-attribute</code>","text":"<pre><code>bid_price_gradient: float\n</code></pre>"},{"location":"API/Core/Leg.html#passengersim_core._Leg.Leg.buckets","title":"buckets  <code>instance-attribute</code>","text":"<pre><code>buckets: Iterator[Bucket]\n</code></pre>"},{"location":"API/Core/Leg.html#passengersim_core._Leg.Leg.capacity","title":"capacity  <code>instance-attribute</code>","text":"<pre><code>capacity: int\n</code></pre>"},{"location":"API/Core/Leg.html#passengersim_core._Leg.Leg.carrier","title":"carrier  <code>instance-attribute</code>","text":"<pre><code>carrier: str\n</code></pre>"},{"location":"API/Core/Leg.html#passengersim_core._Leg.Leg.dep_time","title":"dep_time  <code>instance-attribute</code>","text":"<pre><code>dep_time: int\n</code></pre>"},{"location":"API/Core/Leg.html#passengersim_core._Leg.Leg.dest","title":"dest  <code>instance-attribute</code>","text":"<pre><code>dest: str\n</code></pre>"},{"location":"API/Core/Leg.html#passengersim_core._Leg.Leg.displacement","title":"displacement  <code>instance-attribute</code>","text":"<pre><code>displacement: float\n</code></pre>"},{"location":"API/Core/Leg.html#passengersim_core._Leg.Leg.distance","title":"distance  <code>instance-attribute</code>","text":"<pre><code>distance: float\n</code></pre>"},{"location":"API/Core/Leg.html#passengersim_core._Leg.Leg.duration","title":"duration  <code>instance-attribute</code>","text":"<pre><code>duration: float\n</code></pre>"},{"location":"API/Core/Leg.html#passengersim_core._Leg.Leg.equipment","title":"equipment  <code>instance-attribute</code>","text":"<pre><code>equipment: str\n</code></pre>"},{"location":"API/Core/Leg.html#passengersim_core._Leg.Leg.fcst_mean","title":"fcst_mean  <code>instance-attribute</code>","text":"<pre><code>fcst_mean: float\n</code></pre>"},{"location":"API/Core/Leg.html#passengersim_core._Leg.Leg.fcst_std_dev","title":"fcst_std_dev  <code>instance-attribute</code>","text":"<pre><code>fcst_std_dev: float\n</code></pre>"},{"location":"API/Core/Leg.html#passengersim_core._Leg.Leg.flt_no","title":"flt_no  <code>instance-attribute</code>","text":"<pre><code>flt_no: int\n</code></pre>"},{"location":"API/Core/Leg.html#passengersim_core._Leg.Leg.gt_capacity","title":"gt_capacity  <code>instance-attribute</code>","text":"<pre><code>gt_capacity: int\n</code></pre>"},{"location":"API/Core/Leg.html#passengersim_core._Leg.Leg.gt_revenue","title":"gt_revenue  <code>instance-attribute</code>","text":"<pre><code>gt_revenue: float\n</code></pre>"},{"location":"API/Core/Leg.html#passengersim_core._Leg.Leg.gt_sold","title":"gt_sold  <code>instance-attribute</code>","text":"<pre><code>gt_sold: int\n</code></pre>"},{"location":"API/Core/Leg.html#passengersim_core._Leg.Leg.info","title":"info  <code>instance-attribute</code>","text":"<pre><code>info: Any\n</code></pre>"},{"location":"API/Core/Leg.html#passengersim_core._Leg.Leg.orig","title":"orig  <code>instance-attribute</code>","text":"<pre><code>orig: str\n</code></pre>"},{"location":"API/Core/Leg.html#passengersim_core._Leg.Leg.q_demand","title":"q_demand  <code>instance-attribute</code>","text":"<pre><code>q_demand: float\n</code></pre>"},{"location":"API/Core/Leg.html#passengersim_core._Leg.Leg.revenue","title":"revenue  <code>instance-attribute</code>","text":"<pre><code>revenue: float\n</code></pre>"},{"location":"API/Core/Leg.html#passengersim_core._Leg.Leg.sold","title":"sold  <code>instance-attribute</code>","text":"<pre><code>sold: float\n</code></pre>"},{"location":"API/Core/Leg.html#passengersim_core._Leg.Leg.__init__","title":"__init__","text":"<pre><code>__init__(\ncarrier: str,\nflt_no: int,\norig: str,\ndest: str,\ncapacity: int = 0,\nsold: int = 0,\nduration: int = 0,\nequipment: str = None,\ninfo: Any = None,\n)\n</code></pre>"},{"location":"API/Core/Leg.html#passengersim_core._Leg.Leg.add_bucket","title":"add_bucket","text":"<pre><code>add_bucket(*args: Bucket)\n</code></pre> <p>Add an inventory control bucket to the Leg.</p>"},{"location":"API/Core/Leg.html#passengersim_core._Leg.Leg.bucket_number","title":"bucket_number","text":"<pre><code>bucket_number(i: int | str) -&gt; Bucket\n</code></pre> <p>Get the bucket from the leg.</p> <p>Parameters:</p> <ul> <li> i             (<code>int or str</code>)         \u2013          <p>If an integer, returns the bucket at this index position from the list of buckets attached to this Leg.  If given as a str, returns the bucket with the indicated booking class.</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>Bucket</code>         \u2013          </li> </ul>"},{"location":"API/Core/Leg.html#passengersim_core._Leg.Leg.capture_dcp","title":"capture_dcp","text":"<pre><code>capture_dcp(i: int) -&gt; None\n</code></pre> <p>Grab a snapshot of important variables.</p> <p>Parameters:</p> <ul> <li> i             (<code>int</code>)         \u2013          <p>The index of the DCP to capture.</p> </li> </ul>"},{"location":"API/Core/Leg.html#passengersim_core._Leg.Leg.get_bucket_auth","title":"get_bucket_auth","text":"<pre><code>get_bucket_auth(i: int | str) -&gt; int\n</code></pre> <p>Get the authorization for a bucket attached to this leg.</p> <p>Parameters:</p> <ul> <li> i             (<code>int or str</code>)         \u2013          <p>If an integer, returns the auth of the bucket at this index position from the list of buckets attached to this Leg.  If given as a str, returns the auth of the bucket with the indicated booking class.</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>int</code>         \u2013          </li> </ul>"},{"location":"API/Core/Leg.html#passengersim_core._Leg.Leg.get_bucket_sold","title":"get_bucket_sold","text":"<pre><code>get_bucket_sold(i: int | str) -&gt; int\n</code></pre> <p>Get the number of seats sold for a bucket attached to this leg.</p> <p>Parameters:</p> <ul> <li> i             (<code>int or str</code>)         \u2013          <p>If an integer, returns the number of seats sold for the bucket at this index position from the list of buckets attached to this Leg.  If given as a str, returns the number of seats sold for the bucket with the indicated booking class.</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>int</code>         \u2013          </li> </ul>"},{"location":"API/Core/Leg.html#passengersim_core._Leg.Leg.get_num_buckets","title":"get_num_buckets","text":"<pre><code>get_num_buckets() -&gt; int\n</code></pre> <p>Get the number of buckets attached to this leg.</p>"},{"location":"API/Core/Leg.html#passengersim_core._Leg.Leg.print_bucket_detail","title":"print_bucket_detail","text":"<pre><code>print_bucket_detail() -&gt; None\n</code></pre> <p>Print a bunch of debugging info</p>"},{"location":"API/Core/Leg.html#passengersim_core._Leg.Leg.write_to_sqlite","title":"write_to_sqlite","text":"<pre><code>write_to_sqlite(\nsqlite_pointer: sqlite3.Connection,\nsim: SimulationEngine,\ndcp: int,\n)\n</code></pre> <p>Write to leg_bucket_detail.</p>"},{"location":"API/Core/Path.html","title":"Path","text":""},{"location":"API/Core/Path.html#passengersim_core._Path.Path.dest","title":"dest  <code>instance-attribute</code>","text":"<pre><code>dest: str\n</code></pre>"},{"location":"API/Core/Path.html#passengersim_core._Path.Path.gt_revenue","title":"gt_revenue  <code>instance-attribute</code>","text":"<pre><code>gt_revenue: float\n</code></pre>"},{"location":"API/Core/Path.html#passengersim_core._Path.Path.gt_sold","title":"gt_sold  <code>instance-attribute</code>","text":"<pre><code>gt_sold: int\n</code></pre>"},{"location":"API/Core/Path.html#passengersim_core._Path.Path.orig","title":"orig  <code>instance-attribute</code>","text":"<pre><code>orig: str\n</code></pre>"},{"location":"API/Core/Path.html#passengersim_core._Path.Path.path_quality_index","title":"path_quality_index  <code>instance-attribute</code>","text":"<pre><code>path_quality_index: float\n</code></pre>"},{"location":"API/Core/Path.html#passengersim_core._Path.Path.price","title":"price  <code>instance-attribute</code>","text":"<pre><code>price: float\n</code></pre>"},{"location":"API/Core/Path.html#passengersim_core._Path.Path.revenue","title":"revenue  <code>instance-attribute</code>","text":"<pre><code>revenue: float\n</code></pre>"},{"location":"API/Core/Path.html#passengersim_core._Path.Path.sold","title":"sold  <code>instance-attribute</code>","text":"<pre><code>sold: int\n</code></pre>"},{"location":"API/Core/Path.html#passengersim_core._Path.Path.utility","title":"utility  <code>instance-attribute</code>","text":"<pre><code>utility: float\n</code></pre>"},{"location":"API/Core/Path.html#passengersim_core._Path.Path.__init__","title":"__init__","text":"<pre><code>__init__(orig: str, dest: str, price: float)\n</code></pre>"},{"location":"API/Core/Path.html#passengersim_core._Path.Path.add_leg","title":"add_leg","text":"<pre><code>add_leg(leg: Leg) -&gt; None\n</code></pre> <p>Add a leg to this Path.</p>"},{"location":"API/Core/Path.html#passengersim_core._Path.Path.get_leg_bid_price","title":"get_leg_bid_price","text":"<pre><code>get_leg_bid_price(n: int) -&gt; str\n</code></pre> <p>Get the bid price on the n-th leg.</p>"},{"location":"API/Core/Path.html#passengersim_core._Path.Path.get_leg_carrier","title":"get_leg_carrier","text":"<pre><code>get_leg_carrier(n: int) -&gt; str\n</code></pre> <p>Get the carrier code for the n-th leg.</p>"},{"location":"API/Core/Path.html#passengersim_core._Path.Path.get_leg_fltno","title":"get_leg_fltno","text":"<pre><code>get_leg_fltno(n: int) -&gt; str\n</code></pre> <p>Get the flight number for the n-th leg.</p>"},{"location":"API/Core/Path.html#passengersim_core._Path.Path.num_legs","title":"num_legs","text":"<pre><code>num_legs() -&gt; int\n</code></pre> <p>How many legs are on this path?</p>"},{"location":"API/Core/PathClass.html","title":"Path Class","text":""},{"location":"API/Core/PathClass.html#passengersim_core._PathClass.PathClass.booking_class","title":"booking_class  <code>instance-attribute</code>","text":"<pre><code>booking_class: str\n</code></pre>"},{"location":"API/Core/PathClass.html#passengersim_core._PathClass.PathClass.contribution1","title":"contribution1  <code>instance-attribute</code>","text":"<pre><code>contribution1: float\n</code></pre>"},{"location":"API/Core/PathClass.html#passengersim_core._PathClass.PathClass.contribution2","title":"contribution2  <code>instance-attribute</code>","text":"<pre><code>contribution2: float\n</code></pre>"},{"location":"API/Core/PathClass.html#passengersim_core._PathClass.PathClass.decision_fare","title":"decision_fare  <code>instance-attribute</code>","text":"<pre><code>decision_fare: float\n</code></pre>"},{"location":"API/Core/PathClass.html#passengersim_core._PathClass.PathClass.fcst_mean","title":"fcst_mean  <code>instance-attribute</code>","text":"<pre><code>fcst_mean: float\n</code></pre>"},{"location":"API/Core/PathClass.html#passengersim_core._PathClass.PathClass.fcst_std_dev","title":"fcst_std_dev  <code>instance-attribute</code>","text":"<pre><code>fcst_std_dev: float\n</code></pre>"},{"location":"API/Core/PathClass.html#passengersim_core._PathClass.PathClass.index1","title":"index1  <code>instance-attribute</code>","text":"<pre><code>index1: int\n</code></pre>"},{"location":"API/Core/PathClass.html#passengersim_core._PathClass.PathClass.index2","title":"index2  <code>instance-attribute</code>","text":"<pre><code>index2: int\n</code></pre>"},{"location":"API/Core/PathClass.html#passengersim_core._PathClass.PathClass.__init__","title":"__init__","text":"<pre><code>__init__(booking_class: Any)\n</code></pre>"},{"location":"API/Core/PathClass.html#passengersim_core._PathClass.PathClass.set_indexes","title":"set_indexes","text":"<pre><code>set_indexes(i1: int, i2: int = 0) -&gt; None\n</code></pre> <p>Set the VN indexes for this PathClass.</p>"},{"location":"API/config/00-configs.html","title":"Config","text":""},{"location":"API/config/00-configs.html#passengersim.config.base.Config","title":"Config","text":"<p>             Bases: <code>BaseModel</code></p> Source code in <code>src/passengersim/passengersim/config/base.py</code> <pre><code>class Config(BaseModel, extra=\"forbid\"):\nscenario: str = Field(default_factory=random_label)\n\"\"\"Name for this scenario.\n    The scenario name is helpful when writing different simulations to the same\n    database so you can uniquely identify and query results for a particular\n    scenario.\"\"\"\nsimulation_controls: SimulationSettings = SimulationSettings()\n\"\"\"\n    Controls that apply broadly to the overall simulation.\n    See [passengersim.config.SimulationSettings][] for detailed documentation.\n    \"\"\"\ndb: DatabaseConfig = DatabaseConfig()\n\"\"\"\n    See [passengersim.config.DatabaseConfig][] for detailed documentation.\n    \"\"\"\nrm_systems: DictOfNamed[RmSystem] = []\n\"\"\"\n    The revenue management systems used by the carriers in this simulation.\n    See [RM Systems][rm-systems] for details.\n    \"\"\"\nchoice_models: DictOfNamed[ChoiceModel] = {}\n\"\"\"Several choice models are programmed behind the scenes.  The choice_models option allows the user to set the parameters used in the utility model for a particular choice model.\n    There are two choice models currently programmed.\n    Need to explaining more here\"\"\"\nairlines: DictOfNamed[Airline] = {}\n\"\"\"A list of airlines.\n    One convention is to use Airline1, Airline2, ... to list the airlines in the\n    network.  Another convention is to use IATA industry-standard two-letter airline\n    codes.  See the\n    [IATA code search](https://www.iata.org/en/publications/directories/code-search/)\n    for more information.\"\"\"\nclasses: list[str] = []\n\"\"\"A list of fare classes.  \n    One convention is to use Y0, Y1, ... to label fare classes from the highest \n    fare (Y0) to the lowest fare (Yn).  An example of classes is below.\n    Example\n    -------\n    ```{yaml}\n    classes:\n      - Y0\n      - Y1\n      - Y2\n      - Y3\n      - Y4\n      - Y5\n    ```\n    \"\"\"\ndcps: list[int] = []\n\"\"\"A list of DCPs (data collection points).\n    The DCPs are given as integers, which represent the number of days\n    before departure.   An example of data collection points is given below.  Note that as you get closer to day of departure (DCP=0) the number of days between two consecutive DCP periods\n    decreases.  The DCP intervals are shorter because as you get closer to departure, customer arrival rates tend to increase, and it is advantageous to forecast changes in demand for shorter intervals.\n    dcps:\n  - 63\n  - 56\n  - 49\n  - 42\n  - 35\n  - 31\n  - 28\n  - 24\n  - 21\n  - 17\n  - 14\n  - 10\n  - 7\n  - 5\n  - 3\n  - 1\n    \"\"\"\nbooking_curves: DictOfNamed[BookingCurve] = {}\n\"\"\"Booking curves\n    An example of a booking curve is below.\n    booking_curves:\n  - name: c1\n    curve:\n      63: 0.06\n      56: 0.11\n      49: 0.15\n      42: 0.2\n      35: 0.23\n      31: 0.25\n      28: 0.28\n      24: 0.31\n      21: 0.35\n      17: 0.4\n      14: 0.5\n      10: 0.62\n      7: 0.7\n      5: 0.78\n      3: 0.95\n      1: 1.0\n\"\"\"\nlegs: list[Leg] = []\ndemands: list[Demand] = []\nfares: list[Fare] = []\npaths: list[Path] = []\nsnapshot_filters: list[SnapshotFilter] = []\n@model_validator(mode=\"after\")\ndef _airlines_have_rm_systems(cls, m: Config):\n\"\"\"Check that all airlines have RM systems that have been defined.\"\"\"\nfor airline in m.airlines.values():\nif airline.rm_system not in m.rm_systems:\nraise ValueError(\nf\"Airline {airline.name} has unknown RM system {airline.rm_system}\"\n)\nreturn m\n@model_validator(mode=\"after\")\ndef _booking_curves_match_dcps(cls, m: Config):\n\"\"\"Check that all booking curves are complete and valid.\"\"\"\nsorted_dcps = reversed(sorted(m.dcps))\nfor curve in m.booking_curves.values():\ni = 0\nfor dcp in sorted_dcps:\nassert (\ndcp in curve.curve\n), f\"booking curve {curve.name} is missing dcp {dcp}\"\nassert (\ncurve.curve[dcp] &gt;= i\n), f\"booking curve {curve.name} moves backwards at dcp {dcp}\"\ni = curve.curve[dcp]\nreturn m\n@classmethod\ndef from_yaml(\ncls,\nfilenames: pathlib.Path | list[pathlib.Path],\n):\n\"\"\"Read from YAML.\"\"\"\nif isinstance(filenames, str | pathlib.Path):\nfilenames = [filenames]\nraw_config = {}\nfor filename in reversed(filenames):\nfilename = pathlib.Path(filename)\nopener = gzip.open if filename.suffix == \".gz\" else open\nwith opener(filename) as f:\ncontent = yaml.safe_load(f)\nraw_config.update(content)\nreturn cls.model_validate(raw_config)\n@classmethod\ndef model_validate(\ncls,\n*args,\n**kwargs,\n) -&gt; typing.Self:\n\"\"\"Validate the passengersim Config inputs.\n        This method reloads the Config class to ensure all imported\n        RmSteps are properly registered before validation.\n        Args:\n            obj: The object to validate.\n            strict: Whether to raise an exception on invalid fields.\n            from_attributes: Whether to extract data from object attributes.\n            context: Additional context to pass to the validator.\n        Raises:\n            ValidationError: If the object could not be validated.\n        Returns:\n            The validated model instance.\n        \"\"\"\n# reload these to refresh for any newly defined RmSteps\nmodule_parent = \".\".join(__name__.split(\".\")[:-1])\nimportlib.reload(sys.modules.get(f\"{module_parent}.rm_systems\"))\nimportlib.reload(sys.modules.get(__name__))\nmodule = importlib.reload(sys.modules.get(module_parent))\nreloaded_class = getattr(module, cls.__name__)\n# `__tracebackhide__` tells pytest and some other tools to omit this function from tracebacks\n__tracebackhide__ = True\nreturn reloaded_class.__pydantic_validator__.validate_python(*args, **kwargs)\n</code></pre>"},{"location":"API/config/00-configs.html#passengersim.config.base.Config.airlines","title":"airlines  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>airlines: DictOfNamed[Airline] = {}\n</code></pre> <p>A list of airlines.</p> <p>One convention is to use Airline1, Airline2, ... to list the airlines in the network.  Another convention is to use IATA industry-standard two-letter airline codes.  See the IATA code search for more information.</p>"},{"location":"API/config/00-configs.html#passengersim.config.base.Config.booking_curves","title":"booking_curves  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>booking_curves: DictOfNamed[BookingCurve] = {}\n</code></pre> <p>Booking curves   An example of a booking curve is below.   booking_curves: - name: c1   curve:     63: 0.06     56: 0.11     49: 0.15     42: 0.2     35: 0.23     31: 0.25     28: 0.28     24: 0.31     21: 0.35     17: 0.4     14: 0.5     10: 0.62     7: 0.7     5: 0.78     3: 0.95     1: 1.0</p>"},{"location":"API/config/00-configs.html#passengersim.config.base.Config.choice_models","title":"choice_models  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>choice_models: DictOfNamed[ChoiceModel] = {}\n</code></pre> <p>Several choice models are programmed behind the scenes.  The choice_models option allows the user to set the parameters used in the utility model for a particular choice model.</p> <p>There are two choice models currently programmed.</p> <p>Need to explaining more here</p>"},{"location":"API/config/00-configs.html#passengersim.config.base.Config.classes","title":"classes  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>classes: list[str] = []\n</code></pre> <p>A list of fare classes.  </p> <p>One convention is to use Y0, Y1, ... to label fare classes from the highest  fare (Y0) to the lowest fare (Yn).  An example of classes is below.</p>"},{"location":"API/config/00-configs.html#passengersim.config.base.Config.classes--example","title":"Example","text":"<pre><code>classes:\n  - Y0\n  - Y1\n  - Y2\n  - Y3\n  - Y4\n  - Y5\n</code></pre>"},{"location":"API/config/00-configs.html#passengersim.config.base.Config.db","title":"db  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>db: DatabaseConfig = DatabaseConfig()\n</code></pre> <p>See passengersim.config.DatabaseConfig for detailed documentation.</p>"},{"location":"API/config/00-configs.html#passengersim.config.base.Config.dcps","title":"dcps  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dcps: list[int] = []\n</code></pre> <p>A list of DCPs (data collection points).</p> <p>The DCPs are given as integers, which represent the number of days   before departure.   An example of data collection points is given below.  Note that as you get closer to day of departure (DCP=0) the number of days between two consecutive DCP periods   decreases.  The DCP intervals are shorter because as you get closer to departure, customer arrival rates tend to increase, and it is advantageous to forecast changes in demand for shorter intervals.   dcps: - 63 - 56 - 49 - 42 - 35 - 31 - 28 - 24 - 21 - 17 - 14 - 10 - 7 - 5 - 3 - 1</p>"},{"location":"API/config/00-configs.html#passengersim.config.base.Config.demands","title":"demands  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>demands: list[Demand] = []\n</code></pre>"},{"location":"API/config/00-configs.html#passengersim.config.base.Config.fares","title":"fares  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>fares: list[Fare] = []\n</code></pre>"},{"location":"API/config/00-configs.html#passengersim.config.base.Config.legs","title":"legs  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>legs: list[Leg] = []\n</code></pre>"},{"location":"API/config/00-configs.html#passengersim.config.base.Config.paths","title":"paths  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>paths: list[Path] = []\n</code></pre>"},{"location":"API/config/00-configs.html#passengersim.config.base.Config.rm_systems","title":"rm_systems  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>rm_systems: DictOfNamed[RmSystem] = []\n</code></pre> <p>The revenue management systems used by the carriers in this simulation.</p> <p>See RM Systems for details.</p>"},{"location":"API/config/00-configs.html#passengersim.config.base.Config.scenario","title":"scenario  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>scenario: str = Field(default_factory=random_label)\n</code></pre> <p>Name for this scenario.</p> <p>The scenario name is helpful when writing different simulations to the same database so you can uniquely identify and query results for a particular scenario.</p>"},{"location":"API/config/00-configs.html#passengersim.config.base.Config.simulation_controls","title":"simulation_controls  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>simulation_controls: SimulationSettings = (\nSimulationSettings()\n)\n</code></pre> <p>Controls that apply broadly to the overall simulation.</p> <p>See passengersim.config.SimulationSettings for detailed documentation.</p>"},{"location":"API/config/00-configs.html#passengersim.config.base.Config.snapshot_filters","title":"snapshot_filters  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>snapshot_filters: list[SnapshotFilter] = []\n</code></pre>"},{"location":"API/config/00-configs.html#passengersim.config.base.Config.from_yaml","title":"from_yaml  <code>classmethod</code>","text":"<pre><code>from_yaml(filenames: pathlib.Path | list[pathlib.Path])\n</code></pre> <p>Read from YAML.</p> Source code in <code>src/passengersim/passengersim/config/base.py</code> <pre><code>@classmethod\ndef from_yaml(\ncls,\nfilenames: pathlib.Path | list[pathlib.Path],\n):\n\"\"\"Read from YAML.\"\"\"\nif isinstance(filenames, str | pathlib.Path):\nfilenames = [filenames]\nraw_config = {}\nfor filename in reversed(filenames):\nfilename = pathlib.Path(filename)\nopener = gzip.open if filename.suffix == \".gz\" else open\nwith opener(filename) as f:\ncontent = yaml.safe_load(f)\nraw_config.update(content)\nreturn cls.model_validate(raw_config)\n</code></pre>"},{"location":"API/config/00-configs.html#passengersim.config.base.Config.model_validate","title":"model_validate  <code>classmethod</code>","text":"<pre><code>model_validate(*args, **kwargs) -&gt; typing.Self\n</code></pre> <p>Validate the passengersim Config inputs.</p> <p>This method reloads the Config class to ensure all imported RmSteps are properly registered before validation.</p> <p>Args:     obj: The object to validate.     strict: Whether to raise an exception on invalid fields.     from_attributes: Whether to extract data from object attributes.     context: Additional context to pass to the validator.</p> <p>Raises:     ValidationError: If the object could not be validated.</p> <p>Returns:     The validated model instance.</p> Source code in <code>src/passengersim/passengersim/config/base.py</code> <pre><code>@classmethod\ndef model_validate(\ncls,\n*args,\n**kwargs,\n) -&gt; typing.Self:\n\"\"\"Validate the passengersim Config inputs.\n    This method reloads the Config class to ensure all imported\n    RmSteps are properly registered before validation.\n    Args:\n        obj: The object to validate.\n        strict: Whether to raise an exception on invalid fields.\n        from_attributes: Whether to extract data from object attributes.\n        context: Additional context to pass to the validator.\n    Raises:\n        ValidationError: If the object could not be validated.\n    Returns:\n        The validated model instance.\n    \"\"\"\n# reload these to refresh for any newly defined RmSteps\nmodule_parent = \".\".join(__name__.split(\".\")[:-1])\nimportlib.reload(sys.modules.get(f\"{module_parent}.rm_systems\"))\nimportlib.reload(sys.modules.get(__name__))\nmodule = importlib.reload(sys.modules.get(module_parent))\nreloaded_class = getattr(module, cls.__name__)\n# `__tracebackhide__` tells pytest and some other tools to omit this function from tracebacks\n__tracebackhide__ = True\nreturn reloaded_class.__pydantic_validator__.validate_python(*args, **kwargs)\n</code></pre>"},{"location":"API/config/01-simulation-controls.html","title":"Simulation Controls","text":""},{"location":"API/config/01-simulation-controls.html#passengersim.config.simulation_controls.SimulationSettings","title":"SimulationSettings","text":"<p>             Bases: <code>BaseModel</code></p> Source code in <code>src/passengersim/passengersim/config/simulation_controls.py</code> <pre><code>class SimulationSettings(BaseModel, extra=\"allow\"):\nnum_trials: conint(ge=1, le=1000) = 1\n\"\"\"The overall number of trials to run.\n    Each trial is a complete simulation, including burn-in training time as well\n    as study time.  It will have a number of sequentially developed samples, each of \n    which represents one \"typical\" day of travel.\n    See [Counting Simulations][counting-simulations] for more details.\n    \"\"\"\nnum_samples: conint(ge=1, le=1000) = 600\n\"\"\"The number of samples to run within each trial.\n    Each sample represents one \"typical\" day of travel.  \n    See [Counting Simulations][counting-simulations] for more details.\n    \"\"\"\nburn_samples: conint(ge=1, le=1000) = 100\n\"\"\"The number of samples to burn when starting each trial.\n    Burned samples are used to populate a stable history of data to support\n    forecasting and optimization algorithms, but are not used to evaluate\n    performance results.\n    See [Counting Simulations][counting-simulations] for more details.\n    \"\"\"\nsys_k_factor: confloat(gt=0, lt=5.0) = 0.10\n\"\"\"\n    System-level randomness factor.\n    This factor controls the level of correlation in demand levels across the\n    entire system. \n    See [k-factors][demand-generation-k-factors]\n    for more details.\n    \"\"\"\nmkt_k_factor: confloat(gt=0, lt=5.0) = 0.20\n\"\"\"\n    Market-level randomness factor.\n    This factor controls the level of correlation in demand levels across origin-\n    destination markets. \n    See [k-factors][demand-generation-k-factors] \n    for more details.\n    \"\"\"\npax_type_k_factor: confloat(gt=0, lt=5.0) = 0.40\n\"\"\"\n    Passenger-type randomness factor.\n    This factor controls the level of correlation in demand levels across passenger \n    types. \n    See [k-factors][demand-generation-k-factors] \n    for more details.\n    \"\"\"\ntf_k_factor: confloat(gt=0, lt=5.0) = 0.1\n\"\"\"\n    Time frame randomness factor.\n    This factor controls the dispersion of bookings over time, given a previously \n    identified level of total demand. See [k-factors]() for more details.\n    \"\"\"\nz_factor: confloat(gt=0, lt=5.0) = 2.0\n\"\"\"\n    Base level demand variance control.\n    See [k-factors][demand-generation-k-factors] for more details.\n    \"\"\"\nprorate_revenue: bool = True\ndwm_lite: bool = True\n\"\"\"\n    Use the \"lite\" decision window model.\n    The structure of this model is the same as that use by Boeing.\n    \"\"\"\nmax_connect_time: conint(ge=0) = 240\n\"\"\"\n    Maximum connection time for automatically generated paths.\n    Any generated path that has a connection time greater than this value (expressed\n    in minutes) is invalidated.\n    \"\"\"\ndisable_ap: bool = False\n\"\"\"\n    Remove all advance purchase settings used in the simulation.\n    This applies to all airlines and all fare products.\n    \"\"\"\ndemand_multiplier: confloat(gt=0) = 1.0\n\"\"\"\n    Scale all demand by this value.\n    Setting to a value other than 1.0 will increase or decrease all demand inputs \n    uniformly by the same multiplicative amount. This is helpful when exploring how \n    simulation results vary when you have \"low demand\" scenarios (e.g, \n    demand_multiplier = 0.8), or \"high demand\" scenarios (e.g., demand multiplier = 1.1).\n    \"\"\"\nmanual_paths: bool = True\n\"\"\"\n    The user has provided explicit paths and connections.\n    If set to False, the automatic path generation algorithm is applied.\n    \"\"\"\nwrite_raw_files: bool = False\nrandom_seed: int | None = None\nupdate_frequency: int | None = None\n</code></pre>"},{"location":"API/config/01-simulation-controls.html#passengersim.config.simulation_controls.SimulationSettings.burn_samples","title":"burn_samples  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>burn_samples: conint(ge=1, le=1000) = 100\n</code></pre> <p>The number of samples to burn when starting each trial.</p> <p>Burned samples are used to populate a stable history of data to support forecasting and optimization algorithms, but are not used to evaluate performance results.</p> <p>See Counting Simulations for more details.</p>"},{"location":"API/config/01-simulation-controls.html#passengersim.config.simulation_controls.SimulationSettings.demand_multiplier","title":"demand_multiplier  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>demand_multiplier: confloat(gt=0) = 1.0\n</code></pre> <p>Scale all demand by this value.</p> <p>Setting to a value other than 1.0 will increase or decrease all demand inputs  uniformly by the same multiplicative amount. This is helpful when exploring how  simulation results vary when you have \"low demand\" scenarios (e.g,  demand_multiplier = 0.8), or \"high demand\" scenarios (e.g., demand multiplier = 1.1).</p>"},{"location":"API/config/01-simulation-controls.html#passengersim.config.simulation_controls.SimulationSettings.disable_ap","title":"disable_ap  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>disable_ap: bool = False\n</code></pre> <p>Remove all advance purchase settings used in the simulation.</p> <p>This applies to all airlines and all fare products.</p>"},{"location":"API/config/01-simulation-controls.html#passengersim.config.simulation_controls.SimulationSettings.dwm_lite","title":"dwm_lite  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dwm_lite: bool = True\n</code></pre> <p>Use the \"lite\" decision window model.</p> <p>The structure of this model is the same as that use by Boeing.</p>"},{"location":"API/config/01-simulation-controls.html#passengersim.config.simulation_controls.SimulationSettings.manual_paths","title":"manual_paths  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>manual_paths: bool = True\n</code></pre> <p>The user has provided explicit paths and connections.</p> <p>If set to False, the automatic path generation algorithm is applied.</p>"},{"location":"API/config/01-simulation-controls.html#passengersim.config.simulation_controls.SimulationSettings.max_connect_time","title":"max_connect_time  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>max_connect_time: conint(ge=0) = 240\n</code></pre> <p>Maximum connection time for automatically generated paths.</p> <p>Any generated path that has a connection time greater than this value (expressed in minutes) is invalidated.</p>"},{"location":"API/config/01-simulation-controls.html#passengersim.config.simulation_controls.SimulationSettings.mkt_k_factor","title":"mkt_k_factor  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>mkt_k_factor: confloat(gt=0, lt=5.0) = 0.2\n</code></pre> <p>Market-level randomness factor.</p> <p>This factor controls the level of correlation in demand levels across origin- destination markets. </p> <p>See k-factors  for more details.</p>"},{"location":"API/config/01-simulation-controls.html#passengersim.config.simulation_controls.SimulationSettings.num_samples","title":"num_samples  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>num_samples: conint(ge=1, le=1000) = 600\n</code></pre> <p>The number of samples to run within each trial.</p> <p>Each sample represents one \"typical\" day of travel. See Counting Simulations for more details.</p>"},{"location":"API/config/01-simulation-controls.html#passengersim.config.simulation_controls.SimulationSettings.num_trials","title":"num_trials  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>num_trials: conint(ge=1, le=1000) = 1\n</code></pre> <p>The overall number of trials to run.</p> <p>Each trial is a complete simulation, including burn-in training time as well as study time.  It will have a number of sequentially developed samples, each of  which represents one \"typical\" day of travel.</p> <p>See Counting Simulations for more details.</p>"},{"location":"API/config/01-simulation-controls.html#passengersim.config.simulation_controls.SimulationSettings.pax_type_k_factor","title":"pax_type_k_factor  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>pax_type_k_factor: confloat(gt=0, lt=5.0) = 0.4\n</code></pre> <p>Passenger-type randomness factor.</p> <p>This factor controls the level of correlation in demand levels across passenger  types. </p> <p>See k-factors  for more details.</p>"},{"location":"API/config/01-simulation-controls.html#passengersim.config.simulation_controls.SimulationSettings.prorate_revenue","title":"prorate_revenue  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>prorate_revenue: bool = True\n</code></pre>"},{"location":"API/config/01-simulation-controls.html#passengersim.config.simulation_controls.SimulationSettings.random_seed","title":"random_seed  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>random_seed: int | None = None\n</code></pre>"},{"location":"API/config/01-simulation-controls.html#passengersim.config.simulation_controls.SimulationSettings.sys_k_factor","title":"sys_k_factor  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>sys_k_factor: confloat(gt=0, lt=5.0) = 0.1\n</code></pre> <p>System-level randomness factor.</p> <p>This factor controls the level of correlation in demand levels across the entire system. </p> <p>See k-factors for more details.</p>"},{"location":"API/config/01-simulation-controls.html#passengersim.config.simulation_controls.SimulationSettings.tf_k_factor","title":"tf_k_factor  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>tf_k_factor: confloat(gt=0, lt=5.0) = 0.1\n</code></pre> <p>Time frame randomness factor.</p> <p>This factor controls the dispersion of bookings over time, given a previously  identified level of total demand. See k-factors for more details.</p>"},{"location":"API/config/01-simulation-controls.html#passengersim.config.simulation_controls.SimulationSettings.update_frequency","title":"update_frequency  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>update_frequency: int | None = None\n</code></pre>"},{"location":"API/config/01-simulation-controls.html#passengersim.config.simulation_controls.SimulationSettings.write_raw_files","title":"write_raw_files  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>write_raw_files: bool = False\n</code></pre>"},{"location":"API/config/01-simulation-controls.html#passengersim.config.simulation_controls.SimulationSettings.z_factor","title":"z_factor  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>z_factor: confloat(gt=0, lt=5.0) = 2.0\n</code></pre> <p>Base level demand variance control.</p> <p>See k-factors for more details.</p>"},{"location":"API/config/airlines.html","title":"Airlines","text":""},{"location":"API/config/airlines.html#passengersim.config.airlines.Airline","title":"Airline","text":"<p>             Bases: <code>Named</code></p> <p>Configuration for passengersim.Airline object.</p> Source code in <code>src/passengersim/passengersim/config/airlines.py</code> <pre><code>class Airline(Named, extra=\"forbid\"):\n\"\"\"Configuration for passengersim.Airline object.\"\"\"\nrm_system: str\n\"\"\"Name of the revenue management system used by this airline.\"\"\"\ncontrol: Literal[\"leg\", \"theft\", \"bp\", \"vn\", \"none\"] = \"leg\"\n\"\"\"Control method.\n    Allowed values include:\n    - \"leg\" (default): Uses leg-based controls.\n    - \"theft\": Theft.\n    - \"bp\": Bid price.\n    - \"vn\": Virtual nesting.\n    - \"none\": No controls.\n    \"\"\"\n</code></pre>"},{"location":"API/config/airlines.html#passengersim.config.airlines.Airline.control","title":"control  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>control: Literal[\"leg\", \"theft\", \"bp\", \"vn\", \"none\"] = \"leg\"\n</code></pre> <p>Control method.</p> <p>Allowed values include: - \"leg\" (default): Uses leg-based controls. - \"theft\": Theft. - \"bp\": Bid price. - \"vn\": Virtual nesting. - \"none\": No controls.</p>"},{"location":"API/config/airlines.html#passengersim.config.airlines.Airline.rm_system","title":"rm_system  <code>instance-attribute</code>","text":"<pre><code>rm_system: str\n</code></pre> <p>Name of the revenue management system used by this airline.</p>"},{"location":"API/config/booking_curves.html","title":"Booking Curves","text":""},{"location":"API/config/booking_curves.html#passengersim.config.booking_curves.BookingCurve","title":"BookingCurve","text":"<p>             Bases: <code>Named</code></p> <p>A mathematical description of the relative arrival rate of customers over time.</p> Source code in <code>src/passengersim/passengersim/config/booking_curves.py</code> <pre><code>class BookingCurve(Named, extra=\"forbid\"):\n\"\"\"\n    A mathematical description of the relative arrival rate of customers over time.\n    \"\"\"\ncurve: dict[int, float]\n\"\"\"Define a booking curve.\n    For a given customer type, the booking curve gives the cumulative fraction\n    of those customers who are expected to have already \"arrived\" at any given\n    data collection point (DCP).  An \"arriving\" customer is one who is interested\n    in booking, but may or may not actually purchase a travel product from one\n    of the carriers, depending on the availability of products at the time of their\n    arrival.\n    The values (cumulative fraction of customers arriving) should increase\n    monotonically as the keys (DCPs, e.g. days to departure) decrease.\n    Example\n    -------\n    ```{yaml}\n    - name: business\n      curve:\n        63: 0.01\n        56: 0.02\n        49: 0.05\n        42: 0.13\n        35: 0.19\n        31: 0.23\n        28: 0.29\n        24: 0.35\n        21: 0.45\n        17: 0.54\n        14: 0.67\n        10: 0.79\n        7: 0.86\n        5: 0.91\n        3: 0.96\n        1: 1.0\n    ```\n    \"\"\"\n@field_validator(\"curve\")\ndef _booking_curves_accumulate(cls, v: dict[int, float], info: FieldValidationInfo):\n\"\"\"Check that all curve values do not decrease as DCP keys decrease.\"\"\"\nsorted_dcps = reversed(sorted(v.keys()))\ni = 0\nfor dcp in sorted_dcps:\nassert (\nv[dcp] &gt;= i\n), f\"booking curve {info.data['name']} moves backwards at dcp {dcp}\"\ni = v[dcp]\nreturn v\n</code></pre>"},{"location":"API/config/booking_curves.html#passengersim.config.booking_curves.BookingCurve.curve","title":"curve  <code>instance-attribute</code>","text":"<pre><code>curve: dict[int, float]\n</code></pre> <p>Define a booking curve.</p> <p>For a given customer type, the booking curve gives the cumulative fraction of those customers who are expected to have already \"arrived\" at any given data collection point (DCP).  An \"arriving\" customer is one who is interested in booking, but may or may not actually purchase a travel product from one of the carriers, depending on the availability of products at the time of their arrival.</p> <p>The values (cumulative fraction of customers arriving) should increase monotonically as the keys (DCPs, e.g. days to departure) decrease.</p>"},{"location":"API/config/booking_curves.html#passengersim.config.booking_curves.BookingCurve.curve--example","title":"Example","text":"<pre><code>- name: business\n  curve:\n    63: 0.01\n    56: 0.02\n    49: 0.05\n    42: 0.13\n    35: 0.19\n    31: 0.23\n    28: 0.29\n    24: 0.35\n    21: 0.45\n    17: 0.54\n    14: 0.67\n    10: 0.79\n    7: 0.86\n    5: 0.91\n    3: 0.96\n    1: 1.0\n</code></pre>"},{"location":"API/config/choice_model.html","title":"Choice Models","text":""},{"location":"API/config/choice_model.html#passengersim.config.choice_model.ChoiceModel","title":"ChoiceModel  <code>module-attribute</code>","text":"<pre><code>ChoiceModel = Annotated[\nPodsChoiceModel | LogitChoiceModel,\nField(discriminator=\"kind\"),\n]\n</code></pre> <p>Two types of choice models are available in PassengerSim.</p> <p>Use the <code>kind</code> key to select which kind of choice model you wish to parameterize.</p>"},{"location":"API/config/choice_model.html#passengersim.config.choice_model.LogitChoiceModel","title":"LogitChoiceModel","text":"<p>             Bases: <code>Named</code></p> Source code in <code>src/passengersim/passengersim/config/choice_model.py</code> <pre><code>class LogitChoiceModel(Named, extra=\"forbid\"):\nkind: Literal[\"logit\"]\nintercept: float = 0\n\"\"\"This is the alternative specific constant for the no-purchase alternative.\"\"\"\nnonstop: float = 0\nduration: float = 0\nprice: float = 0\n\"\"\"This is the parameter for the price of each alternative.\"\"\"\ntod_sin2p: float = 0\n\"\"\"Schedule parameter.\n    If $t$ is departure time (in minutes after midnight local time) divided\n    by 1440, this parameter is multiplied by $sin( 2 \\pi t)$ and the result is\n    added to the utility of the particular alternative.\"\"\"\ntod_sin4p: float = 0\n\"\"\"Schedule parameter.\n    If $t$ is departure time (in minutes after midnight local time) divided\n    by 1440, this parameter is multiplied by $sin( 4 \\pi t)$ and the result is\n    added to the utility of the particular alternative.\"\"\"\ntod_sin6p: float = 0\ntod_cos2p: float = 0\ntod_cos4p: float = 0\ntod_cos6p: float = 0\nfree_bag: float = 0\nearly_boarding: float = 0\nsame_day_change: float = 0\n</code></pre>"},{"location":"API/config/choice_model.html#passengersim.config.choice_model.LogitChoiceModel.duration","title":"duration  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>duration: float = 0\n</code></pre>"},{"location":"API/config/choice_model.html#passengersim.config.choice_model.LogitChoiceModel.early_boarding","title":"early_boarding  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>early_boarding: float = 0\n</code></pre>"},{"location":"API/config/choice_model.html#passengersim.config.choice_model.LogitChoiceModel.free_bag","title":"free_bag  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>free_bag: float = 0\n</code></pre>"},{"location":"API/config/choice_model.html#passengersim.config.choice_model.LogitChoiceModel.intercept","title":"intercept  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>intercept: float = 0\n</code></pre> <p>This is the alternative specific constant for the no-purchase alternative.</p>"},{"location":"API/config/choice_model.html#passengersim.config.choice_model.LogitChoiceModel.kind","title":"kind  <code>instance-attribute</code>","text":"<pre><code>kind: Literal['logit']\n</code></pre>"},{"location":"API/config/choice_model.html#passengersim.config.choice_model.LogitChoiceModel.nonstop","title":"nonstop  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>nonstop: float = 0\n</code></pre>"},{"location":"API/config/choice_model.html#passengersim.config.choice_model.LogitChoiceModel.price","title":"price  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>price: float = 0\n</code></pre> <p>This is the parameter for the price of each alternative.</p>"},{"location":"API/config/choice_model.html#passengersim.config.choice_model.LogitChoiceModel.same_day_change","title":"same_day_change  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>same_day_change: float = 0\n</code></pre>"},{"location":"API/config/choice_model.html#passengersim.config.choice_model.LogitChoiceModel.tod_cos2p","title":"tod_cos2p  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>tod_cos2p: float = 0\n</code></pre>"},{"location":"API/config/choice_model.html#passengersim.config.choice_model.LogitChoiceModel.tod_cos4p","title":"tod_cos4p  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>tod_cos4p: float = 0\n</code></pre>"},{"location":"API/config/choice_model.html#passengersim.config.choice_model.LogitChoiceModel.tod_cos6p","title":"tod_cos6p  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>tod_cos6p: float = 0\n</code></pre>"},{"location":"API/config/choice_model.html#passengersim.config.choice_model.LogitChoiceModel.tod_sin2p","title":"tod_sin2p  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>tod_sin2p: float = 0\n</code></pre> <p>Schedule parameter.</p> <p>If \\(t\\) is departure time (in minutes after midnight local time) divided by 1440, this parameter is multiplied by \\(sin( 2 \\pi t)\\) and the result is added to the utility of the particular alternative.</p>"},{"location":"API/config/choice_model.html#passengersim.config.choice_model.LogitChoiceModel.tod_sin4p","title":"tod_sin4p  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>tod_sin4p: float = 0\n</code></pre> <p>Schedule parameter.</p> <p>If \\(t\\) is departure time (in minutes after midnight local time) divided by 1440, this parameter is multiplied by \\(sin( 4 \\pi t)\\) and the result is added to the utility of the particular alternative.</p>"},{"location":"API/config/choice_model.html#passengersim.config.choice_model.LogitChoiceModel.tod_sin6p","title":"tod_sin6p  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>tod_sin6p: float = 0\n</code></pre>"},{"location":"API/config/choice_model.html#passengersim.config.choice_model.PodsChoiceModel","title":"PodsChoiceModel","text":"<p>             Bases: <code>Named</code></p> Source code in <code>src/passengersim/passengersim/config/choice_model.py</code> <pre><code>class PodsChoiceModel(Named, extra=\"forbid\"):\nkind: Literal[\"pods\"]\nemult: float | None = None\nbasefare_mult: float | None = None\nconnect_disutility: float | None = None\npath_quality: tuple[float, float] | None = None\npreferred_airline: tuple[float, float] | None = None\nr1: float | None = None\nr2: float | None = None\nr3: float | None = None\nr4: float | None = None\ntolerance: float | None = None\nnon_stop_multiplier: float | None = None\nconnection_multiplier: float | None = None\n</code></pre>"},{"location":"API/config/choice_model.html#passengersim.config.choice_model.PodsChoiceModel.basefare_mult","title":"basefare_mult  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>basefare_mult: float | None = None\n</code></pre>"},{"location":"API/config/choice_model.html#passengersim.config.choice_model.PodsChoiceModel.connect_disutility","title":"connect_disutility  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>connect_disutility: float | None = None\n</code></pre>"},{"location":"API/config/choice_model.html#passengersim.config.choice_model.PodsChoiceModel.connection_multiplier","title":"connection_multiplier  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>connection_multiplier: float | None = None\n</code></pre>"},{"location":"API/config/choice_model.html#passengersim.config.choice_model.PodsChoiceModel.emult","title":"emult  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>emult: float | None = None\n</code></pre>"},{"location":"API/config/choice_model.html#passengersim.config.choice_model.PodsChoiceModel.kind","title":"kind  <code>instance-attribute</code>","text":"<pre><code>kind: Literal['pods']\n</code></pre>"},{"location":"API/config/choice_model.html#passengersim.config.choice_model.PodsChoiceModel.non_stop_multiplier","title":"non_stop_multiplier  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>non_stop_multiplier: float | None = None\n</code></pre>"},{"location":"API/config/choice_model.html#passengersim.config.choice_model.PodsChoiceModel.path_quality","title":"path_quality  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>path_quality: tuple[float, float] | None = None\n</code></pre>"},{"location":"API/config/choice_model.html#passengersim.config.choice_model.PodsChoiceModel.preferred_airline","title":"preferred_airline  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>preferred_airline: tuple[float, float] | None = None\n</code></pre>"},{"location":"API/config/choice_model.html#passengersim.config.choice_model.PodsChoiceModel.r1","title":"r1  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>r1: float | None = None\n</code></pre>"},{"location":"API/config/choice_model.html#passengersim.config.choice_model.PodsChoiceModel.r2","title":"r2  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>r2: float | None = None\n</code></pre>"},{"location":"API/config/choice_model.html#passengersim.config.choice_model.PodsChoiceModel.r3","title":"r3  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>r3: float | None = None\n</code></pre>"},{"location":"API/config/choice_model.html#passengersim.config.choice_model.PodsChoiceModel.r4","title":"r4  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>r4: float | None = None\n</code></pre>"},{"location":"API/config/choice_model.html#passengersim.config.choice_model.PodsChoiceModel.tolerance","title":"tolerance  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>tolerance: float | None = None\n</code></pre>"},{"location":"API/config/database.html","title":"Database","text":""},{"location":"API/config/database.html#passengersim.config.database.DatabaseConfig","title":"DatabaseConfig","text":"<p>             Bases: <code>BaseModel</code></p> Source code in <code>src/passengersim/passengersim/config/database.py</code> <pre><code>class DatabaseConfig(BaseModel, extra=\"forbid\", validate_assignment=True):\nengine: Literal[\"sqlite\", \"mysql\", None] = \"sqlite\"\n\"\"\"Database engine to use.\n    Currently only `sqlite` is fully implemented.\"\"\"\nfilename: pathlib.Path | None = \"airsim-output.sqlite\"\n\"\"\"Name of file for SQLite output.\"\"\"\nfast: bool = False\n\"\"\"Whether to use pre-compiled SQL write instructions.\"\"\"\npragmas: list[str] = []\n\"\"\"A list of PRAGMA commands to execute upon opening a database connection.\"\"\"\ncommit_count_delay: int | None = 250\n\"\"\"Commit transactions to the database will only be honored this frequently.\n    By setting this number greater than 1, the transaction frequency will be reduced,\n    improving overall runtime performance by storing more data in RAM and writing to\n    persistent storage less frequently.\n    \"\"\"\nwrite_items: set[\nLiteral[\n\"leg\",\n\"bucket\",\n\"fare\",\n\"demand\",\n\"leg_final\",\n\"bucket_final\",\n\"fare_final\",\n\"demand_final\",\n\"bookings\",\n]\n] = {\"leg_final\", \"fare_final\", \"demand_final\", \"bookings\"}\n\"\"\"Which items should be written to the database.\n    The following values can be provided in this set:\n    - *leg*: write every leg to the `leg_detail` table at every DCP.\n    - *leg_final*: write every leg to the `leg_detail` table only at DCP 0.\n    - *bucket*: write every leg bucket to the `leg_bucket_detail` table at every DCP.\n    - *bucket_final*: write every leg bucket to the `leg_bucket_detail` table only\n        at DCP 0.\n    - *fare*: write every fare to the `fare_detail` table at every DCP.\n    - *fare_final*: write every fare to the `fare_detail` table only at DCP 0.\n    - *demand*: write every demand to the `demand_detail` table at every DCP.\n    - *bookings*: store booking summary data at every DCP and write an aggregate\n        summary of bookings by DCP to the `bookings_by_timeframe` table at the end\n        of the simulation.\n    \"\"\"\ndcp_write_hooks: list[Callable] = []\n\"\"\"Additional callable functions that write to the database at each DCP.\n    Each should have a signature matching `f(db, sim, dcp)`.\n    \"\"\"\n@field_validator(\"engine\", mode=\"before\")\ndef _interpret_none(cls, v):\n\"\"\"Allow engine to be \"none\".\"\"\"\nif isinstance(v, str) and v.lower() == \"none\":\nv = None\nreturn v\n</code></pre>"},{"location":"API/config/database.html#passengersim.config.database.DatabaseConfig.commit_count_delay","title":"commit_count_delay  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>commit_count_delay: int | None = 250\n</code></pre> <p>Commit transactions to the database will only be honored this frequently.</p> <p>By setting this number greater than 1, the transaction frequency will be reduced, improving overall runtime performance by storing more data in RAM and writing to persistent storage less frequently.</p>"},{"location":"API/config/database.html#passengersim.config.database.DatabaseConfig.dcp_write_hooks","title":"dcp_write_hooks  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dcp_write_hooks: list[Callable] = []\n</code></pre> <p>Additional callable functions that write to the database at each DCP.</p> <p>Each should have a signature matching <code>f(db, sim, dcp)</code>.</p>"},{"location":"API/config/database.html#passengersim.config.database.DatabaseConfig.engine","title":"engine  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>engine: Literal['sqlite', 'mysql', None] = 'sqlite'\n</code></pre> <p>Database engine to use.</p> <p>Currently only <code>sqlite</code> is fully implemented.</p>"},{"location":"API/config/database.html#passengersim.config.database.DatabaseConfig.fast","title":"fast  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>fast: bool = False\n</code></pre> <p>Whether to use pre-compiled SQL write instructions.</p>"},{"location":"API/config/database.html#passengersim.config.database.DatabaseConfig.filename","title":"filename  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>filename: pathlib.Path | None = 'airsim-output.sqlite'\n</code></pre> <p>Name of file for SQLite output.</p>"},{"location":"API/config/database.html#passengersim.config.database.DatabaseConfig.pragmas","title":"pragmas  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>pragmas: list[str] = []\n</code></pre> <p>A list of PRAGMA commands to execute upon opening a database connection.</p>"},{"location":"API/config/database.html#passengersim.config.database.DatabaseConfig.write_items","title":"write_items  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>write_items: set[\nLiteral[\n\"leg\",\n\"bucket\",\n\"fare\",\n\"demand\",\n\"leg_final\",\n\"bucket_final\",\n\"fare_final\",\n\"demand_final\",\n\"bookings\",\n]\n] = {\"leg_final\", \"fare_final\", \"demand_final\", \"bookings\"}\n</code></pre> <p>Which items should be written to the database.</p> <p>The following values can be provided in this set:</p> <ul> <li>leg: write every leg to the <code>leg_detail</code> table at every DCP.</li> <li>leg_final: write every leg to the <code>leg_detail</code> table only at DCP 0.</li> <li>bucket: write every leg bucket to the <code>leg_bucket_detail</code> table at every DCP.</li> <li>bucket_final: write every leg bucket to the <code>leg_bucket_detail</code> table only     at DCP 0.</li> <li>fare: write every fare to the <code>fare_detail</code> table at every DCP.</li> <li>fare_final: write every fare to the <code>fare_detail</code> table only at DCP 0.</li> <li>demand: write every demand to the <code>demand_detail</code> table at every DCP.</li> <li>bookings: store booking summary data at every DCP and write an aggregate     summary of bookings by DCP to the <code>bookings_by_timeframe</code> table at the end     of the simulation.</li> </ul>"},{"location":"API/config/demands.html","title":"Demands","text":""},{"location":"API/config/demands.html#passengersim.config.demands.Demand","title":"Demand","text":"<p>             Bases: <code>BaseModel</code></p> Source code in <code>src/passengersim/passengersim/config/demands.py</code> <pre><code>class Demand(BaseModel, extra=\"forbid\"):\norig: str\ndest: str\nsegment: str\nbase_demand: float\nreference_fare: float\nchoice_model: str | None = None\n\"\"\"The name of the choice model that is applied for this demand.\"\"\"\ncurve: str | None = None\n\"\"\"The name of the booking curve that is applied for this demand.\n    Each demand is attached to a booking curve that describes the temporal\n    distribution of customer arrivals.\"\"\"\n@property\ndef choice_model_(self):\n\"\"\"Choice model, falling back to segment name if not set explicitly.\"\"\"\nreturn self.choice_model or self.segment\n@field_validator(\"curve\", mode=\"before\")\ndef curve_integer_name(cls, v):\n\"\"\"Booking curves can have integer names, treat as string.\"\"\"\nif isinstance(v, int):\nv = str(v)\nreturn v\n</code></pre>"},{"location":"API/config/demands.html#passengersim.config.demands.Demand.base_demand","title":"base_demand  <code>instance-attribute</code>","text":"<pre><code>base_demand: float\n</code></pre>"},{"location":"API/config/demands.html#passengersim.config.demands.Demand.choice_model","title":"choice_model  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>choice_model: str | None = None\n</code></pre> <p>The name of the choice model that is applied for this demand.</p>"},{"location":"API/config/demands.html#passengersim.config.demands.Demand.choice_model_","title":"choice_model_  <code>property</code>","text":"<pre><code>choice_model_\n</code></pre> <p>Choice model, falling back to segment name if not set explicitly.</p>"},{"location":"API/config/demands.html#passengersim.config.demands.Demand.curve","title":"curve  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>curve: str | None = None\n</code></pre> <p>The name of the booking curve that is applied for this demand.</p> <p>Each demand is attached to a booking curve that describes the temporal distribution of customer arrivals.</p>"},{"location":"API/config/demands.html#passengersim.config.demands.Demand.dest","title":"dest  <code>instance-attribute</code>","text":"<pre><code>dest: str\n</code></pre>"},{"location":"API/config/demands.html#passengersim.config.demands.Demand.orig","title":"orig  <code>instance-attribute</code>","text":"<pre><code>orig: str\n</code></pre>"},{"location":"API/config/demands.html#passengersim.config.demands.Demand.reference_fare","title":"reference_fare  <code>instance-attribute</code>","text":"<pre><code>reference_fare: float\n</code></pre>"},{"location":"API/config/demands.html#passengersim.config.demands.Demand.segment","title":"segment  <code>instance-attribute</code>","text":"<pre><code>segment: str\n</code></pre>"},{"location":"API/config/demands.html#passengersim.config.demands.Demand.curve_integer_name","title":"curve_integer_name","text":"<pre><code>curve_integer_name(v)\n</code></pre> <p>Booking curves can have integer names, treat as string.</p> Source code in <code>src/passengersim/passengersim/config/demands.py</code> <pre><code>@field_validator(\"curve\", mode=\"before\")\ndef curve_integer_name(cls, v):\n\"\"\"Booking curves can have integer names, treat as string.\"\"\"\nif isinstance(v, int):\nv = str(v)\nreturn v\n</code></pre>"},{"location":"API/config/fares.html","title":"Fares","text":""},{"location":"API/config/fares.html#passengersim.config.fares.Fare","title":"Fare","text":"<p>             Bases: <code>BaseModel</code></p> Source code in <code>src/passengersim/passengersim/config/fares.py</code> <pre><code>class Fare(BaseModel, extra=\"forbid\"):\ncarrier: str\norig: str\ndest: str\nbooking_class: str\nprice: float\nadvance_purchase: int\nrestrictions: list[str] = []\n@field_validator(\"restrictions\", mode=\"before\")\ndef allow_unrestricted(cls, v):\n\"\"\"Allow restrictions to be None or missing.\"\"\"\nif v is None:\nv = []\nreturn v\n</code></pre>"},{"location":"API/config/fares.html#passengersim.config.fares.Fare.advance_purchase","title":"advance_purchase  <code>instance-attribute</code>","text":"<pre><code>advance_purchase: int\n</code></pre>"},{"location":"API/config/fares.html#passengersim.config.fares.Fare.booking_class","title":"booking_class  <code>instance-attribute</code>","text":"<pre><code>booking_class: str\n</code></pre>"},{"location":"API/config/fares.html#passengersim.config.fares.Fare.carrier","title":"carrier  <code>instance-attribute</code>","text":"<pre><code>carrier: str\n</code></pre>"},{"location":"API/config/fares.html#passengersim.config.fares.Fare.dest","title":"dest  <code>instance-attribute</code>","text":"<pre><code>dest: str\n</code></pre>"},{"location":"API/config/fares.html#passengersim.config.fares.Fare.orig","title":"orig  <code>instance-attribute</code>","text":"<pre><code>orig: str\n</code></pre>"},{"location":"API/config/fares.html#passengersim.config.fares.Fare.price","title":"price  <code>instance-attribute</code>","text":"<pre><code>price: float\n</code></pre>"},{"location":"API/config/fares.html#passengersim.config.fares.Fare.restrictions","title":"restrictions  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>restrictions: list[str] = []\n</code></pre>"},{"location":"API/config/fares.html#passengersim.config.fares.Fare.allow_unrestricted","title":"allow_unrestricted","text":"<pre><code>allow_unrestricted(v)\n</code></pre> <p>Allow restrictions to be None or missing.</p> Source code in <code>src/passengersim/passengersim/config/fares.py</code> <pre><code>@field_validator(\"restrictions\", mode=\"before\")\ndef allow_unrestricted(cls, v):\n\"\"\"Allow restrictions to be None or missing.\"\"\"\nif v is None:\nv = []\nreturn v\n</code></pre>"},{"location":"API/config/legs.html","title":"Legs","text":""},{"location":"API/config/legs.html#passengersim.config.legs.Leg","title":"Leg","text":"<p>             Bases: <code>BaseModel</code></p> Source code in <code>src/passengersim/passengersim/config/legs.py</code> <pre><code>class Leg(BaseModel, extra=\"forbid\"):\ncarrier: str\nfltno: int\n\"\"\"A unique identifier for this leg.\n    Each leg in a network should have a globally unique identifier (i.e. even\n    if the carrier is different, `fltno` values should be unique.\n    \"\"\"\norig: str\n\"\"\"Origination location for this leg.\"\"\"\ndest: str\n\"\"\"Destination location for this leg.\"\"\"\ndate: datetime = datetime.fromisoformat(\"2022-09-21\")\ndep_time: int\n\"\"\"Departure time for this leg in Unix time.\n    In input files, this can be specified as a string in the format \"HH:MM\",\n    with the hour in 24-hour format.\n    Unix time is the number of seconds since 00:00:00 UTC on 1 Jan 1970.\"\"\"\narr_time: int\n\"\"\"Arrival time for this leg in Unix time.\n    In input files, this can be specified as a string in the format \"HH:MM\",\n    with the hour in 24-hour format.\n    Unix time is the number of seconds since 00:00:00 UTC on 1 Jan 1970.\"\"\"\ncapacity: int\ndistance: float | None = None\n@field_validator(\"date\", mode=\"before\")\ndef _date_from_string(cls, v):\nif isinstance(v, str):\nv = datetime.fromisoformat(v)\nreturn v\n@field_validator(\"dep_time\", \"arr_time\", mode=\"before\")\ndef _timestring_to_int(cls, v, info: FieldValidationInfo):\nif isinstance(v, str) and \":\" in v:\ndep_time_str = v.split(\":\")\nhh, mm = int(dep_time_str[0]), int(dep_time_str[1])\nv = create_timestamp(info.data[\"date\"], 0, hh, mm)\nif info.field_name == \"arr_time\":\nif v &lt; info.data[\"dep_time\"]:\nv += 86400  # add a day (in seconds) as arr time is next day\nreturn v\n</code></pre>"},{"location":"API/config/legs.html#passengersim.config.legs.Leg.arr_time","title":"arr_time  <code>instance-attribute</code>","text":"<pre><code>arr_time: int\n</code></pre> <p>Arrival time for this leg in Unix time.</p> <p>In input files, this can be specified as a string in the format \"HH:MM\", with the hour in 24-hour format.</p> <p>Unix time is the number of seconds since 00:00:00 UTC on 1 Jan 1970.</p>"},{"location":"API/config/legs.html#passengersim.config.legs.Leg.capacity","title":"capacity  <code>instance-attribute</code>","text":"<pre><code>capacity: int\n</code></pre>"},{"location":"API/config/legs.html#passengersim.config.legs.Leg.carrier","title":"carrier  <code>instance-attribute</code>","text":"<pre><code>carrier: str\n</code></pre>"},{"location":"API/config/legs.html#passengersim.config.legs.Leg.date","title":"date  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>date: datetime = datetime.fromisoformat('2022-09-21')\n</code></pre>"},{"location":"API/config/legs.html#passengersim.config.legs.Leg.dep_time","title":"dep_time  <code>instance-attribute</code>","text":"<pre><code>dep_time: int\n</code></pre> <p>Departure time for this leg in Unix time.</p> <p>In input files, this can be specified as a string in the format \"HH:MM\", with the hour in 24-hour format.</p> <p>Unix time is the number of seconds since 00:00:00 UTC on 1 Jan 1970.</p>"},{"location":"API/config/legs.html#passengersim.config.legs.Leg.dest","title":"dest  <code>instance-attribute</code>","text":"<pre><code>dest: str\n</code></pre> <p>Destination location for this leg.</p>"},{"location":"API/config/legs.html#passengersim.config.legs.Leg.distance","title":"distance  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>distance: float | None = None\n</code></pre>"},{"location":"API/config/legs.html#passengersim.config.legs.Leg.fltno","title":"fltno  <code>instance-attribute</code>","text":"<pre><code>fltno: int\n</code></pre> <p>A unique identifier for this leg.</p> <p>Each leg in a network should have a globally unique identifier (i.e. even if the carrier is different, <code>fltno</code> values should be unique.</p>"},{"location":"API/config/legs.html#passengersim.config.legs.Leg.orig","title":"orig  <code>instance-attribute</code>","text":"<pre><code>orig: str\n</code></pre> <p>Origination location for this leg.</p>"},{"location":"API/config/legs.html#passengersim.config.legs.create_timestamp","title":"create_timestamp","text":"<pre><code>create_timestamp(base_date, offset, hh, mm) -&gt; int\n</code></pre> <p>Create Unix time from base date, offset (days) and time</p> Source code in <code>src/passengersim/passengersim/config/legs.py</code> <pre><code>def create_timestamp(base_date, offset, hh, mm) -&gt; int:\n\"\"\"Create Unix time from base date, offset (days) and time\"\"\"\ntd = timedelta(days=offset, hours=hh, minutes=mm)\ntmp = base_date + td\nreturn int(time.mktime(tmp.timetuple()))\n</code></pre>"},{"location":"API/config/named.html","title":"Named","text":"<p>This module contains utilities for managing named objects.</p>"},{"location":"API/config/named.html#passengersim.config.named.DictOfNamed","title":"DictOfNamed  <code>module-attribute</code>","text":"<pre><code>DictOfNamed = Annotated[\ndict[str, T], BeforeValidator(enforce_name)\n]\n</code></pre>"},{"location":"API/config/named.html#passengersim.config.named.T","title":"T  <code>module-attribute</code>","text":"<pre><code>T = TypeVar('T', bound=Named)\n</code></pre>"},{"location":"API/config/named.html#passengersim.config.named.Named","title":"Named","text":"<p>             Bases: <code>BaseModel</code></p> Source code in <code>src/passengersim/passengersim/config/named.py</code> <pre><code>class Named(BaseModel):\nname: str\n</code></pre>"},{"location":"API/config/named.html#passengersim.config.named.Named.name","title":"name  <code>instance-attribute</code>","text":"<pre><code>name: str\n</code></pre>"},{"location":"API/config/named.html#passengersim.config.named.enforce_name","title":"enforce_name","text":"<pre><code>enforce_name(x: dict[str, T] | list[T]) -&gt; dict[str, T]\n</code></pre> <p>Enforce that each item has a unique name.</p> <p>If you provide a list, this will ensure that each item in the list has a name. If you provide a dict, the names are given by the keys of the dictionary, and this will ensure that for each value, if it also has an explicitly defined name, that name matches its key-derived name.</p> Source code in <code>src/passengersim/passengersim/config/named.py</code> <pre><code>def enforce_name(x: dict[str, T] | list[T]) -&gt; dict[str, T]:\n\"\"\"Enforce that each item has a unique name.\n    If you provide a list, this will ensure that each item in the list has a name.\n    If you provide a dict, the names are given by the keys of the dictionary, and\n    this will ensure that for each value, if it also has an explicitly defined name,\n    that name matches its key-derived name.\n    \"\"\"\nif isinstance(x, list):\nx_ = {}\nfor n, i in enumerate(x):\nk = i.get(\"name\")\nif k is None:\nraise ValueError(f\"missing name in position {n}\")\nx_[k] = i\nx = x_\nfor k, v in x.items():\nif \"name\" not in v or not v[\"name\"]:\nv[\"name\"] = k\nif v[\"name\"] != k:\nraise ValueError(\"explict name does not match key\")\nreturn x\n</code></pre>"},{"location":"API/config/paths.html","title":"Paths","text":""},{"location":"API/config/paths.html#passengersim.config.paths.Path","title":"Path","text":"<p>             Bases: <code>BaseModel</code></p> Source code in <code>src/passengersim/passengersim/config/paths.py</code> <pre><code>class Path(BaseModel, extra=\"forbid\"):\norig: str\ndest: str\npath_quality_index: float\nlegs: list[int]\n\"\"\"Flight numbers of legs comprising the path.\"\"\"\n@field_validator(\"legs\", mode=\"before\")\ndef allow_single_leg(cls, v):\n\"\"\"Allow a single leg path to be just an int not a list of one int.\"\"\"\nif isinstance(v, int):\nv = [v]\nreturn v\n@field_validator(\"legs\")\ndef at_least_one_leg(cls, v):\n\"\"\"There must be at least one leg.\"\"\"\nif len(v) &lt; 1:\nraise ValueError(\"path must have at least one leg\")\nreturn v\n</code></pre>"},{"location":"API/config/paths.html#passengersim.config.paths.Path.dest","title":"dest  <code>instance-attribute</code>","text":"<pre><code>dest: str\n</code></pre>"},{"location":"API/config/paths.html#passengersim.config.paths.Path.legs","title":"legs  <code>instance-attribute</code>","text":"<pre><code>legs: list[int]\n</code></pre> <p>Flight numbers of legs comprising the path.</p>"},{"location":"API/config/paths.html#passengersim.config.paths.Path.orig","title":"orig  <code>instance-attribute</code>","text":"<pre><code>orig: str\n</code></pre>"},{"location":"API/config/paths.html#passengersim.config.paths.Path.path_quality_index","title":"path_quality_index  <code>instance-attribute</code>","text":"<pre><code>path_quality_index: float\n</code></pre>"},{"location":"API/config/paths.html#passengersim.config.paths.Path.allow_single_leg","title":"allow_single_leg","text":"<pre><code>allow_single_leg(v)\n</code></pre> <p>Allow a single leg path to be just an int not a list of one int.</p> Source code in <code>src/passengersim/passengersim/config/paths.py</code> <pre><code>@field_validator(\"legs\", mode=\"before\")\ndef allow_single_leg(cls, v):\n\"\"\"Allow a single leg path to be just an int not a list of one int.\"\"\"\nif isinstance(v, int):\nv = [v]\nreturn v\n</code></pre>"},{"location":"API/config/paths.html#passengersim.config.paths.Path.at_least_one_leg","title":"at_least_one_leg","text":"<pre><code>at_least_one_leg(v)\n</code></pre> <p>There must be at least one leg.</p> Source code in <code>src/passengersim/passengersim/config/paths.py</code> <pre><code>@field_validator(\"legs\")\ndef at_least_one_leg(cls, v):\n\"\"\"There must be at least one leg.\"\"\"\nif len(v) &lt; 1:\nraise ValueError(\"path must have at least one leg\")\nreturn v\n</code></pre>"},{"location":"API/config/rm_steps.html","title":"RM Steps","text":""},{"location":"API/config/rm_steps.html#passengersim.config.rm_steps.DummyStep","title":"DummyStep","text":"<p>             Bases: <code>RmStepBase</code></p> Source code in <code>src/passengersim/passengersim/config/rm_steps.py</code> <pre><code>class DummyStep(RmStepBase):\nstep_type: Literal[\"dummy\"]\n</code></pre>"},{"location":"API/config/rm_steps.html#passengersim.config.rm_steps.DummyStep.step_type","title":"step_type  <code>instance-attribute</code>","text":"<pre><code>step_type: Literal['dummy']\n</code></pre>"},{"location":"API/config/rm_steps.html#passengersim.config.rm_steps.RmStepBase","title":"RmStepBase","text":"<p>             Bases: <code>BaseModel</code></p> <p>Base class for RmSteps.</p> <p>Every non-abstract derived class must have a <code>step_type</code> class attribute, annotated with a <code>Literal</code> value type.</p> <p>See <code>DummyStep</code> below for an example.</p> Source code in <code>src/passengersim/passengersim/config/rm_steps.py</code> <pre><code>class RmStepBase(BaseModel, extra=\"forbid\"):\n\"\"\"\n    Base class for RmSteps.\n    Every non-abstract derived class must have a `step_type` class attribute,\n    annotated with a `Literal` value type.\n    See `DummyStep` below for an example.\n    \"\"\"\n__subclasses: ClassVar[set[type[RmStepBase]]] = set()\ndef __init_subclass__(cls, **kwargs):\n\"\"\"Capture a list of all concrete subclasses, including nested levels\"\"\"\nsuper().__init_subclass__(**kwargs)\nif inspect.isabstract(cls):\nreturn  # do not consider intermediate abstract base classes\nannotations = inspect.get_annotations(cls, eval_str=True)\nassert \"step_type\" in annotations, \"step_type not in annotations\"\nannotation_step_type = typing.get_origin(annotations[\"step_type\"])\nassert annotation_step_type == Literal, (\nf\"annotation {annotations['step_type']} for `{cls.__name__}.step_type` \"\nf\"is not Literal but {annotation_step_type}\"\n)\nfound_step_type = typing.get_args(annotations[\"step_type\"])[0]\nif cls.__name__.lower().endswith(\"step\"):\nassert found_step_type == cls.__name__.lower()[:-4], (\nf\"annotation Literal value {found_step_type!r} \"\nf\"for `{cls.__name__}.step_type` is not the same as the class name \"\nf\"(omitting 'step' suffix)\"\n)\nelse:\nassert found_step_type == cls.__name__.lower(), (\nf\"annotation Literal value {found_step_type!r} \"\nf\"for `{cls.__name__}.step_type` is not the same as the class name\"\n)\ncls.__subclasses.add(cls)\n@classmethod\ndef as_pydantic_field(cls):\n\"\"\"Pydantic field type as a union of all subclasses, discriminated on step_type.\"\"\"\nif len(cls.__subclasses) &gt; 1:\nreturn Annotated[\nreduce(operator.__or__, cls.__subclasses),\nField(discriminator=\"step_type\"),\n]\nelse:  # only the DummyStep\nreturn Annotated[reduce(operator.__or__, cls.__subclasses), Field()]\ndef _factory(self):\n\"\"\"Generate a deep copy of this RmStep.\"\"\"\nreturn self.model_copy(deep=True)\n</code></pre>"},{"location":"API/config/rm_steps.html#passengersim.config.rm_steps.RmStepBase.__subclasses","title":"__subclasses  <code>class-attribute</code>","text":"<pre><code>__subclasses: set[type[RmStepBase]] = set()\n</code></pre>"},{"location":"API/config/rm_steps.html#passengersim.config.rm_steps.RmStepBase.__init_subclass__","title":"__init_subclass__","text":"<pre><code>__init_subclass__(**kwargs)\n</code></pre> <p>Capture a list of all concrete subclasses, including nested levels</p> Source code in <code>src/passengersim/passengersim/config/rm_steps.py</code> <pre><code>def __init_subclass__(cls, **kwargs):\n\"\"\"Capture a list of all concrete subclasses, including nested levels\"\"\"\nsuper().__init_subclass__(**kwargs)\nif inspect.isabstract(cls):\nreturn  # do not consider intermediate abstract base classes\nannotations = inspect.get_annotations(cls, eval_str=True)\nassert \"step_type\" in annotations, \"step_type not in annotations\"\nannotation_step_type = typing.get_origin(annotations[\"step_type\"])\nassert annotation_step_type == Literal, (\nf\"annotation {annotations['step_type']} for `{cls.__name__}.step_type` \"\nf\"is not Literal but {annotation_step_type}\"\n)\nfound_step_type = typing.get_args(annotations[\"step_type\"])[0]\nif cls.__name__.lower().endswith(\"step\"):\nassert found_step_type == cls.__name__.lower()[:-4], (\nf\"annotation Literal value {found_step_type!r} \"\nf\"for `{cls.__name__}.step_type` is not the same as the class name \"\nf\"(omitting 'step' suffix)\"\n)\nelse:\nassert found_step_type == cls.__name__.lower(), (\nf\"annotation Literal value {found_step_type!r} \"\nf\"for `{cls.__name__}.step_type` is not the same as the class name\"\n)\ncls.__subclasses.add(cls)\n</code></pre>"},{"location":"API/config/rm_steps.html#passengersim.config.rm_steps.RmStepBase.as_pydantic_field","title":"as_pydantic_field  <code>classmethod</code>","text":"<pre><code>as_pydantic_field()\n</code></pre> <p>Pydantic field type as a union of all subclasses, discriminated on step_type.</p> Source code in <code>src/passengersim/passengersim/config/rm_steps.py</code> <pre><code>@classmethod\ndef as_pydantic_field(cls):\n\"\"\"Pydantic field type as a union of all subclasses, discriminated on step_type.\"\"\"\nif len(cls.__subclasses) &gt; 1:\nreturn Annotated[\nreduce(operator.__or__, cls.__subclasses),\nField(discriminator=\"step_type\"),\n]\nelse:  # only the DummyStep\nreturn Annotated[reduce(operator.__or__, cls.__subclasses), Field()]\n</code></pre>"},{"location":"API/config/rm_systems.html","title":"RM Systems","text":""},{"location":"API/config/rm_systems.html#passengersim.config.rm_systems.RmStep","title":"RmStep  <code>module-attribute</code>","text":"<pre><code>RmStep = RmStepBase.as_pydantic_field()\n</code></pre>"},{"location":"API/config/rm_systems.html#passengersim.config.rm_systems.RmSystem","title":"RmSystem","text":"<p>             Bases: <code>Named</code></p> Source code in <code>src/passengersim/passengersim/config/rm_systems.py</code> <pre><code>class RmSystem(Named, extra=\"forbid\"):\nsteps: list[RmStep]\n</code></pre>"},{"location":"API/config/rm_systems.html#passengersim.config.rm_systems.RmSystem.steps","title":"steps  <code>instance-attribute</code>","text":"<pre><code>steps: list[RmStep]\n</code></pre>"},{"location":"API/config/snapshot_filter.html","title":"Snapshot filter","text":""},{"location":"API/config/snapshot_filter.html#passengersim.config.snapshot_filter.SnapshotFilter","title":"SnapshotFilter","text":"<p>             Bases: <code>BaseModel</code></p> Source code in <code>src/passengersim/passengersim/config/snapshot_filter.py</code> <pre><code>class SnapshotFilter(BaseModel):\ntype: Literal[\n\"forecast\", \"leg_untruncation\", \"path_untruncation\", \"rm\", \"pro_bp\", None\n] = None\ntitle: str = \"\"\nairline: str = \"\"\nsample: list[int] = []\ndcp: list[int] = []\norig: list[str] = []\ndest: list[str] = []\nflt_no: list[int] = []\nlogger: str | None = None\n@field_validator(\"sample\", \"dcp\", \"orig\", \"dest\", \"flt_no\", mode=\"before\")\ndef _allow_singletons(cls, v):\n\"\"\"Allow a singleton value that is converted to a list of one item.\"\"\"\nif not isinstance(v, list | tuple):\nv = [v]\nreturn v\ndef run(self, sim, leg=None, path=None):\n# Check the filter conditions\ninfo = \"\"\nif len(self.sample) &gt; 0 and sim.sample not in self.sample:\nreturn False\ninfo += f\"  sample={sim.sample}\"\nif len(self.dcp) &gt; 0 and sim.last_dcp not in self.dcp:\nreturn False\ninfo += f\"  dcp={sim.last_dcp}\"\nif leg is not None:\nif len(self.orig) &gt; 0 and leg.orig not in self.orig:\nreturn False\ninfo += f\"  orig={leg.orig}\"\nif len(self.dest) &gt; 0 and leg.dest not in self.dest:\nreturn False\ninfo += f\"  dest={leg.dest}\"\nif len(self.flt_no) &gt; 0 and leg.flt_no not in self.flt_no:\nreturn False\ninfo += f\"  flt_no={leg.flt_no}\"\nif path is not None:\nif len(self.orig) &gt; 0 and path.orig not in self.orig:\nreturn False\ninfo += f\"  orig={path.orig}\"\nif len(self.dest) &gt; 0 and path.dest not in self.dest:\nreturn False\ninfo += f\"  dest={path.dest}\"\nif len(self.flt_no) &gt; 0 and path.get_leg_fltno(0) not in self.flt_no:\nreturn False\ninfo += f\"  flt_no={path.get_leg_fltno(0)}\"\n# Now do something\nif len(self.title) &gt; 0:\nif self.logger:\nlogging.getLogger(self.logger)\nprint(f\"{self.title}:{info}\")\nif self.type in [\"leg_untruncation\", \"path_untruncation\"]:\nreturn (\nTrue  # We have a match but, for now, the caller will print the output\n)\nelif self.type == \"forecast\":\npass  # Haven't decided on the approach to this yet\nelif self.type == \"rm\":\nleg.print_bucket_detail()\nelif self.type == \"pro_bp\":\nreturn True\n</code></pre>"},{"location":"API/config/snapshot_filter.html#passengersim.config.snapshot_filter.SnapshotFilter.airline","title":"airline  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>airline: str = ''\n</code></pre>"},{"location":"API/config/snapshot_filter.html#passengersim.config.snapshot_filter.SnapshotFilter.dcp","title":"dcp  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dcp: list[int] = []\n</code></pre>"},{"location":"API/config/snapshot_filter.html#passengersim.config.snapshot_filter.SnapshotFilter.dest","title":"dest  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dest: list[str] = []\n</code></pre>"},{"location":"API/config/snapshot_filter.html#passengersim.config.snapshot_filter.SnapshotFilter.flt_no","title":"flt_no  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>flt_no: list[int] = []\n</code></pre>"},{"location":"API/config/snapshot_filter.html#passengersim.config.snapshot_filter.SnapshotFilter.logger","title":"logger  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>logger: str | None = None\n</code></pre>"},{"location":"API/config/snapshot_filter.html#passengersim.config.snapshot_filter.SnapshotFilter.orig","title":"orig  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>orig: list[str] = []\n</code></pre>"},{"location":"API/config/snapshot_filter.html#passengersim.config.snapshot_filter.SnapshotFilter.sample","title":"sample  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>sample: list[int] = []\n</code></pre>"},{"location":"API/config/snapshot_filter.html#passengersim.config.snapshot_filter.SnapshotFilter.title","title":"title  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>title: str = ''\n</code></pre>"},{"location":"API/config/snapshot_filter.html#passengersim.config.snapshot_filter.SnapshotFilter.type","title":"type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>type: Literal[\n\"forecast\",\n\"leg_untruncation\",\n\"path_untruncation\",\n\"rm\",\n\"pro_bp\",\nNone,\n] = None\n</code></pre>"},{"location":"API/config/snapshot_filter.html#passengersim.config.snapshot_filter.SnapshotFilter.run","title":"run","text":"<pre><code>run(sim, leg = None, path = None)\n</code></pre> Source code in <code>src/passengersim/passengersim/config/snapshot_filter.py</code> <pre><code>def run(self, sim, leg=None, path=None):\n# Check the filter conditions\ninfo = \"\"\nif len(self.sample) &gt; 0 and sim.sample not in self.sample:\nreturn False\ninfo += f\"  sample={sim.sample}\"\nif len(self.dcp) &gt; 0 and sim.last_dcp not in self.dcp:\nreturn False\ninfo += f\"  dcp={sim.last_dcp}\"\nif leg is not None:\nif len(self.orig) &gt; 0 and leg.orig not in self.orig:\nreturn False\ninfo += f\"  orig={leg.orig}\"\nif len(self.dest) &gt; 0 and leg.dest not in self.dest:\nreturn False\ninfo += f\"  dest={leg.dest}\"\nif len(self.flt_no) &gt; 0 and leg.flt_no not in self.flt_no:\nreturn False\ninfo += f\"  flt_no={leg.flt_no}\"\nif path is not None:\nif len(self.orig) &gt; 0 and path.orig not in self.orig:\nreturn False\ninfo += f\"  orig={path.orig}\"\nif len(self.dest) &gt; 0 and path.dest not in self.dest:\nreturn False\ninfo += f\"  dest={path.dest}\"\nif len(self.flt_no) &gt; 0 and path.get_leg_fltno(0) not in self.flt_no:\nreturn False\ninfo += f\"  flt_no={path.get_leg_fltno(0)}\"\n# Now do something\nif len(self.title) &gt; 0:\nif self.logger:\nlogging.getLogger(self.logger)\nprint(f\"{self.title}:{info}\")\nif self.type in [\"leg_untruncation\", \"path_untruncation\"]:\nreturn (\nTrue  # We have a match but, for now, the caller will print the output\n)\nelif self.type == \"forecast\":\npass  # Haven't decided on the approach to this yet\nelif self.type == \"rm\":\nleg.print_bucket_detail()\nelif self.type == \"pro_bp\":\nreturn True\n</code></pre>"},{"location":"Tutorials/demo-3mkt-2carrier.nbconvert.html","title":"Three Market Two Carrier Test","text":"In\u00a0[1]: Copied! <pre>import passengersim as sw\n</pre> import passengersim as sw In\u00a0[2]: Copied! <pre>input_file = sw.demo_network(\"3mkt-2carrier\")\n</pre> input_file = sw.demo_network(\"3mkt-2carrier\") In\u00a0[3]: Copied! <pre>input_file\n</pre> input_file Out[3]: <pre>PosixPath('/Users/jpn/Git/passengersim-core/src/passengersim/passengersim/networks/3mkt-2carrier.yaml')</pre> In\u00a0[4]: Copied! <pre>sim = sw.Simulation.from_yaml(input_file)\n</pre> sim = sw.Simulation.from_yaml(input_file) <pre>Airline = AL1, control = leg\nAirline = AL2, control = leg\n[2023-08-14 20:17:25,774] passengersim.database.database.INFO: connecting to sqlite database: airsim-output.sqlite\n[2023-08-14 20:17:25,774] passengersim.database.database.INFO: initializing sqlite tables\n</pre> In\u00a0[5]: Copied! <pre>sim.sim.snapshot_filters\n</pre> sim.sim.snapshot_filters Out[5]: <pre>[SnapshotFilter(type='path_untruncation', title='Snapshot of path untruncation', airline='', sample=[35], dcp=[0], orig=[], dest=[], flt_no=[202], logger=None),\n SnapshotFilter(type='rm', title='Testing the snapshot filters', airline='', sample=[20, 30], dcp=[7], orig=[], dest=[], flt_no=[101], logger=None),\n SnapshotFilter(type='pro_bp', title='Testing the snapshot filters again', airline='', sample=[20, 30], dcp=[56], orig=[], dest=[], flt_no=[201], logger=None)]</pre> In\u00a0[6]: Copied! <pre>summary = sim.run(log_reports=False)\n</pre> summary = sim.run(log_reports=False) <pre>[2023-08-14 20:17:25,780] passengersim.database.database.INFO: deleting existing scenario 'Junk' from database\n[2023-08-14 20:17:25,781] passengersim.INFO: building connections\n[2023-08-14 20:17:25,781] passengersim.INFO: Connections done, num_paths = 24\nTesting the snapshot filters again:  sample=20  dcp=56\nTesting the snapshot filters:  sample=20  dcp=7  orig=BOS  dest=ORD  flt_no=101\nCoreProBP initialize *******************\nLeg1: AL2 201: BOS-ORD, bp=0.0206261, contrib=324.979, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=0.0206261, contrib=249.979, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=0.0206261, contrib=199.979, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=0.00107305, contrib=324.999, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=0.00107305, contrib=249.999, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=0.00107305, contrib=199.999, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.00120447, contrib=324.999, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.00120447, contrib=249.999, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.00120447, contrib=199.999, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=0.0084792, contrib=324.992, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=0.0084792, contrib=249.992, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=0.0084792, contrib=199.992, to path=BOS-LAX\n******************** CoreProBP iteration 0 *******************\nClass , sold=0, n=1, mu=0, agg_fare=324.979, rev_low=249.979, agg_mu=6.94501, aTesting the snapshot filters again:  sample=30  dcp=56\nTesting the snapshot filters:  sample=30  dcp=7  orig=BOS  dest=ORD  flt_no=101\ngg_sigma=1.92262, prot=5.52944, auth=87\nClass , sold=0, n=2, mu=0, agg_fare=288.552, rev_low=199.979, agg_mu=13.5037, agg_sigma=3.24173, prot=11.8683, auth=81\nClass , sold=0, n=3, mu=0, agg_fare=236.293, rev_low=150, agg_mu=32.9366, agg_sigma=8.89588, prot=29.8711, auth=75\nClass , sold=0, n=4, mu=0, agg_fare=222.704, rev_low=125, agg_mu=39.0927, agg_sigma=9.09879, prot=37.6895, auth=57\nClass , sold=0, n=5, mu=0, agg_fare=213.064, rev_low=100, agg_mu=43.3724, agg_sigma=9.21978, prot=44.0816, auth=49\n***** ProBP, after EMSRb *****\nFlight = 201, BOS-ORD, cap = 100, sold = 13, bid_price = 0.00120447\n    Org-Dst  Cls   Price    Dmd    Contrib   Bkt  Prot  Alloc\n    BOS-LAX   Y3  325.00    6.95    324.98     0      6     87\n    BOS-LAX   Y4  250.00    6.56    249.98     1     12     81\n    BOS-LAX   Y5  200.00   19.43    199.98     2     30     75\n    BOS-ORD   Y3  150.00    6.16    150.00     3     38     57\n    BOS-ORD   Y4  125.00    4.28    125.00     4     44     49\n    BOS-ORD   Y5  10Snapshot of path untruncation:  sample=35  dcp=0  orig=BOS  dest=LAX  flt_no=202\nSnapshot of path untruncation:  sample=35  dcp=0  orig=BOS  dest=ORD  flt_no=202\n0.00   14.68    100.00     5      0     43\n    EMSRc, flt=201, \u03bc=43.37, \u03c3=9.22, z=4.73, agg_fare=213.06, cap=100, prob=0.00, emsr_c=0.00\nLeg1: AL2 201: BOS-ORD, bp=0.00, contrib=325.00, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=0.00, contrib=250.00, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=0.00, contrib=200.00, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=0.00, contrib=325.00, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=0.00, contrib=250.00, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=0.00, contrib=200.00, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.00, contrib=325.00, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.00, contrib=250.00, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.00, contrib=200.00, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=0.00, contrib=325.00, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=0.00, contrib=250.00, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=0.00, contrib=200.00, to path=BOS-LAX\n***** ProBP, after displacement adjustment *****\nFlight = 201, BOS-ORD, cap = 100, sold = 13, bid_price = 0.00\n    Org-Dst  Cls   Price    Dmd    Contrib   Bkt  Prot  Alloc\n    BOS-LAX   Y3  325.00    6.95    325.00     0      6     87\n    BOS-LAX   Y4  250.00    6.56    250.00     1     12     81\n    BOS-LAX   Y5  200.00   19.43    200.00     2     30     75\n    BOS-ORD   Y3  150.00    6.16    150.00     3     38     57\n    BOS-ORD   Y4  125.00    4.28    125.00     4     44     49\n    BOS-ORD   Y5  100.00   14.68    100.00     5      0     43\n******************** CoreProBP iteration 1 *******************\nClass , sold=0, n=1, mu=0.00, agg_fare=325.00, rev_low=250.00, agg_mu=6.95, agg_sigma=1.92, prot=5.53, auth=87\nClass , sold=0, n=2, mu=0.00, agg_fare=288.57, rev_low=200.00, agg_mu=13.50, agg_sigma=3.24, prot=11.87, auth=81\nClass , sold=0, n=3, mu=0.00, agg_fare=236.31, rev_low=150.00, agg_mu=32.94, agg_sigma=8.90, prot=29.87, auth=75\nClass , sold=0, n=4, mu=0.00, agg_fare=222.72, rev_low=125.00, agg_mu=39.09, agg_sigma=9.10, prot=37.69, auth=57\nClass , sold=0, n=5, mu=0.00, agg_fare=213.08, rev_low=100.00, agg_mu=43.37, agg_sigma=9.22, prot=44.08, auth=49\n***** ProBP, after EMSRb *****\nFlight = 201, BOS-ORD, cap = 100, sold = 13, bid_price = 0.00\n    Org-Dst  Cls   Price    Dmd    Contrib   Bkt  Prot  Alloc\n    BOS-LAX   Y3  325.00    6.95    325.00     0      6     87\n    BOS-LAX   Y4  250.00    6.56    250.00     1     12     81\n    BOS-LAX   Y5  200.00   19.43    200.00     2     30     75\n    BOS-ORD   Y3  150.00    6.16    150.00     3     38     57\n    BOS-ORD   Y4  125.00    4.28    125.00     4     44     49\n    BOS-ORD   Y5  100.00   14.68    100.00     5      0     43\n    EMSRc, flt=201, \u03bc=43.37, \u03c3=9.22, z=4.73, agg_fare=213.08, cap=100, prob=0.00, emsr_c=0.00\nLeg1: AL2 201: BOS-ORD, bp=0.00, contrib=325.00, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=0.00, contrib=250.00, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=0.00, contrib=200.00, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=0.00, contrib=325.00, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=0.00, contrib=250.00, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=0.00, contrib=200.00, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.00, contrib=325.00, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.00, contrib=250.00, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.00, contrib=200.00, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=0.00, contrib=325.00, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=0.00, contrib=250.00, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=0.00, contrib=200.00, to path=BOS-LAX\n***** ProBP, after displacement adjustment *****\nFlight = 201, BOS-ORD, cap = 100, sold = 13, bid_price = 0.00\n    Org-Dst  Cls   Price    Dmd    Contrib   Bkt  Prot  Alloc\n    BOS-LAX   Y3  325.00    6.95    325.00     0      6     87\n    BOS-LAX   Y4  250.00    6.56    250.00     1     12     81\n    BOS-LAX   Y5  200.00   19.43    200.00     2     30     75\n    BOS-ORD   Y3  150.00    6.16    150.00     3     38     57\n    BOS-ORD   Y4  125.00    4.28    125.00     4     44     49\n    BOS-ORD   Y5  100.00   14.68    100.00     5      0     43\n******************** CoreProBP iteration 2 *******************\nClass , sold=0, n=1, mu=0.00, agg_fare=325.00, rev_low=250.00, agg_mu=6.95, agg_sigma=1.92, prot=5.53, auth=87\nClass , sold=0, n=2, mu=0.00, agg_fare=288.57, rev_low=200.00, agg_mu=13.50, agg_sigma=3.24, prot=11.87, auth=81\nClass , sold=0, n=3, mu=0.00, agg_fare=236.31, rev_low=150.00, agg_mu=32.94, agg_sigma=8.90, prot=29.87, auth=75\nClass , sold=0, n=4, mu=0.00, agg_fare=222.72, rev_low=125.00, agg_mu=39.09, agg_sigma=9.10, prot=37.69, auth=57\nClass , sold=0, n=5, mu=0.00, agg_fare=213.08, rev_low=100.00, agg_mu=43.37, agg_sigma=9.22, prot=44.08, auth=49\n***** ProBP, after EMSRb *****\nFlight = 201, BOS-ORD, cap = 100, sold = 13, bid_price = 0.00\n    Org-Dst  Cls   Price    Dmd    Contrib   Bkt  Prot  Alloc\n    BOS-LAX   Y3  325.00    6.95    325.00     0      6     87\n    BOS-LAX   Y4  250.00    6.56    250.00     1     12     81\n    BOS-LAX   Y5  200.00   19.43    200.00     2     30     75\n    BOS-ORD   Y3  150.00    6.16    150.00     3     38     57\n    BOS-ORD   Y4  125.00    4.28    125.00     4     44     49\n    BOS-ORD   Y5  100.00   14.68    100.00     5      0     43\n    EMSRc, flt=201, \u03bc=43.37, \u03c3=9.22, z=4.73, agg_fare=213.08, cap=100, prob=0.00, emsr_c=0.00\nLeg1: AL2 201: BOS-ORD, bp=0.00, contrib=325.00, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=0.00, contrib=250.00, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=0.00, contrib=200.00, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=0.00, contrib=325.00, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=0.00, contrib=250.00, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=0.00, contrib=200.00, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.00, contrib=325.00, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.00, contrib=250.00, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.00, contrib=200.00, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=0.00, contrib=325.00, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=0.00, contrib=250.00, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=0.00, contrib=200.00, to path=BOS-LAX\n***** ProBP, after displacement adjustment *****\nFlight = 201, BOS-ORD, cap = 100, sold = 13, bid_price = 0.00\n    Org-Dst  Cls   Price    Dmd    Contrib   Bkt  Prot  Alloc\n    BOS-LAX   Y3  325.00    6.95    325.00     0      6     87\n    BOS-LAX   Y4  250.00    6.56    250.00     1     12     81\n    BOS-LAX   Y5  200.00   19.43    200.00     2     30     75\n    BOS-ORD   Y3  150.00    6.16    150.00     3     38     57\n    BOS-ORD   Y4  125.00    4.28    125.00     4     44     49\n    BOS-ORD   Y5  100.00   14.68    100.00     5      0     43\nProBP converged in 2 iterations\nLeg: AL1:101 BOS-ORD, cap: 100, sold: 93, bp: 0.00\n Class  Sold  ActRev    Fcst  StdDev FcstRev  Prot  Auth\n    Y0     0    0.00    0.00    0.00  400.00     0     7\n    Y1     6  408.33    6.72    2.15  300.00     6     7\n    Y2    11  359.09    7.25    2.52  200.00    13     1\n    Y3    28  237.50    0.00    0.00  150.00    14     0\n    Y4    12  218.75    0.00    0.00  125.00    15     0\n    Y5    36  141.67    0.00    0.00  100.00     0     0\nCoreProBP initialize *******************\nLeg1: AL2 201: BOS-ORD, bp=0.03, contrib=324.97, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=0.03, contrib=249.97, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=0.03, contrib=199.97, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=0.01, contrib=324.99, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=0.01, contrib=249.99, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=0.01, contrib=199.99, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.01, contrib=324.99, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.01, contrib=249.99, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.01, contrib=199.99, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=0.05, contrib=324.95, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=0.05, contrib=249.95, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=0.05, contrib=199.95, to path=BOS-LAX\n******************** CoreProBP iteration 0 *******************\nClass , sold=0, n=1, mu=0.00, agg_fare=324.97, rev_low=249.97, agg_mu=6.91, agg_sigma=1.65, prot=5.70, auth=80\nClass , sold=0, n=2, mu=0.00, agg_fare=289.31, rev_low=199.97, agg_mu=13.18, agg_sigma=2.80, prot=11.78, auth=74\nClass , sold=0, n=3, mu=0.00, agg_fare=233.05, rev_low=150.00, agg_mu=35.60, agg_sigma=9.33, prot=32.16, auth=68\nClass , sold=0, n=4, mu=0.00, agg_fare=219.52, rev_low=125.00, agg_mu=42.53, agg_sigma=9.50, prot=40.86, auth=47\nClass , sold=0, n=5, mu=0.00, agg_fare=211.50, rev_low=100.00, agg_mu=46.47, agg_sigma=9.62, prot=47.12, auth=39\n***** ProBP, after EMSRb *****\nFlight = 201, BOS-ORD, cap = 100, sold = 20, bid_price = 0.01\n    Org-Dst  Cls   Price    Dmd    Contrib   Bkt  Prot  Alloc\n    BOS-LAX   Y3  325.00    6.91    324.97     0      6     80\n    BOS-LAX   Y4  250.00    6.27    249.97     1     12     74\n    BOS-LAX   Y5  200.00   22.42    199.97     2     32     68\n    BOS-ORD   Y3  150.00    6.93    150.00     3     41     47\n    BOS-ORD   Y4  125.00    3.94    125.00     4     47     39\n    BOS-ORD   Y5  100.00   15.04    100.00     5      0     33\n    EMSRc, flt=201, \u03bc=46.47, \u03c3=9.62, z=3.49, agg_fare=211.50, cap=100, prob=0.00, emsr_c=0.05\nLeg1: AL2 201: BOS-ORD, bp=0.03, contrib=324.97, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=0.03, contrib=249.97, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=0.03, contrib=199.97, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=0.00, contrib=325.00, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=0.00, contrib=250.00, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=0.00, contrib=200.00, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.05, contrib=324.95, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.05, contrib=249.95, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.05, contrib=199.95, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=0.02, contrib=324.98, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=0.02, contrib=249.98, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=0.02, contrib=199.98, to path=BOS-LAX\n***** ProBP, after displacement adjustment *****\nFlight = 201, BOS-ORD, cap = 100, sold = 20, bid_price = 0.05\n    Org-Dst  Cls   Price    Dmd    Contrib   Bkt  Prot  Alloc\n    BOS-LAX   Y3  325.00    6.91    324.97     0      6     80\n    BOS-LAX   Y4  250.00    6.27    249.97     1     12     74\n    BOS-LAX   Y5  200.00   22.42    199.97     2     32     68\n    BOS-ORD   Y3  150.00    6.93    150.00     3     41     47\n    BOS-ORD   Y4  125.00    3.94    125.00     4     47     39\n    BOS-ORD   Y5  100.00   15.04    100.00     5      0     33\n******************** CoreProBP iteration 1 *******************\nClass , sold=0, n=1, mu=0.00, agg_fare=324.97, rev_low=249.97, agg_mu=6.91, agg_sigma=1.65, prot=5.70, auth=80\nClass , sold=0, n=2, mu=0.00, agg_fare=289.30, rev_low=199.97, agg_mu=13.18, agg_sigma=2.80, prot=11.78, auth=74\nClass , sold=0, n=3, mu=0.00, agg_fare=233.04, rev_low=150.00, agg_mu=35.60, agg_sigma=9.33, prot=32.16, auth=68\nClass , sold=0, n=4, mu=0.00, agg_fare=219.51, rev_low=125.00, agg_mu=42.53, agg_sigma=9.50, prot=40.86, auth=47\nClass , sold=0, n=5, mu=0.00, agg_fare=211.50, rev_low=100.00, agg_mu=46.47, agg_sigma=9.62, prot=47.12, auth=39\n***** ProBP, after EMSRb *****\nFlight = 201, BOS-ORD, cap = 100, sold = 20, bid_price = 0.05\n    Org-Dst  Cls   Price    Dmd    Contrib   Bkt  Prot  Alloc\n    BOS-LAX   Y3  325.00    6.91    324.97     0      6     80\n    BOS-LAX   Y4  250.00    6.27    249.97     1     12     74\n    BOS-LAX   Y5  200.00   22.42    199.97     2     32     68\n    BOS-ORD   Y3  150.00    6.93    150.00     3     41     47\n    BOS-ORD   Y4  125.00    3.94    125.00     4     47     39\n    BOS-ORD   Y5  100.00   15.04    100.00     5      0     33\n    EMSRc, flt=201, \u03bc=46.47, \u03c3=9.62, z=3.49, agg_fare=211.50, cap=100, prob=0.00, emsr_c=0.05\nLeg1: AL2 201: BOS-ORD, bp=0.03, contrib=324.97, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=0.03, contrib=249.97, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=0.03, contrib=199.97, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=0.00, contrib=325.00, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=0.00, contrib=250.00, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=0.00, contrib=200.00, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.05, contrib=324.95, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.05, contrib=249.95, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.05, contrib=199.95, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=0.02, contrib=324.98, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=0.02, contrib=249.98, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=0.02, contrib=199.98, to path=BOS-LAX\n***** ProBP, after displacement adjustment *****\nFlight = 201, BOS-ORD, cap = 100, sold = 20, bid_price = 0.05\n    Org-Dst  Cls   Price    Dmd    Contrib   Bkt  Prot  Alloc\n    BOS-LAX   Y3  325.00    6.91    324.97     0      6     80\n    BOS-LAX   Y4  250.00    6.27    249.97     1     12     74\n    BOS-LAX   Y5  200.00   22.42    199.97     2     32     68\n    BOS-ORD   Y3  150.00    6.93    150.00     3     41     47\n    BOS-ORD   Y4  125.00    3.94    125.00     4     47     39\n    BOS-ORD   Y5  100.00   15.04    100.00     5      0     33\n******************** CoreProBP iteration 2 *******************\nClass , sold=0, n=1, mu=0.00, agg_fare=324.97, rev_low=249.97, agg_mu=6.91, agg_sigma=1.65, prot=5.70, auth=80\nClass , sold=0, n=2, mu=0.00, agg_fare=289.30, rev_low=199.97, agg_mu=13.18, agg_sigma=2.80, prot=11.78, auth=74\nClass , sold=0, n=3, mu=0.00, agg_fare=233.04, rev_low=150.00, agg_mu=35.60, agg_sigma=9.33, prot=32.16, auth=68\nClass , sold=0, n=4, mu=0.00, agg_fare=219.51, rev_low=125.00, agg_mu=42.53, agg_sigma=9.50, prot=40.86, auth=47\nClass , sold=0, n=5, mu=0.00, agg_fare=211.50, rev_low=100.00, agg_mu=46.47, agg_sigma=9.62, prot=47.12, auth=39\n***** ProBP, after EMSRb *****\nFlight = 201, BOS-ORD, cap = 100, sold = 20, bid_price = 0.05\n    Org-Dst  Cls   Price    Dmd    Contrib   Bkt  Prot  Alloc\n    BOS-LAX   Y3  325.00    6.91    324.97     0      6     80\n    BOS-LAX   Y4  250.00    6.27    249.97     1     12     74\n    BOS-LAX   Y5  200.00   22.42    199.97     2     32     68\n    BOS-ORD   Y3  150.00    6.93    150.00     3     41     47\n    BOS-ORD   Y4  125.00    3.94    125.00     4     47     39\n    BOS-ORD   Y5  100.00   15.04    100.00     5      0     33\n    EMSRc, flt=201, \u03bc=46.47, \u03c3=9.62, z=3.49, agg_fare=211.50, cap=100, prob=0.00, emsr_c=0.05\nLeg1: AL2 201: BOS-ORD, bp=0.03, contrib=324.97, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=0.03, contrib=249.97, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=0.03, contrib=199.97, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=0.00, contrib=325.00, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=0.00, contrib=250.00, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=0.00, contrib=200.00, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.05, contrib=324.95, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.05, contrib=249.95, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.05, contrib=199.95, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=0.02, contrib=324.98, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=0.02, contrib=249.98, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=0.02, contrib=199.98, to path=BOS-LAX\n***** ProBP, after displacement adjustment *****\nFlight = 201, BOS-ORD, cap = 100, sold = 20, bid_price = 0.05\n    Org-Dst  Cls   Price    Dmd    Contrib   Bkt  Prot  Alloc\n    BOS-LAX   Y3  325.00    6.91    324.97     0      6     80\n    BOS-LAX   Y4  250.00    6.27    249.97     1     12     74\n    BOS-LAX   Y5  200.00   22.42    199.97     2     32     68\n    BOS-ORD   Y3  150.00    6.93    150.00     3     41     47\n    BOS-ORD   Y4  125.00    3.94    125.00     4     47     39\n    BOS-ORD   Y5  100.00   15.04    100.00     5      0     33\nProBP converged in 2 iterations\nLeg: AL1:101 BOS-ORD, cap: 100, sold: 90, bp: 0.00\n Class  Sold  ActRev    Fcst  StdDev FcstRev  Prot  Auth\n    Y0     0    0.00    0.00    0.00  400.00     0    10\n    Y1     5  560.00    7.63    2.52  300.00     7    10\n    Y2    14  360.71    8.45    2.95  200.00    15     3\n    Y3    29  246.55    0.00    0.00  150.00    16     0\n    Y4    18  215.28    0.00    0.00  125.00    17     0\n    Y5    24  145.83    0.00    0.00  100.00     0     0\n***** Class History, total demand = 4.77\n   DCP Inc_DMD |  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep\n     0    0.00 |    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    1    0    0    0    0    0    0 \n     1    1.00 |    0    0    0    0    1    1    0    1    0    0    1    0    0    0    0    1    0    1    0    1    0    1    0    0    0    0 \n     2    0.42 |    1    1    1    0    1    1    0    2    1    0    1    0    0    0    0    1    0    1    0    1    1    1    1    0    0    0 \n     3    0.59 |    1-   2-   2    0    1    1    0    2    1    0    1    0    0    0    0    1    0    2    0    1    2    1    1    1    0    0 \n     4    0.55 |    1-   2-   2-   0    1    2    0    2    2    0    1    0    0    0    2    1    0    2-   0    2    2    2    2-   1    0    0 \n     5    0.33 |    1-   2-   2-   1    1-   2-   1    2    2-   0-   1    0    0    0    3    1    0    2-   1    2    3-   2-   2-   1    1    0 \n     6    0.59 |    1-   2-   2-   1-   1-   2-   1    2    2-   0-   1    0    0    0    4-   1    0    2-   1    2    3-   2-   2-   1    1    0 \n     7    0.00 |    1-   2-   2-   1-   1-   2-   1-   2-   2-   0-   1-   0-   0-   1-   4-   1-   0    2-   1-   2    3-   2-   2-   1-   1-   1-\n     8    1.29 |    1-   2-   2-   1-   1-   2-   1-   2-   2-   0-   1-   0-   0-   1-   4-   1-   0    2-   1-   2-   3-   2-   2-   1-   1-   1-\n     9    0.00 |    1-   2-   2-   1-   1-   2-   1-   2-   2-   0-   1-   0-   0-   1-   4-   1-   1-   2-   1-   2-   3-   2-   2-   1-   1-   1-\n    10    0.00 |    1-   2-   2-   1-   1-   2-   1-   2-   2-   0-   1-   0-   0-   1-   4-   1-   1-   2-   1-   2-   3-   2-   2-   1-   1-   1-\n    11    0.00 |    1-   2-   2-   1-   1-   2-   1-   2-   2-   0-   1-   0-   0-   1-   4-   1-   1-   2-   1-   2-   3-   2-   2-   1-   1-   1-\n    12    0.00 |    1-   2-   2-   1-   1-   2-   1-   2-   2-   0-   1-   0-   0-   1-   4-   1-   1-   2-   1-   2-   3-   2-   2-   1-   1-   1-\n    13    0.00 |    1-   2-   2-   1-   1-   2-   1-   2-   2-   0-   1-   0-   0-   1-   4-   1-   1-   2-   1-   2-   3-   2-   2-   1-   1-   1-\n    14    0.00 |    1-   2-   2-   1-   1-   2-   1-   2-   2-   0-   1-   0-   0-   1-   4-   1-   1-   2-   1-   2-   3-   2-   2-   1-   1-   1-\n    15    0.00 |    1-   2-   2-   1-   1-   2-   1-   2-   2-   0-   1-   0-   0-   1-   4-   1-   1-   2-   1-   2-   3-   2-   2-   1-   1-   1-\n    16    0.00 |    1-   2-   2-   1-   1-   2-   1-   2-   2-   0-   1-   0-   0-   1-   4-   1-   1-   2-   1-   2-   3-   2-   2-   1-   1-   1-\n***** Class History, total demand = 29.17\n   DCP Inc_DMD |  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep\n     0   11.00 |    0    1    0    0    0    1    0    0    0    0    0    0    0    0    0    0    0    1    0    0    0    0    0    0    1    0 \n     1    2.00 |   11   12    4    5    5    3    1    5    6    4    4    5    1    7    3    5    7    4    7    4   10    3    4    6    4    6 \n     2    2.00 |   13   16    7    6    6    4    2    9    7    5    7    5    3    8    5    8    9    7   12    6   11    4    5    8    8    7 \n     3    3.67 |   15   21-  10    7    9    5    4    9    9    8    7    5    5   11    6   10   11   10   16    8   14    6   13   11   11    9 \n     4    3.02 |   17-  21-  11   12   13   11    4   14    9   14    8    7    8   13    9   11   13   15   19   10   17    8   17   14   13   12 \n     5    1.28 |   17-  21-  13   14   14   14    4   15   11   22-  10    8   13   14   13   13   14   18-  23   11   18    9   19-  18   13   14 \n     6    3.10 |   17-  21-  15   15   15   16-   5   16   11   22-  11    9   14   15   16   14   14   18-  25   11   20    9   19-  20   13   16 \n     7    3.10 |   17-  21-  18   17   15-  16-   5   20   14   22-  13   12   19   16-  17-  15   15   18-  28-  17   20-  13   19-  25-  15   19 \n     8    0.00 |   17-  21-  23-  18-  15-  16-   7   24   18-  22-  15   14   24-  16-  17-  16   17   18-  28-  20   20-  13-  19-  25-  17   20-\n     9    0.00 |   17-  21-  23-  18-  15-  16-   7   24   18-  22-  15   14   24-  16-  17-  16   17   18-  28-  20   20-  13-  19-  25-  17   20-\n    10    0.00 |   17-  21-  23-  18-  15-  16-   7   24   18-  22-  15   14   24-  16-  17-  16   17   18-  28-  20   20-  13-  19-  25-  17   20-\n    11    0.00 |   17-  21-  23-  18-  15-  16-   7   24   18-  22-  15   14   24-  16-  17-  16   17   18-  28-  20   20-  13-  19-  25-  17   20-\n    12    0.00 |   17-  21-  23-  18-  15-  16-   7   24   18-  22-  15   14   24-  16-  17-  16   17   18-  28-  20   20-  13-  19-  25-  17   20-\n    13    0.00 |   17-  21-  23-  18-  15-  16-   7   24   18-  22-  15   14   24-  16-  17-  16   17   18-  28-  20   20-  13-  19-  25-  17   20-\n    14    0.00 |   17-  21-  23-  18-  15-  16-   7   24   18-  22-  15   14   24-  16-  17-  16   17   18-  28-  20   20-  13-  19-  25-  17   20-\n    15    0.00 |   17-  21-  23-  18-  15-  16-   7   24   18-  22-  15   14   24-  16-  17-  16   17   18-  28-  20   20-  13-  19-  25-  17   20-\n    16    0.00 |   17-  21-  23-  18-  15-  16-   7   24   18-  22-  15   14   24-  16-  17-  16   17   18-  28-  20   20-  13-  19-  25-  17   20-\nTesting the snapshot filters again:  sample=20  dcp=56\nTesting the snapshot filters:  sample=20  dcp=7  orig=BOS  dest=ORD  flt_no=101\nCoreProBP initialize *******************\nLeg1: AL2 201: BOS-ORD, bp=0.06, contrib=324.94, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=0.06, contrib=249.94, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=0.06, contrib=199.94, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=1.80, contrib=323.20, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=1.80, contrib=248.20, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=1.80, contrib=198.20, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.15, contrib=324.85, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.15, contrib=249.85, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.15, contrib=199.85, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=2.00, contrib=323.00, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=2.00, contrib=248.00, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=2.00, contrib=198.00, to path=BOS-LAX\n******************** CoreProBP iteration 0 *******************\nClass , sold=0, n=1, mu=0.00, agg_fare=324.94, rev_low=249.94, agg_mu=1.12, agg_sigma=0.68, prot=0.62, auth=78\nClass , sold=0, n=2, mu=0.00, agg_fare=263.50, rev_low=199.94, agg_mu=6.19, agg_sigma=1.85, prot=4.89, auth=77\nClass , sold=0, n=3, mu=0.00, agg_fare=211.06, rev_low=150.00, agg_mu=35.36, agg_sigma=9.06, prot=30.32, auth=73\nClass , sold=0, n=4, mu=0.00, agg_fare=204.29, rev_low=125.00, agg_mu=39.77, agg_sigma=9.17, prot=37.16, auth=47\nClass , sold=0, n=5, mu=0.00, agg_fare=195.53, rev_low=100.00, agg_mu=44.71, agg_sigma=9.33, prot=44.44, auth=40\n***** ProBP, after EMSRb *****\nFlight = 201, BOS-ORD, cap = 100, sold = 22, bid_price = 0.15\n    Org-Dst  Cls   Price    Dmd    Contrib   Bkt  Prot  Alloc\n    BOS-LAX   Y3  325.00    1.12    324.94     0      1     78\n    BOS-LAX   Y4  250.00    5.07    249.94     1      5     77\n    BOS-LAX   Y5  200.00   29.17    199.94     2     30     73\n    BOS-ORD   Y3  150.00    4.41    150.00     3     37     47\n    BOS-ORD   Y4  125.00    4.94    125.00     4     44     40\n    BOS-ORD   Y5  100.00   18.72    100.00     5      0     34\n    EMSRc, flt=201, \u03bc=44.71, \u03c3=9.33, z=3.57, agg_fare=195.53, cap=100, prob=0.00, emsr_c=0.04\nLeg1: AL2 201: BOS-ORD, bp=0.29, contrib=324.71, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=0.29, contrib=249.71, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=0.29, contrib=199.71, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=3.38, contrib=321.62, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=3.38, contrib=246.62, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=3.38, contrib=196.62, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.04, contrib=324.96, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.04, contrib=249.96, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.04, contrib=199.96, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=2.25, contrib=322.75, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=2.25, contrib=247.75, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=2.25, contrib=197.75, to path=BOS-LAX\n***** ProBP, after displacement adjustment *****\nFlight = 201, BOS-ORD, cap = 100, sold = 22, bid_price = 0.04\n    Org-Dst  Cls   Price    Dmd    Contrib   Bkt  Prot  Alloc\n    BOS-LAX   Testing the snapshot filters again:  sample=30  dcp=56\nTesting the snapshot filters:  sample=30  dcp=7  orig=BOS  dest=ORD  flt_no=101\nY3  325.00    1.12    324.71     0      1     78\n    BOS-LAX   Y4  250.00    5.07    249.71     1      5     77\n    BOS-LAX   Y5  200.00   29.17    199.71     2     30     73\n    BOS-ORD   Y3  150.00    4.41    150.00     3     37     47\n    BOS-ORD   Y4  125.00    4.94    125.00     4     44     40\n    BOS-ORD   Y5  100.00   18.72    100.00     5      0     34\n******************** CoreProBP iteration 1 *******************\nClass , sold=0, n=1, mu=0.00, agg_fare=324.71, rev_low=249.71, agg_mu=1.12, agg_sigma=0.68, prot=0.62, auth=78\nClass , sold=0, n=2, mu=0.00, agg_fare=263.28, rev_low=199.71, agg_mu=6.19, agg_sigma=1.85, prot=4.89, auth=77\nClass , sold=0, n=3, mu=0.00, agg_fare=210.84, rev_low=150.00, agg_mu=35.36, agg_sigma=9.06, prot=30.30, auth=73\nClass , sold=0, n=4, mu=0.00, agg_fare=204.09, rev_low=125.00, agg_mu=39.77, agg_sigma=9.17, prot=37.15, auth=47\nClass , sold=0, n=5, mu=0.00, agg_fare=195.35, rev_low=100.00, agg_mu=44.71, agg_sigma=9.33, prot=44.43, auth=40\n***** ProBP, after EMSRb *****\nFlight = 201, BOS-ORD, cap = 100, sold = 22, bid_price = 0.04\n    Org-Dst  Cls   Price    Dmd    Contrib   Bkt  Prot  Alloc\n    BOS-LAX   Y3  325.00    1.12    324.71     0      1     78\n    BOS-LAX   Y4  250.00    5.07    249.71     1      5     77\n    BOS-LAX   Y5  200.00   29.17    199.71     2     30     73\n    BOS-ORD   Y3  150.00    4.41    150.00     3     37     47\n    BOS-ORD   Y4  125.00    4.94    125.00     4     44     40\n    BOS-ORD   Y5  100.00   18.72    100.00     5      0     34\n    EMSRc, flt=201, \u03bc=44.71, \u03c3=9.33, z=3.57, agg_fare=195.35, cap=100, prob=0.00, emsr_c=0.04\nLeg1: AL2 201: BOS-ORD, bp=0.29, contrib=324.71, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=0.29, contrib=249.71, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=0.29, contrib=199.71, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=3.38, contrib=321.62, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=3.38, contrib=246.62, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=3.38, contrib=196.62, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.04, contrib=324.96, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.04, contrib=249.96, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.04, contrib=199.96, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=2.24, contrib=322.76, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=2.24, contrib=247.76, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=2.24, contrib=197.76, to path=BOS-LAX\n***** ProBP, after displacement adjustment *****\nFlight = 201, BOS-ORD, cap = 100, sold = 22, bid_price = 0.04\n    Org-Dst  Cls   Price    Dmd    Contrib   Bkt  Prot  Alloc\n    BOS-LAX   Y3  325.00    1.12    324.71     0      1     78\n    BOS-LAX   Y4  250.00    5.07    249.71     1      5     77\n    BOS-LAX   Y5  200.00   29.17    199.71     2     30     73\n    BOS-ORD   Y3  150.00    4.41    150.00     3     37     47\n    BOS-ORD   Y4  125.00    4.94    125.00     4     44     40\n    BOS-ORD   Y5  100.00   18.72    100.00     5      0     34\n******************** CoreProBP iteration 2 *********Snapshot of path untruncation:  sample=35  dcp=0  orig=BOS  dest=LAX  flt_no=202\nSnapshot of path untruncation:  sample=35  dcp=0  orig=BOS  dest=ORD  flt_no=202\n**********\nClass , sold=0, n=1, mu=0.00, agg_fare=324.71, rev_low=249.71, agg_mu=1.12, agg_sigma=0.68, prot=0.62, auth=78\nClass , sold=0, n=2, mu=0.00, agg_fare=263.28, rev_low=199.71, agg_mu=6.19, agg_sigma=1.85, prot=4.89, auth=77\nClass , sold=0, n=3, mu=0.00, agg_fare=210.84, rev_low=150.00, agg_mu=35.36, agg_sigma=9.06, prot=30.30, auth=73\nClass , sold=0, n=4, mu=0.00, agg_fare=204.09, rev_low=125.00, agg_mu=39.77, agg_sigma=9.17, prot=37.15, auth=47\nClass , sold=0, n=5, mu=0.00, agg_fare=195.35, rev_low=100.00, agg_mu=44.71, agg_sigma=9.33, prot=44.43, auth=40\n***** ProBP, after EMSRb *****\nFlight = 201, BOS-ORD, cap = 100, sold = 22, bid_price = 0.04\n    Org-Dst  Cls   Price    Dmd    Contrib   Bkt  Prot  Alloc\n    BOS-LAX   Y3  325.00    1.12    324.71     0      1     78\n    BOS-LAX   Y4  250.00    5.07    249.71     1      5     77\n    BOS-LAX   Y5  200.00   29.17    199.71     2     30     73\n    BOS-ORD   Y3  150.00    4.41    150.00     3     37     47\n    BOS-ORD   Y4  125.00    4.94    125.00     4     44     40\n    BOS-ORD   Y5  100.00   18.72    100.00     5      0     34\n    EMSRc, flt=201, \u03bc=44.71, \u03c3=9.33, z=3.57, agg_fare=195.35, cap=100, prob=0.00, emsr_c=0.04\nLeg1: AL2 201: BOS-ORD, bp=0.29, contrib=324.71, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=0.29, contrib=249.71, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=0.29, contrib=199.71, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=3.38, contrib=321.62, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=3.38, contrib=246.62, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=3.38, contrib=196.62, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.04, contrib=324.96, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.04, contrib=249.96, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.04, contrib=199.96, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=2.24, contrib=322.76, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=2.24, contrib=247.76, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=2.24, contrib=197.76, to path=BOS-LAX\n***** ProBP, after displacement adjustment *****\nFlight = 201, BOS-ORD, cap = 100, sold = 22, bid_price = 0.04\n    Org-Dst  Cls   Price    Dmd    Contrib   Bkt  Prot  Alloc\n    BOS-LAX   Y3  325.00    1.12    324.71     0      1     78\n    BOS-LAX   Y4  250.00    5.07    249.71     1      5     77\n    BOS-LAX   Y5  200.00   29.17    199.71     2     30     73\n    BOS-ORD   Y3  150.00    4.41    150.00     3     37     47\n    BOS-ORD   Y4  125.00    4.94    125.00     4     44     40\n    BOS-ORD   Y5  100.00   18.72    100.00     5      0     34\nProBP converged in 2 iterations\nLeg: AL1:101 BOS-ORD, cap: 100, sold: 67, bp: 0.00\n Class  Sold  ActRev    Fcst  StdDev FcstRev  Prot  Auth\n    Y0     0    0.00    0.00    0.00  400.00     0    33\n    Y1     2  625.00   10.05    2.81  300.00     9    33\n    Y2    10  450.00    9.09    2.64  200.00    18    24\n    Y3    41  222.56    0.00    0.00  150.00    19    14\n    Y4    14  142.86    0.00    0.00  125.00    20    13\n    Y5     0    0.00    0.00    0.00  100.00     0    13\nCoreProBP initialize *******************\nLeg1: AL2 201: BOS-ORD, bp=0.00, contrib=325.00, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=0.00, contrib=250.00, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=0.00, contrib=200.00, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=0.01, contrib=324.99, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=0.01, contrib=249.99, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=0.01, contrib=199.99, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.01, contrib=324.99, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.01, contrib=249.99, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.01, contrib=199.99, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=0.05, contrib=324.95, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=0.05, contrib=249.95, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=0.05, contrib=199.95, to path=BOS-LAX\n******************** CoreProBP iteration 0 *******************\nClass , sold=0, n=1, mu=0.00, agg_fare=325.00, rev_low=250.00, agg_mu=0.48, agg_sigma=0.61, prot=0.03, auth=86\nClass , sold=0, n=2, mu=0.00, agg_fare=256.00, rev_low=200.00, agg_mu=5.97, agg_sigma=2.01, prot=4.41, auth=85\nClass , sold=0, n=3, mu=0.00, agg_fare=210.41, rev_low=150.00, agg_mu=32.14, agg_sigma=8.00, prot=27.64, auth=81\nClass , sold=0, n=4, mu=0.00, agg_fare=204.43, rev_low=125.00, agg_mu=35.66, agg_sigma=8.08, prot=33.38, auth=58\nClass , sold=0, n=5, mu=0.00, agg_fare=195.59, rev_low=100.00, agg_mu=40.13, agg_sigma=8.25, prot=39.90, auth=52\n***** ProBP, after EMSRb *****\nFlight = 201, BOS-ORD, cap = 100, sold = 14, bid_price = 0.01\n    Org-Dst  Cls   Price    Dmd    Contrib   Bkt  Prot  Alloc\n    BOS-LAX   Y3  325.00    0.48    325.00     0      0     86\n    BOS-LAX   Y4  250.00    5.49    250.00     1      4     85\n    BOS-LAX   Y5  200.00   26.16    200.00     2     28     81\n    BOS-ORD   Y3  150.00    3.53    150.00     3     33     58\n    BOS-ORD   Y4  125.00    4.47    125.00     4     40     52\n    BOS-ORD   Y5  100.00   17.83    100.00     5      0     46\n    EMSRc, flt=201, \u03bc=39.65, \u03c3=8.23, z=5.63, agg_fare=194.03, cap=100, prob=0.00, emsr_c=0.00\nLeg1: AL2 201: BOS-ORD, bp=0.00, contrib=325.00, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=0.00, contrib=250.00, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=0.00, contrib=200.00, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=0.00, contrib=325.00, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=0.00, contrib=250.00, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=0.00, contrib=200.00, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.00, contrib=325.00, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.00, contrib=250.00, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.00, contrib=200.00, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=0.00, contrib=325.00, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=0.00, contrib=250.00, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=0.00, contrib=200.00, to path=BOS-LAX\n***** ProBP, after displacement adjustment *****\nFlight = 201, BOS-ORD, cap = 100, sold = 14, bid_price = 0.00\n    Org-Dst  Cls   Price    Dmd    Contrib   Bkt  Prot  Alloc\n    BOS-LAX   Y3  325.00    0.48    325.00     0      0     86\n    BOS-LAX   Y4  250.00    5.49    250.00     1      4     85\n    BOS-LAX   Y5  200.00   26.16    200.00     2     28     81\n    BOS-ORD   Y3  150.00    3.53    150.00     3     33     58\n    BOS-ORD   Y4  125.00    4.47    125.00     4     40     52\n    BOS-ORD   Y5  100.00   17.83    100.00     5      0     46\n******************** CoreProBP iteration 1 *******************\nClass , sold=0, n=1, mu=0.00, agg_fare=325.00, rev_low=250.00, agg_mu=0.48, agg_sigma=0.61, prot=0.03, auth=86\nClass , sold=0, n=2, mu=0.00, agg_fare=256.00, rev_low=200.00, agg_mu=5.97, agg_sigma=2.01, prot=4.41, auth=85\nClass , sold=0, n=3, mu=0.00, agg_fare=210.41, rev_low=150.00, agg_mu=32.14, agg_sigma=8.00, prot=27.64, auth=81\nClass , sold=0, n=4, mu=0.00, agg_fare=204.43, rev_low=125.00, agg_mu=35.66, agg_sigma=8.08, prot=33.38, auth=58\nClass , sold=0, n=5, mu=0.00, agg_fare=195.59, rev_low=100.00, agg_mu=40.13, agg_sigma=8.25, prot=39.90, auth=52\n***** ProBP, after EMSRb *****\nFlight = 201, BOS-ORD, cap = 100, sold = 14, bid_price = 0.00\n    Org-Dst  Cls   Price    Dmd    Contrib   Bkt  Prot  Alloc\n    BOS-LAX   Y3  325.00    0.48    325.00     0      0     86\n    BOS-LAX   Y4  250.00    5.49    250.00     1      4     85\n    BOS-LAX   Y5  200.00   26.16    200.00     2     28     81\n    BOS-ORD   Y3  150.00    3.53    150.00     3     33     58\n    BOS-ORD   Y4  125.00    4.47    125.00     4     40     52\n    BOS-ORD   Y5  100.00   17.83    100.00     5      0     46\n    EMSRc, flt=201, \u03bc=39.65, \u03c3=8.23, z=5.63, agg_fare=194.03, cap=100, prob=0.00, emsr_c=0.00\nLeg1: AL2 201: BOS-ORD, bp=0.00, contrib=325.00, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=0.00, contrib=250.00, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=0.00, contrib=200.00, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=0.00, contrib=325.00, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=0.00, contrib=250.00, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=0.00, contrib=200.00, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.00, contrib=325.00, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.00, contrib=250.00, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.00, contrib=200.00, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=0.00, contrib=325.00, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=0.00, contrib=250.00, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=0.00, contrib=200.00, to path=BOS-LAX\n***** ProBP, after displacement adjustment *****\nFlight = 201, BOS-ORD, cap = 100, sold = 14, bid_price = 0.00\n    Org-Dst  Cls   Price    Dmd    Contrib   Bkt  Prot  Alloc\n    BOS-LAX   Y3  325.00    0.48    325.00     0      0     86\n    BOS-LAX   Y4  250.00    5.49    250.00     1      4     85\n    BOS-LAX   Y5  200.00   26.16    200.00     2     28     81\n    BOS-ORD   Y3  150.00    3.53    150.00     3     33     58\n    BOS-ORD   Y4  125.00    4.47    125.00     4     40     52\n    BOS-ORD   Y5  100.00   17.83    100.00     5      0     46\n******************** CoreProBP iteration 2 *******************\nClass , sold=0, n=1, mu=0.00, agg_fare=325.00, rev_low=250.00, agg_mu=0.48, agg_sigma=0.61, prot=0.03, auth=86\nClass , sold=0, n=2, mu=0.00, agg_fare=256.00, rev_low=200.00, agg_mu=5.97, agg_sigma=2.01, prot=4.41, auth=85\nClass , sold=0, n=3, mu=0.00, agg_fare=210.41, rev_low=150.00, agg_mu=32.14, agg_sigma=8.00, prot=27.64, auth=81\nClass , sold=0, n=4, mu=0.00, agg_fare=204.43, rev_low=125.00, agg_mu=35.66, agg_sigma=8.08, prot=33.38, auth=58\nClass , sold=0, n=5, mu=0.00, agg_fare=195.59, rev_low=100.00, agg_mu=40.13, agg_sigma=8.25, prot=39.90, auth=52\n***** ProBP, after EMSRb *****\nFlight = 201, BOS-ORD, cap = 100, sold = 14, bid_price = 0.00\n    Org-Dst  Cls   Price    Dmd    Contrib   Bkt  Prot  Alloc\n    BOS-LAX   Y3  325.00    0.48    325.00     0      0     86\n    BOS-LAX   Y4  250.00    5.49    250.00     1      4     85\n    BOS-LAX   Y5  200.00   26.16    200.00     2     28     81\n    BOS-ORD   Y3  150.00    3.53    150.00     3     33     58\n    BOS-ORD   Y4  125.00    4.47    125.00     4     40     52\n    BOS-ORD   Y5  100.00   17.83    100.00     5      0     46\n    EMSRc, flt=201, \u03bc=39.65, \u03c3=8.23, z=5.63, agg_fare=194.03, cap=100, prob=0.00, emsr_c=0.00\nLeg1: AL2 201: BOS-ORD, bp=0.00, contrib=325.00, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=0.00, contrib=250.00, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=0.00, contrib=200.00, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=0.00, contrib=325.00, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=0.00, contrib=250.00, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=0.00, contrib=200.00, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.00, contrib=325.00, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.00, contrib=250.00, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.00, contrib=200.00, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=0.00, contrib=325.00, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=0.00, contrib=250.00, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=0.00, contrib=200.00, to path=BOS-LAX\n***** ProBP, after displacement adjustment *****\nFlight = 201, BOS-ORD, cap = 100, sold = 14, bid_price = 0.00\n    Org-Dst  Cls   Price    Dmd    Contrib   Bkt  Prot  Alloc\n    BOS-LAX   Y3  325.00    0.48    325.00     0      0     86\n    BOS-LAX   Y4  250.00    5.49    250.00     1      4     85\n    BOS-LAX   Y5  200.00   26.16    200.00     2     28     81\n    BOS-ORD   Y3  150.00    3.53    150.00     3     33     58\n    BOS-ORD   Y4  125.00    4.47    125.00     4     40     52\n    BOS-ORD   Y5  100.00   17.83    100.00     5      0     46\nProBP converged in 2 iterations\nLeg: AL1:101 BOS-ORD, cap: 100, sold: 55, bp: 0.00\n Class  Sold  ActRev    Fcst  StdDev FcstRev  Prot  Auth\n    Y0     0    0.00    0.00    0.00  400.00     0    45\n    Y1     0    0.00   10.38    3.20  300.00     9    45\n    Y2     5  450.00    8.99    2.60  200.00    18    35\n    Y3    36  242.36    0.00    0.00  150.00    19    26\n    Y4     3  125.00    0.00    0.00  125.00    20    25\n    Y5    11  100.00    0.00    0.00  100.00     0    25\n***** Class History, total demand = 0.00\n   DCP Inc_DMD |  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep\n     0    0.00 |    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0 \n     1    0.00 |    0    0    2    0    0    1    0    0    0    1    0    0    0    0    1    0    1    2    0    0    0    1    0    0    2    0 \n     2    0.00 |    0    0    2    1    1    1    0    0-   0    1    0    0    0    0    1    0    2    2    0    0    3    1    0    0    2    0 \n     3    0.00 |    0    0-   3    1-   1-   1    0-   0-   0-   2-   1-   1    0-   0-   2-   0-   2-   2-   0-   0    3-   1-   0-   0-   2    0 \n     4    0.00 |    0-   0-   3-   1-   1-   1-   0-   0-   0-   2-   1-   1-   0-   0-   2-   0-   2-   2-   0-   0-   3-   1-   0-   0-   2    0 \n     5    0.00 |    0-   0-   3-   1-   1-   1-   0-   0-   0-   2-   1-   1-   0-   0-   2-   0-   2-   2-   0-   0-   3-   1-   0-   0-   2    0 \n     6    0.00 |    0-   0-   3-   1-   1-   1-   0-   0-   0-   2-   1-   1-   0-   0-   2-   0-   2-   2-   0-   0-   3-   1-   0-   0-   2-   0-\n     7    0.00 |    0-   0-   3-   1-   1-   1-   0-   0-   0-   2-   1-   1-   0-   0-   2-   0-   2-   2-   0-   0-   3-   1-   0-   0-   2-   0-\n     8    0.00 |    0-   0-   3-   1-   1-   1-   0-   0-   0-   2-   1-   1-   0-   0-   2-   0-   2-   2-   0-   0-   3-   1-   0-   0-   2-   0-\n     9    0.00 |    0-   0-   3-   1-   1-   1-   0-   0-   0-   2-   1-   1-   0-   0-   2-   0-   2-   2-   0-   0-   3-   1-   0-   0-   2-   0-\n    10    0.00 |    0-   0-   3-   1-   1-   1-   0-   0-   0-   2-   1-   1-   0-   0-   2-   0-   2-   2-   0-   0-   3-   1-   0-   0-   2-   0-\n    11    0.00 |    0-   0-   3-   1-   1-   1-   0-   0-   0-   2-   1-   1-   0-   0-   2-   0-   2-   2-   0-   0-   3-   1-   0-   0-   2-   0-\n    12    0.00 |    0-   0-   3-   1-   1-   1-   0-   0-   0-   2-   1-   1-   0-   0-   2-   0-   2-   2-   0-   0-   3-   1-   0-   0-   2-   0-\n    13    0.00 |    0-   0-   3-   1-   1-   1-   0-   0-   0-   2-   1-   1-   0-   0-   2-   0-   2-   2-   0-   0-   3-   1-   0-   0-   2-   0-\n    14    0.00 |    0-   0-   3-   1-   1-   1-   0-   0-   0-   2-   1-   1-   0-   0-   2-   0-   2-   2-   0-   0-   3-   1-   0-   0-   2-   0-\n    15    0.00 |    0-   0-   3-   1-   1-   1-   0-   0-   0-   2-   1-   1-   0-   0-   2-   0-   2-   2-   0-   0-   3-   1-   0-   0-   2-   0-\n    16    0.00 |    0-   0-   3-   1-   1-   1-   0-   0-   0-   2-   1-   1-   0-   0-   2-   0-   2-   2-   0-   0-   3-   1-   0-   0-   2-   0-\n***** Class History, total demand = 17.30\n   DCP Inc_DMD |  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep\n     0    2.00 |    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    1    0    0    0    0    0    0    0    1    0    0 \n     1    0.00 |    2    6    4    4    1    4    1    5    2    8    9    5    7   10    6   11    3    8    3    2    6    5   11   15    0    4 \n     2    2.00 |    2   10    7    6    4    4    2    7    7   12   15    7    9   16   10   16    5   10    8    2   11    8   19   20    1    6 \n     3    4.43 |    4   11    8    9    8    9    2   10    9   19   24   10   14   19   11   21-  10   17   11    4   14   12-  21-  24-   2    9 \n     4    2.82 |    6-  15    9   11    8   11    3   16   12   25-  26-  12-  14-  22-  13-  21-  12-  23   18-   8   19-  12-  21-  24-   3   10 \n     5    1.56 |    6-  17-   9   12   10   12    5   23-  13   25-  26-  12-  14-  22-  13-  21-  12-  26-  18-  11   19-  12-  21-  24-   3   10 \n     6    3.17 |    6-  17-  10   13   12   12    5   23-  17-  25-  26-  12-  14-  22-  13-  21-  12-  26-  18-  11   19-  12-  21-  24-   3   10 \n     7    1.32 |    6-  17-  11   17   15   13    7   23-  17-  25-  26-  12-  14-  22-  13-  21-  12-  26-  18-  18-  19-  12-  21-  24-   3   13 \n     8    0.00 |    6-  17-  11   18   16   15    9   23-  17-  25-  26-  12-  14-  22-  13-  21-  12-  26-  18-  18-  19-  12-  21-  24-   4   15-\n     9    0.00 |    6-  17-  11   18   16   15    9   23-  17-  25-  26-  12-  14-  22-  13-  21-  12-  26-  18-  18-  19-  12-  21-  24-   4   15-\n    10    0.00 |    6-  17-  11   18   16   15    9   23-  17-  25-  26-  12-  14-  22-  13-  21-  12-  26-  18-  18-  19-  12-  21-  24-   4   15-\n    11    0.00 |    6-  17-  11   18   16   15    9   23-  17-  25-  26-  12-  14-  22-  13-  21-  12-  26-  18-  18-  19-  12-  21-  24-   4   15-\n    12    0.00 |    6-  17-  11   18   16   15    9   23-  17-  25-  26-  12-  14-  22-  13-  21-  12-  26-  18-  18-  19-  12-  21-  24-   4   15-\n    13    0.00 |    6-  17-  11   18   16   15    9   23-  17-  25-  26-  12-  14-  22-  13-  21-  12-  26-  18-  18-  19-  12-  21-  24-   4   15-\n    14    0.00 |    6-  17-  11   18   16   15    9   23-  17-  25-  26-  12-  14-  22-  13-  21-  12-  26-  18-  18-  19-  12-  21-  24-   4   15-\n    15    0.00 |    6-  17-  11   18   16   15    9   23-  17-  25-  26-  12-  14-  22-  13-  21-  12-  26-  18-  18-  19-  12-  21-  24-   4   15-\n    16    0.00 |    6-  17-  11   18   16   15    9   23-  17-  25-  26-  12-  14-  22-  13-  21-  12-  26-  18-  18-  19-  12-  21-  24-   4   15-\nTesting the snapshot filters again:  sample=20  dcp=56\nTesting the snapshot filters:  sample=20  dcp=7  orig=BOS  dest=ORD  flt_no=101\nCoreProBP initialize *******************\nLeg1: AL2 201: BOS-ORD, bp=0.80, contrib=324.20, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=0.80, contrib=249.20, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=0.80, contrib=199.20, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=3.75, contrib=321.25, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=3.75, contrib=246.25, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=3.75, contrib=196.25, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=2.48, contrib=322.52, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=2.48, contrib=247.52, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=2.48, contrib=197.52, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=15.63, contrib=309.37, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=15.63, contrib=234.37, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=15.63, contrib=184.37, to path=BOS-LAX\n******************** CoreProBP iteration 0 *******************\nClass , sold=0, n=1, mu=0.00, agg_fare=324.20, rev_low=249.20, agg_mu=6.67, agg_sigma=1.36, prot=5.67, auth=70\nClass , sold=0, n=2, mu=0.00, agg_fare=288.53, rev_low=199.20, agg_mu=12.72, agg_sigma=2.37, prot=11.54, auth=64\nClass , sold=0, n=3, mu=0.00, agg_fare=226.75, rev_low=150.00, agg_mu=41.23, agg_sigma=9.39, prot=37.32, auth=58\nClass , sold=0, n=4, mu=0.00, agg_fare=216.44, rev_low=125.00, agg_mu=47.63, agg_sigma=9.52, prot=45.77, auth=32\nClass , sold=0, n=5, mu=0.00, agg_fare=206.90, rev_low=100.00, agg_mu=53.18, agg_sigma=9.63, prot=53.58, auth=24\n***** ProBP, after EMSRb *****\nFlight = 201, BOS-ORD, cap = 100, sold = 30, bid_price = 2.48\n    Org-Dst  Cls   Price    Dmd    Contrib   Bkt  Prot  Alloc\n    BOS-LAX   Y3  325.00    6.67    324.20     0      6     70\n    BOS-LAX   Y4  250.00    6.05    249.20     1     12     64\n    BOS-LAX   Y5  200.00   28.52    199.20     2     37     58\n    BOS-ORD   Y3  150.00    6.40    150.00     3     46     32\n    BOS-ORD   Y4  125.00    5.55    125.00     4     54     24\n    BOS-ORD   Y5  100.00   19.62    100.00     5      0     16\n    EMSRc, flt=201, \u03bc=53.18, \u03c3=9.63, z=1.75, agg_fare=206.90, cap=100, prob=0.04, emsr_c=8.35\nLeg1: AL2 201: BOS-ORD, bp=0.36, contrib=324.64, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=0.36, contrib=249.64, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=0.36, contrib=199.64, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=48.59, contrib=276.41, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=48.59, contrib=201.41, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=48.59, contrib=151.41, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=8.35, contrib=316.65, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=8.35, contrib=241.65, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=8.35, contrib=191.65, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=107.22, contrib=217.78, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=107.22, contrib=142.78, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=107.22, contrib=92.78, to path=BOS-LAX\n***** ProBP, after displacement adjustment *****\nFlight = 201, BOS-ORD, cap = 100, sold = 30, bid_price = 8.35\n    Org-Dst  Cls   Price    Dmd    Contrib   Bkt  Prot  Alloc\n    BOS-LAX   Y3  325.00    6.67    324.64     0      6     70\n    BOS-LAX   Y4  250.00    6.05    249.64     1     12     64\n    BOS-LAX   Y5  200.00   28.52    199.64     2     37     58\n    BOS-ORD   Y3  150.00    6.40    150.00     3     46     32\n    BOS-ORD   Y4  125.00    5.55    125.00     4     54     24\n    BOS-ORD   Y5  100.00   19.62    100.00     5      0     16\n******************** CoreProBP iteration 1 *******************\nClass , sold=0, n=1, mu=0.00, agg_fare=324.64, rev_low=249.64, agg_mu=6.67, agg_sigma=1.36, prot=5.67, auth=70\nClass , sold=0, n=2, mu=0.00, agg_fare=288.97, rev_low=199.64, agg_mu=12.72, agg_sigma=2.37, prot=11.54, auth=64\nClass , sold=0, n=3, mu=0.00, agg_fare=227.19, rev_low=150.00, agg_mu=41.23, agg_sigma=9.39, prot=37.35, auth=58\nClass , sold=0, n=4, mu=0.00, agg_fare=216.82, rev_low=125.00, agg_mu=47.63, agg_sigma=9.52, prot=45.80, auth=32\nClass , sold=0, n=5, mu=0.00, agg_fare=207.24, rev_low=100.00, agg_mu=53.18, agg_sigma=9.63, prot=53.60, auth=24\n***** ProBP, after EMSRb *****\nFlight = 201, BOS-ORD, cap = 100, sold = 30, bid_price = 8.35\n    Org-Dst  Cls   Price    Dmd    Contrib   Bkt  Prot  Alloc\n    BOS-LAX   Y3  325.00    6.67    324.64     0      6     70\n    BOS-LAX   Y4  250.00    6.05    249.64     1     12     64\n    BOS-LAX   Y5  200.00   28.52    199.64     2     37     58\n    BOS-ORD   Y3  150.00    6.40    150.00     3     46     32\n    BOS-ORD   Y4  125.00    5.55    125.00     4     54     24\n    BOS-ORD   Y5  100.00   19.62    100.00     5      0     16\n    EMSRc, flt=201, \u03bc=53.18, \u03c3=9.63, z=1.75, agg_fare=207.24, cap=100, prob=0.04, emsr_c=8.36\nLeg1: AL2 201: BOS-ORD, bp=0.35, contrib=324.65, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=0.35, contrib=249.65, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=0.35, contrib=199.65, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=22.37, contrib=302.63, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=22.37, contrib=227.63, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=22.37, contribTesting the snapshot filters again:  sample=30  dcp=56\nTesting the snapshot filters:  sample=30  dcp=7  orig=BOS  dest=ORD  flt_no=101\n=177.63, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=8.36, contrib=316.64, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=8.36, contrib=241.64, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=8.36, contrib=191.64, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=90.75, contrib=234.25, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=90.75, contrib=159.25, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=90.75, contrib=109.25, to path=BOS-LAX\n***** ProBP, after displacement adjustment *****\nFlight = 201, BOS-ORD, cap = 100, sold = 30, bid_price = 8.36\n    Org-Dst  Cls   Price    Dmd    Contrib   Bkt  Prot  Alloc\n    BOS-LAX   Y3  325.00    6.67    324.65     0      6     70\n    BOS-LAX   Y4  250.00    6.05    249.65     1     12     64\n    BOS-LAX   Y5  200.00   28.52    199.65     2     37     58\n    BOS-ORD   Y3  150.00    6.40    150.00     3     46     32\n    BOS-ORD   Y4  125.00    5.55    125.00     4     54     24\n    BOS-ORD   Y5  100.00   19.62    100.00     5      0     16\n******************** CoreProBP iteration 2 *******************\nClass , sold=0, n=1, mu=0.00, agg_fare=324.65, rev_low=249.65, agg_mu=6.67, agg_sigma=1.36, prot=5.67, auth=70\nClass , sold=0, n=2, mu=0.00, agg_fare=288.98, rev_low=199.65, agg_mu=12.72, agg_sigma=2.37, prot=11.54, auth=64\nClass , sold=0, n=3, mu=0.00, agg_fare=227.20, rev_low=150.00, agg_mu=41.23, agg_sigma=9.39, prot=37.36, auth=58\nClass , sold=0, n=4, mu=0.00, agg_fare=216.82, rev_low=125.00, agg_mu=47.63, agg_sigma=9.52, prot=45.80, auth=32\nClass , sold=0, n=5, mu=0.00, agg_fare=207.24, rev_low=100.00, agg_mu=53.18, agg_sigma=9.63, prot=53.60, auth=24\n***** ProBP, after EMSRb *****\nFlight = 201, BOS-ORD, cap = 100, sold = 30, bid_price = 8.36\n    Org-Dst  Cls   Price    Dmd    Contrib   Bkt  Prot  Alloc\n    BOS-LAX   Y3  325.00    6.67    324.65     0      6     70\n    BOS-LAX   Y4  250.00    6.05    249.65     1     12     64\n    BOS-LAX   Y5  200.00   28.52    199.65     2     37     58\n    BOS-ORD   Y3  150.00    6.40    150.00     3     46     32\n    BOS-ORD   Y4  125.00    5.55    125.00     4     54     24\n    BOS-ORD   Y5  100.00   19.62    100.00     5      0     16\n    EMSRc, flt=201, \u03bc=53.18, \u03c3=9.63, z=1.75, agg_fare=207.24, cap=100, prob=0.04, emsr_c=8.36\nLeg1: AL2 201: BOS-ORD, bp=0.35, contrib=324.65, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=0.35, contrib=249.65, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=0.35, contrib=199.65, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=22.87, contrib=302.13, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=22.87, contrib=227.13, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=22.87, contrib=177.13, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=8.36, contrib=316.64, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=8.36, contrib=241.64, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=8.36, contrib=191.64, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=100.38, contrib=224.62, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=100.38, contrib=149.62, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=100.38, contrib=99.62, to path=BOS-LAX\n***** ProBP, after displacement adjustment *****\nFlight = 201, BOS-ORD, cap = 100, sold = 30, bid_price = 8.36\n    Org-Dst  Cls   Price    Dmd    Contrib   Bkt  Prot  Alloc\n    BOS-LAX   Y3  325.00    6.67    324.65     0      6     70\n    BOS-LAX   Y4  250.00    6.05    249.65     1     12     64\n    BOS-LAX   Y5  200.00   28.52    199.65     2     37     58\n    BOS-ORD   Y3  150.00    6.40    150.00     3     46     32\n    BOS-ORD   Y4  125.00    5.55    125.00     4     54     24\n    BOS-ORD   Y5  100.00   19.62    100.00     5      0     16\n******************** CoreProBP iteration 3 *******************\nClass , sold=0, n=1, mu=0.00, agg_fare=324.65, rev_low=249.65, agg_mu=6.67, agg_sigma=1.36, prot=5.67, auth=70\nClass , sold=0, n=2, mu=0.00, agg_fare=288.98, rev_low=199.65, agg_mu=12.72, agg_sigma=2.37, prot=11.54, auth=64\nClass , sold=0, n=3, mu=0.00, agg_fare=227.20, rev_low=150.00, agg_mu=41.23, agg_sigma=9.39, prot=37.36, auth=58\nClass , sold=0, n=4, mu=0.00, agg_farSnapshot of path untruncation:  sample=35  dcp=0  orig=BOS  dest=LAX  flt_no=202\nSnapshot of path untruncation:  sample=35  dcp=0  orig=BOS  dest=ORD  flt_no=202\ne=216.82, rev_low=125.00, agg_mu=47.63, agg_sigma=9.52, prot=45.80, auth=32\nClass , sold=0, n=5, mu=0.00, agg_fare=207.24, rev_low=100.00, agg_mu=53.18, agg_sigma=9.63, prot=53.60, auth=24\n***** ProBP, after EMSRb *****\nFlight = 201, BOS-ORD, cap = 100, sold = 30, bid_price = 8.36\n    Org-Dst  Cls   Price    Dmd    Contrib   Bkt  Prot  Alloc\n    BOS-LAX   Y3  325.00    6.67    324.65     0      6     70\n    BOS-LAX   Y4  250.00    6.05    249.65     1     12     64\n    BOS-LAX   Y5  200.00   28.52    199.65     2     37     58\n    BOS-ORD   Y3  150.00    6.40    150.00     3     46     32\n    BOS-ORD   Y4  125.00    5.55    125.00     4     54     24\n    BOS-ORD   Y5  100.00   19.62    100.00     5      0     16\n    EMSRc, flt=201, \u03bc=53.18, \u03c3=9.63, z=1.75, agg_fare=207.24, cap=100, prob=0.04, emsr_c=8.36\nLeg1: AL2 201: BOS-ORD, bp=0.35, contrib=324.65, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=0.35, contrib=249.65, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=0.35, contrib=199.65, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=8.86, contrib=316.14, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=8.86, contrib=241.14, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=8.86, contrib=191.14, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=8.36, contrib=316.64, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=8.36, contrib=241.64, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=8.36, contrib=191.64, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=100.20, contrib=224.80, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=100.20, contrib=149.80, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=100.20, contrib=99.80, to path=BOS-LAX\n***** ProBP, after displacement adjustment *****\nFlight = 201, BOS-ORD, cap = 100, sold = 30, bid_price = 8.36\n    Org-Dst  Cls   Price    Dmd    Contrib   Bkt  Prot  Alloc\n    BOS-LAX   Y3  325.00    6.67    324.65     0      6     70\n    BOS-LAX   Y4  250.00    6.05    249.65     1     12     64\n    BOS-LAX   Y5  200.00   28.52    199.65     2     37     58\n    BOS-ORD   Y3  150.00    6.40    150.00     3     46     32\n    BOS-ORD   Y4  125.00    5.55    125.00     4     54     24\n    BOS-ORD   Y5  100.00   19.62    100.00     5      0     16\n******************** CoreProBP iteration 4 *******************\nClass , sold=0, n=1, mu=0.00, agg_fare=324.65, rev_low=249.65, agg_mu=6.67, agg_sigma=1.36, prot=5.67, auth=70\nClass , sold=0, n=2, mu=0.00, agg_fare=288.98, rev_low=199.65, agg_mu=12.72, agg_sigma=2.37, prot=11.54, auth=64\nClass , sold=0, n=3, mu=0.00, agg_fare=227.20, rev_low=150.00, agg_mu=41.23, agg_sigma=9.39, prot=37.36, auth=58\nClass , sold=0, n=4, mu=0.00, agg_fare=216.82, rev_low=125.00, agg_mu=47.63, agg_sigma=9.52, prot=45.80, auth=32\nClass , sold=0, n=5, mu=0.00, agg_fare=207.24, rev_low=100.00, agg_mu=53.18, agg_sigma=9.63, prot=53.60, auth=24\n***** ProBP, after EMSRb *****\nFlight = 201, BOS-ORD, cap = 100, sold = 30, bid_price = 8.36\n    Org-Dst  Cls   Price    Dmd    Contrib   Bkt  Prot  Alloc\n    BOS-LAX   Y3  325.00    6.67    324.65     0      6     70\n    BOS-LAX   Y4  250.00    6.05    249.65     1     12     64\n    BOS-LAX   Y5  200.00   28.52    199.65     2     37     58\n    BOS-ORD   Y3  150.00    6.40    150.00     3     46     32\n    BOS-ORD   Y4  125.00    5.55    125.00     4     54     24\n    BOS-ORD   Y5  100.00   19.62    100.00     5      0     16\n    EMSRc, flt=201, \u03bc=53.18, \u03c3=9.63, z=1.75, agg_fare=207.24, cap=100, prob=0.04, emsr_c=8.36\nLeg1: AL2 201: BOS-ORD, bp=0.35, contrib=324.65, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=0.35, contrib=249.65, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=0.35, contrib=199.65, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=8.86, contrib=316.14, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=8.86, contrib=241.14, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=8.86, contrib=191.14, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=8.36, contrib=316.64, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=8.36, contrib=241.64, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=8.36, contrib=191.64, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=105.35, contrib=219.65, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=105.35, contrib=144.65, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=105.35, contrib=94.65, to path=BOS-LAX\n***** ProBP, after displacement adjustment *****\nFlight = 201, BOS-ORD, cap = 100, sold = 30, bid_price = 8.36\n    Org-Dst  Cls   Price    Dmd    Contrib   Bkt  Prot  Alloc\n    BOS-LAX   Y3  325.00    6.67    324.65     0      6     70\n    BOS-LAX   Y4  250.00    6.05    249.65     1     12     64\n    BOS-LAX   Y5  200.00   28.52    199.65     2     37     58\n    BOS-ORD   Y3  150.00    6.40    150.00     3     46     32\n    BOS-ORD   Y4  125.00    5.55    125.00     4     54     24\n    BOS-ORD   Y5  100.00   19.62    100.00     5      0     16\n******************** CoreProBP iteration 5 *******************\nClass , sold=0, n=1, mu=0.00, agg_fare=324.65, rev_low=249.65, agg_mu=6.67, agg_sigma=1.36, prot=5.67, auth=70\nClass , sold=0, n=2, mu=0.00, agg_fare=288.98, rev_low=199.65, agg_mu=12.72, agg_sigma=2.37, prot=11.54, auth=64\nClass , sold=0, n=3, mu=0.00, agg_fare=227.20, rev_low=150.00, agg_mu=41.23, agg_sigma=9.39, prot=37.36, auth=58\nClass , sold=0, n=4, mu=0.00, agg_fare=216.82, rev_low=125.00, agg_mu=47.63, agg_sigma=9.52, prot=45.80, auth=32\nClass , sold=0, n=5, mu=0.00, agg_fare=207.24, rev_low=100.00, agg_mu=53.18, agg_sigma=9.63, prot=53.60, auth=24\n***** ProBP, after EMSRb *****\nFlight = 201, BOS-ORD, cap = 100, sold = 30, bid_price = 8.36\n    Org-Dst  Cls   Price    Dmd    Contrib   Bkt  Prot  Alloc\n    BOS-LAX   Y3  325.00    6.67    324.65     0      6     70\n    BOS-LAX   Y4  250.00    6.05    249.65     1     12     64\n    BOS-LAX   Y5  200.00   28.52    199.65     2     37     58\n    BOS-ORD   Y3  150.00    6.40    150.00     3     46     32\n    BOS-ORD   Y4  125.00    5.55    125.00     4     54     24\n    BOS-ORD   Y5  100.00   19.62    100.00     5      0     16\n    EMSRc, flt=201, \u03bc=53.18, \u03c3=9.63, z=1.75, agg_fare=207.24, cap=100, prob=0.04, emsr_c=8.36\nLeg1: AL2 201: BOS-ORD, bp=0.35, contrib=324.65, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=0.35, contrib=249.65, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=0.35, contrib=199.65, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=22.43, contrib=302.57, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=22.43, contrib=227.57, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=22.43, contrib=177.57, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=8.36, contrib=316.64, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=8.36, contrib=241.64, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=8.36, contrib=191.64, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=105.34, contrib=219.66, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=105.34, contrib=144.66, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=105.34, contrib=94.66, to path=BOS-LAX\n***** ProBP, after displacement adjustment *****\nFlight = 201, BOS-ORD, cap = 100, sold = 30, bid_price = 8.36\n    Org-Dst  Cls   Price    Dmd    Contrib   Bkt  Prot  Alloc\n    BOS-LAX   Y3  325.00    6.67    324.65     0      6     70\n    BOS-LAX   Y4  250.00    6.05    249.65     1     12     64\n    BOS-LAX   Y5  200.00   28.52    199.65     2     37     58\n    BOS-ORD   Y3  150.00    6.40    150.00     3     46     32\n    BOS-ORD   Y4  125.00    5.55    125.00     4     54     24\n    BOS-ORD   Y5  100.00   19.62    100.00     5      0     16\n******************** CoreProBP iteration 6 *******************\nClass , sold=0, n=1, mu=0.00, agg_fare=324.65, rev_low=249.65, agg_mu=6.67, agg_sigma=1.36, prot=5.67, auth=70\nClass , sold=0, n=2, mu=0.00, agg_fare=288.98, rev_low=199.65, agg_mu=12.72, agg_sigma=2.37, prot=11.54, auth=64\nClass , sold=0, n=3, mu=0.00, agg_fare=227.20, rev_low=150.00, agg_mu=41.23, agg_sigma=9.39, prot=37.36, auth=58\nClass , sold=0, n=4, mu=0.00, agg_fare=216.82, rev_low=125.00, agg_mu=47.63, agg_sigma=9.52, prot=45.80, auth=32\nClass , sold=0, n=5, mu=0.00, agg_fare=207.24, rev_low=100.00, agg_mu=53.18, agg_sigma=9.63, prot=53.60, auth=24\n***** ProBP, after EMSRb *****\nFlight = 201, BOS-ORD, cap = 100, sold = 30, bid_price = 8.36\n    Org-Dst  Cls   Price    Dmd    Contrib   Bkt  Prot  Alloc\n    BOS-LAX   Y3  325.00    6.67    324.65     0      6     70\n    BOS-LAX   Y4  250.00    6.05    249.65     1     12     64\n    BOS-LAX   Y5  200.00   28.52    199.65     2     37     58\n    BOS-ORD   Y3  150.00    6.40    150.00     3     46     32\n    BOS-ORD   Y4  125.00    5.55    125.00     4     54     24\n    BOS-ORD   Y5  100.00   19.62    100.00     5      0     16\n    EMSRc, flt=201, \u03bc=53.18, \u03c3=9.63, z=1.75, agg_fare=207.24, cap=100, prob=0.04, emsr_c=8.36\nLeg1: AL2 201: BOS-ORD, bp=0.35, contrib=324.65, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=0.35, contrib=249.65, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=0.35, contrib=199.65, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=22.43, contrib=302.57, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=22.43, contrib=227.57, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=22.43, contrib=177.57, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=8.36, contrib=316.64, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=8.36, contrib=241.64, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=8.36, contrib=191.64, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=100.36, contrib=224.64, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=100.36, contrib=149.64, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=100.36, contrib=99.64, to path=BOS-LAX\n***** ProBP, after displacement adjustment *****\nFlight = 201, BOS-ORD, cap = 100, sold = 30, bid_price = 8.36\n    Org-Dst  Cls   Price    Dmd    Contrib   Bkt  Prot  Alloc\n    BOS-LAX   Y3  325.00    6.67    324.65     0      6     70\n    BOS-LAX   Y4  250.00    6.05    249.65     1     12     64\n    BOS-LAX   Y5  200.00   28.52    199.65     2     37     58\n    BOS-ORD   Y3  150.00    6.40    150.00     3     46     32\n    BOS-ORD   Y4  125.00    5.55    125.00     4     54     24\n    BOS-ORD   Y5  100.00   19.62    100.00     5      0     16\n******************** CoreProBP iteration 7 *******************\nClass , sold=0, n=1, mu=0.00, agg_fare=324.65, rev_low=249.65, agg_mu=6.67, agg_sigma=1.36, prot=5.67, auth=70\nClass , sold=0, n=2, mu=0.00, agg_fare=288.98, rev_low=199.65, agg_mu=12.72, agg_sigma=2.37, prot=11.54, auth=64\nClass , sold=0, n=3, mu=0.00, agg_fare=227.20, rev_low=150.00, agg_mu=41.23, agg_sigma=9.39, prot=37.36, auth=58\nClass , sold=0, n=4, mu=0.00, agg_fare=216.82, rev_low=125.00, agg_mu=47.63, agg_sigma=9.52, prot=45.80, auth=32\nClass , sold=0, n=5, mu=0.00, agg_fare=207.24, rev_low=100.00, agg_mu=53.18, agg_sigma=9.63, prot=53.60, auth=24\n***** ProBP, after EMSRb *****\nFlight = 201, BOS-ORD, cap = 100, sold = 30, bid_price = 8.36\n    Org-Dst  Cls   Price    Dmd    Contrib   Bkt  Prot  Alloc\n    BOS-LAX   Y3  325.00    6.67    324.65     0      6     70\n    BOS-LAX   Y4  250.00    6.05    249.65     1     12     64\n    BOS-LAX   Y5  200.00   28.52    199.65     2     37     58\n    BOS-ORD   Y3  150.00    6.40    150.00     3     46     32\n    BOS-ORD   Y4  125.00    5.55    125.00     4     54     24\n    BOS-ORD   Y5  100.00   19.62    100.00     5      0     16\n    EMSRc, flt=201, \u03bc=53.18, \u03c3=9.63, z=1.75, agg_fare=207.24, cap=100, prob=0.04, emsr_c=8.36\nLeg1: AL2 201: BOS-ORD, bp=0.35, contrib=324.65, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=0.35, contrib=249.65, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=0.35, contrib=199.65, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=8.86, contrib=316.14, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=8.86, contrib=241.14, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=8.86, contrib=191.14, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=8.36, contrib=316.64, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=8.36, contrib=241.64, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=8.36, contrib=191.64, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=100.36, contrib=224.64, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=100.36, contrib=149.64, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=100.36, contrib=99.64, to path=BOS-LAX\n***** ProBP, after displacement adjustment *****\nFlight = 201, BOS-ORD, cap = 100, sold = 30, bid_price = 8.36\n    Org-Dst  Cls   Price    Dmd    Contrib   Bkt  Prot  Alloc\n    BOS-LAX   Y3  325.00    6.67    324.65     0      6     70\n    BOS-LAX   Y4  250.00    6.05    249.65     1     12     64\n    BOS-LAX   Y5  200.00   28.52    199.65     2     37     58\n    BOS-ORD   Y3  150.00    6.40    150.00     3     46     32\n    BOS-ORD   Y4  125.00    5.55    125.00     4     54     24\n    BOS-ORD   Y5  100.00   19.62    100.00     5      0     16\n******************** CoreProBP iteration 8 *******************\nClass , sold=0, n=1, mu=0.00, agg_fare=324.65, rev_low=249.65, agg_mu=6.67, agg_sigma=1.36, prot=5.67, auth=70\nClass , sold=0, n=2, mu=0.00, agg_fare=288.98, rev_low=199.65, agg_mu=12.72, agg_sigma=2.37, prot=11.54, auth=64\nClass , sold=0, n=3, mu=0.00, agg_fare=227.20, rev_low=150.00, agg_mu=41.23, agg_sigma=9.39, prot=37.36, auth=58\nClass , sold=0, n=4, mu=0.00, agg_fare=216.82, rev_low=125.00, agg_mu=47.63, agg_sigma=9.52, prot=45.80, auth=32\nClass , sold=0, n=5, mu=0.00, agg_fare=207.24, rev_low=100.00, agg_mu=53.18, agg_sigma=9.63, prot=53.60, auth=24\n***** ProBP, after EMSRb *****\nFlight = 201, BOS-ORD, cap = 100, sold = 30, bid_price = 8.36\n    Org-Dst  Cls   Price    Dmd    Contrib   Bkt  Prot  Alloc\n    BOS-LAX   Y3  325.00    6.67    324.65     0      6     70\n    BOS-LAX   Y4  250.00    6.05    249.65     1     12     64\n    BOS-LAX   Y5  200.00   28.52    199.65     2     37     58\n    BOS-ORD   Y3  150.00    6.40    150.00     3     46     32\n    BOS-ORD   Y4  125.00    5.55    125.00     4     54     24\n    BOS-ORD   Y5  100.00   19.62    100.00     5      0     16\n    EMSRc, flt=201, \u03bc=53.18, \u03c3=9.63, z=1.75, agg_fare=207.24, cap=100, prob=0.04, emsr_c=8.36\nLeg1: AL2 201: BOS-ORD, bp=0.35, contrib=324.65, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=0.35, contrib=249.65, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=0.35, contrib=199.65, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=8.86, contrib=316.14, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=8.86, contrib=241.14, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=8.86, contrib=191.14, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=8.36, contrib=316.64, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=8.36, contrib=241.64, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=8.36, contrib=191.64, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=105.35, contrib=219.65, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=105.35, contrib=144.65, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=105.35, contrib=94.65, to path=BOS-LAX\n***** ProBP, after displacement adjustment *****\nFlight = 201, BOS-ORD, cap = 100, sold = 30, bid_price = 8.36\n    Org-Dst  Cls   Price    Dmd    Contrib   Bkt  Prot  Alloc\n    BOS-LAX   Y3  325.00    6.67    324.65     0      6     70\n    BOS-LAX   Y4  250.00    6.05    249.65     1     12     64\n    BOS-LAX   Y5  200.00   28.52    199.65     2     37     58\n    BOS-ORD   Y3  150.00    6.40    150.00     3     46     32\n    BOS-ORD   Y4  125.00    5.55    125.00     4     54     24\n    BOS-ORD   Y5  100.00   19.62    100.00     5      0     16\n******************** CoreProBP iteration 9 *******************\nClass , sold=0, n=1, mu=0.00, agg_fare=324.65, rev_low=249.65, agg_mu=6.67, agg_sigma=1.36, prot=5.67, auth=70\nClass , sold=0, n=2, mu=0.00, agg_fare=288.98, rev_low=199.65, agg_mu=12.72, agg_sigma=2.37, prot=11.54, auth=64\nClass , sold=0, n=3, mu=0.00, agg_fare=227.20, rev_low=150.00, agg_mu=41.23, agg_sigma=9.39, prot=37.36, auth=58\nClass , sold=0, n=4, mu=0.00, agg_fare=216.82, rev_low=125.00, agg_mu=47.63, agg_sigma=9.52, prot=45.80, auth=32\nClass , sold=0, n=5, mu=0.00, agg_fare=207.24, rev_low=100.00, agg_mu=53.18, agg_sigma=9.63, prot=53.60, auth=24\n***** ProBP, after EMSRb *****\nFlight = 201, BOS-ORD, cap = 100, sold = 30, bid_price = 8.36\n    Org-Dst  Cls   Price    Dmd    Contrib   Bkt  Prot  Alloc\n    BOS-LAX   Y3  325.00    6.67    324.65     0      6     70\n    BOS-LAX   Y4  250.00    6.05    249.65     1     12     64\n    BOS-LAX   Y5  200.00   28.52    199.65     2     37     58\n    BOS-ORD   Y3  150.00    6.40    150.00     3     46     32\n    BOS-ORD   Y4  125.00    5.55    125.00     4     54     24\n    BOS-ORD   Y5  100.00   19.62    100.00     5      0     16\n    EMSRc, flt=201, \u03bc=53.18, \u03c3=9.63, z=1.75, agg_fare=207.24, cap=100, prob=0.04, emsr_c=8.36\nLeg1: AL2 201: BOS-ORD, bp=0.35, contrib=324.65, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=0.35, contrib=249.65, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=0.35, contrib=199.65, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=22.43, contrib=302.57, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=22.43, contrib=227.57, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=22.43, contrib=177.57, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=8.36, contrib=316.64, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=8.36, contrib=241.64, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=8.36, contrib=191.64, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=105.35, contrib=219.65, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=105.35, contrib=144.65, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=105.35, contrib=94.65, to path=BOS-LAX\n***** ProBP, after displacement adjustment *****\nFlight = 201, BOS-ORD, cap = 100, sold = 30, bid_price = 8.36\n    Org-Dst  Cls   Price    Dmd    Contrib   Bkt  Prot  Alloc\n    BOS-LAX   Y3  325.00    6.67    324.65     0      6     70\n    BOS-LAX   Y4  250.00    6.05    249.65     1     12     64\n    BOS-LAX   Y5  200.00   28.52    199.65     2     37     58\n    BOS-ORD   Y3  150.00    6.40    150.00     3     46     32\n    BOS-ORD   Y4  125.00    5.55    125.00     4     54     24\n    BOS-ORD   Y5  100.00   19.62    100.00     5      0     16\nLeg: AL1:101 BOS-ORD, cap: 100, sold: 90, bp: 0.00\n Class  Sold  ActRev    Fcst  StdDev FcstRev  Prot  Auth\n    Y0     0    0.00    0.00    0.00  400.00     0    10\n    Y1     7  532.14   10.17    2.80  300.00     9    10\n    Y2    24  335.42   11.16    3.35  200.00    20     1\n    Y3    46  248.91    0.00    0.00  150.00    21     0\n    Y4    12  125.00    0.00    0.00  125.00    22     0\n    Y5     1  100.00    0.00    0.00  100.00     0     0\nCoreProBP initialize *******************\nLeg1: AL2 201: BOS-ORD, bp=0.02, contrib=324.98, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=0.02, contrib=249.98, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=0.02, contrib=199.98, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=0.42, contrib=324.58, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=0.42, contrib=249.58, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=0.42, contrib=199.58, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.25, contrib=324.75, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.25, contrib=249.75, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.25, contrib=199.75, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=3.64, contrib=321.36, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=3.64, contrib=246.36, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=3.64, contrib=196.36, to path=BOS-LAX\n******************** CoreProBP iteration 0 *******************\nClass , sold=0, n=1, mu=0.00, agg_fare=324.98, rev_low=249.98, agg_mu=5.68, agg_sigma=1.21, prot=4.78, auth=79\nClass , sold=0, n=2, mu=0.00, agg_fare=293.54, rev_low=199.98, agg_mu=9.77, agg_sigma=1.93, prot=8.86, auth=74\nClass , sold=0, n=3, mu=0.00, agg_fare=222.70, rev_low=150.00, agg_mu=40.24, agg_sigma=9.26, prot=36.08, auth=70\nClass , sold=0, n=4, mu=0.00, agg_fare=214.56, rev_low=125.00, agg_mu=45.32, agg_sigma=9.34, prot=43.37, auth=42\nClass , sold=0, n=5, mu=0.00, agg_fare=204.98, rev_low=100.00, agg_mu=50.75, agg_sigma=9.47, prot=51.03, auth=35\n***** ProBP, after EMSRb *****\nFlight = 201, BOS-ORD, cap = 100, sold = 21, bid_price = 0.25\n    Org-Dst  Cls   Price    Dmd    Contrib   Bkt  Prot  Alloc\n    BOS-LAX   Y3  325.00    5.68    324.98     0      5     79\n    BOS-LAX   Y4  250.00    4.10    249.98     1      9     74\n    BOS-LAX   Y5  200.00   30.47    199.98     2     36     70\n    BOS-ORD   Y3  150.00    5.08    150.00     3     43     42\n    BOS-ORD   Y4  125.00    5.43    125.00     4     51     35\n    BOS-ORD   Y5  100.00   17.47    100.00     5      0     28\n    EMSRc, flt=201, \u03bc=50.75, \u03c3=9.47, z=2.98, agg_fare=204.98, cap=100, prob=0.00, emsr_c=0.29\nLeg1: AL2 201: BOS-ORD, bp=0.01, contrib=324.99, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=0.01, contrib=249.99, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=0.01, contrib=199.99, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=0.71, contrib=324.29, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=0.71, contrib=249.29, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=0.71, contrib=199.29, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.29, contrib=324.71, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.29, contrib=249.71, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.29, contrib=199.71, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=11.77, contrib=313.23, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=11.77, contrib=238.23, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=11.77, contrib=188.23, to path=BOS-LAX\n***** ProBP, after displacement adjustment *****\nFlight = 201, BOS-ORD, cap = 100, sold = 21, bid_price = 0.29\n    Org-Dst  Cls   Price    Dmd    Contrib   Bkt  Prot  Alloc\n    BOS-LAX   Y3  325.00    5.68    324.99     0      5     79\n    BOS-LAX   Y4  250.00    4.10    249.99     1      9     74\n    BOS-LAX   Y5  200.00   30.47    199.99     2     36     70\n    BOS-ORD   Y3  150.00    5.08    150.00     3     43     42\n    BOS-ORD   Y4  125.00    5.43    125.00     4     51     35\n    BOS-ORD   Y5  100.00   17.47    100.00     5      0     28\n******************** CoreProBP iteration 1 *******************\nClass , sold=0, n=1, mu=0.00, agg_fare=324.99, rev_low=249.99, agg_mu=5.68, agg_sigma=1.21, prot=4.78, auth=79\nClass , sold=0, n=2, mu=0.00, agg_fare=293.55, rev_low=199.99, agg_mu=9.77, agg_sigma=1.93, prot=8.86, auth=74\nClass , sold=0, n=3, mu=0.00, agg_fare=222.71, rev_low=150.00, agg_mu=40.24, agg_sigma=9.26, prot=36.08, auth=70\nClass , sold=0, n=4, mu=0.00, agg_fare=214.56, rev_low=125.00, agg_mu=45.32, agg_sigma=9.34, prot=43.37, auth=42\nClass , sold=0, n=5, mu=0.00, agg_fare=204.98, rev_low=100.00, agg_mu=50.75, agg_sigma=9.47, prot=51.03, auth=35\n***** ProBP, after EMSRb *****\nFlight = 201, BOS-ORD, cap = 100, sold = 21, bid_price = 0.29\n    Org-Dst  Cls   Price    Dmd    Contrib   Bkt  Prot  Alloc\n    BOS-LAX   Y3  325.00    5.68    324.99     0      5     79\n    BOS-LAX   Y4  250.00    4.10    249.99     1      9     74\n    BOS-LAX   Y5  200.00   30.47    199.99     2     36     70\n    BOS-ORD   Y3  150.00    5.08    150.00     3     43     42\n    BOS-ORD   Y4  125.00    5.43    125.00     4     51     35\n    BOS-ORD   Y5  100.00   17.47    100.00     5      0     28\n    EMSRc, flt=201, \u03bc=50.75, \u03c3=9.47, z=2.98, agg_fare=204.98, cap=100, prob=0.00, emsr_c=0.29\nLeg1: AL2 201: BOS-ORD, bp=0.01, contrib=324.99, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=0.01, contrib=249.99, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=0.01, contrib=199.99, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=0.70, contrib=324.30, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=0.70, contrib=249.30, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=0.70, contrib=199.30, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.29, contrib=324.71, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.29, contrib=249.71, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.29, contrib=199.71, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=11.76, contrib=313.24, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=11.76, contrib=238.24, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=11.76, contrib=188.24, to path=BOS-LAX\n***** ProBP, after displacement adjustment *****\nFlight = 201, BOS-ORD, cap = 100, sold = 21, bid_price = 0.29\n    Org-Dst  Cls   Price    Dmd    Contrib   Bkt  Prot  Alloc\n    BOS-LAX   Y3  325.00    5.68    324.99     0      5     79\n    BOS-LAX   Y4  250.00    4.10    249.99     1      9     74\n    BOS-LAX   Y5  200.00   30.47    199.99     2     36     70\n    BOS-ORD   Y3  150.00    5.08    150.00     3     43     42\n    BOS-ORD   Y4  125.00    5.43    125.00     4     51     35\n    BOS-ORD   Y5  100.00   17.47    100.00     5      0     28\n******************** CoreProBP iteration 2 *******************\nClass , sold=0, n=1, mu=0.00, agg_fare=324.99, rev_low=249.99, agg_mu=5.68, agg_sigma=1.21, prot=4.78, auth=79\nClass , sold=0, n=2, mu=0.00, agg_fare=293.55, rev_low=199.99, agg_mu=9.77, agg_sigma=1.93, prot=8.86, auth=74\nClass , sold=0, n=3, mu=0.00, agg_fare=222.71, rev_low=150.00, agg_mu=40.24, agg_sigma=9.26, prot=36.08, auth=70\nClass , sold=0, n=4, mu=0.00, agg_fare=214.56, rev_low=125.00, agg_mu=45.32, agg_sigma=9.34, prot=43.37, auth=42\nClass , sold=0, n=5, mu=0.00, agg_fare=204.98, rev_low=100.00, agg_mu=50.75, agg_sigma=9.47, prot=51.03, auth=35\n***** ProBP, after EMSRb *****\nFlight = 201, BOS-ORD, cap = 100, sold = 21, bid_price = 0.29\n    Org-Dst  Cls   Price    Dmd    Contrib   Bkt  Prot  Alloc\n    BOS-LAX   Y3  325.00    5.68    324.99     0      5     79\n    BOS-LAX   Y4  250.00    4.10    249.99     1      9     74\n    BOS-LAX   Y5  200.00   30.47    199.99     2     36     70\n    BOS-ORD   Y3  150.00    5.08    150.00     3     43     42\n    BOS-ORD   Y4  125.00    5.43    125.00     4     51     35\n    BOS-ORD   Y5  100.00   17.47    100.00     5      0     28\n    EMSRc, flt=201, \u03bc=50.75, \u03c3=9.47, z=2.98, agg_fare=204.98, cap=100, prob=0.00, emsr_c=0.29\nLeg1: AL2 201: BOS-ORD, bp=0.01, contrib=324.99, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=0.01, contrib=249.99, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=0.01, contrib=199.99, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=0.70, contrib=324.30, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=0.70, contrib=249.30, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=0.70, contrib=199.30, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.29, contrib=324.71, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.29, contrib=249.71, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.29, contrib=199.71, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=11.76, contrib=313.24, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=11.76, contrib=238.24, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=11.76, contrib=188.24, to path=BOS-LAX\n***** ProBP, after displacement adjustment *****\nFlight = 201, BOS-ORD, cap = 100, sold = 21, bid_price = 0.29\n    Org-Dst  Cls   Price    Dmd    Contrib   Bkt  Prot  Alloc\n    BOS-LAX   Y3  325.00    5.68    324.99     0      5     79\n    BOS-LAX   Y4  250.00    4.10    249.99     1      9     74\n    BOS-LAX   Y5  200.00   30.47    199.99     2     36     70\n    BOS-ORD   Y3  150.00    5.08    150.00     3     43     42\n    BOS-ORD   Y4  125.00    5.43    125.00     4     51     35\n    BOS-ORD   Y5  100.00   17.47    100.00     5      0     28\nProBP converged in 2 iterations\nLeg: AL1:101 BOS-ORD, cap: 100, sold: 93, bp: 0.00\n Class  Sold  ActRev    Fcst  StdDev FcstRev  Prot  Auth\n    Y0     0    0.00    0.00    0.00  400.00     0     7\n    Y1    10  495.00   10.11    3.86  300.00     8     7\n    Y2    19  331.58   10.18    2.54  200.00    19     0\n    Y3    38  228.29    0.00    0.00  150.00    20     0\n    Y4    14  214.29    0.00    0.00  125.00    21     0\n    Y5    12  100.00    0.00    0.00  100.00     0     0\n***** Class History, total demand = 0.74\n   DCP Inc_DMD |  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep\n     0    0.00 |    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    1 \n     1    0.00 |    0    1    0    2    0    1    1    0    0    0    0    0    1    0    1    0    0    0    0    0    0    1    0    0    0    2 \n     2    0.00 |    0    1    0    3    0    1    2    1    0    0    0    0    1    0    1-   0    0    0    1    0    0    2    0    0    0    2 \n     3    0.74 |    0    1-   0    3-   0-   1    2-   2-   0    0-   0    1    1    0    1-   0-   0    0-   1    0    0-   2-   0-   0    0-   2 \n     4    0.00 |    0-   1-   0-   3-   0-   1-   2-   2-   1-   0-   0-   1-   1-   0-   1-   0-   0-   0-   1-   0-   0-   2-   0-   0    0-   2-\n     5    0.00 |    0-   1-   0-   3-   0-   1-   2-   2-   1-   0-   0-   1-   1-   0-   1-   0-   0-   0-   1-   0-   0-   2-   0-   0-   0-   2-\n     6    0.00 |    0-   1-   0-   3-   0-   1-   2-   2-   1-   0-   0-   1-   1-   0-   1-   0-   0-   0-   1-   0-   0-   2-   0-   0-   0-   2-\n     7    0.00 |    0-   1-   0-   3-   0-   1-   2-   2-   1-   0-   0-   1-   1-   0-   1-   0-   0-   0-   1-   0-   0-   2-   0-   0-   0-   2-\n     8    0.00 |    0-   1-   0-   3-   0-   1-   2-   2-   1-   0-   0-   1-   1-   0-   1-   0-   0-   0-   1-   0-   0-   2-   0-   0-   0-   2-\n     9    0.00 |    0-   1-   0-   3-   0-   1-   2-   2-   1-   0-   0-   1-   1-   0-   1-   0-   0-   0-   1-   0-   0-   2-   0-   0-   0-   2-\n    10    0.00 |    0-   1-   0-   3-   0-   1-   2-   2-   1-   0-   0-   1-   1-   0-   1-   0-   0-   0-   1-   0-   0-   2-   0-   0-   0-   2-\n    11    0.00 |    0-   1-   0-   3-   0-   1-   2-   2-   1-   0-   0-   1-   1-   0-   1-   0-   0-   0-   1-   0-   0-   2-   0-   0-   0-   2-\n    12    0.00 |    0-   1-   0-   3-   0-   1-   2-   2-   1-   0-   0-   1-   1-   0-   1-   0-   0-   0-   1-   0-   0-   2-   0-   0-   0-   2-\n    13    0.00 |    0-   1-   0-   3-   0-   1-   2-   2-   1-   0-   0-   1-   1-   0-   1-   0-   0-   0-   1-   0-   0-   2-   0-   0-   0-   2-\n    14    0.00 |    0-   1-   0-   3-   0-   1-   2-   2-   1-   0-   0-   1-   1-   0-   1-   0-   0-   0-   1-   0-   0-   2-   0-   0-   0-   2-\n    15    0.00 |    0-   1-   0-   3-   0-   1-   2-   2-   1-   0-   0-   1-   1-   0-   1-   0-   0-   0-   1-   0-   0-   2-   0-   0-   0-   2-\n    16    0.00 |    0-   1-   0-   3-   0-   1-   2-   2-   1-   0-   0-   1-   1-   0-   1-   0-   0-   0-   1-   0-   0-   2-   0-   0-   0-   2-\n***** Class History, total demand = 12.00\n   DCP Inc_DMD |  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep\n     0    4.00 |    0    1    0    0    0    0    1    0    0    0    0    1    0    0    0    1    0    0    0    0    0    0    0    0    0    0 \n     1    1.00 |    4    6    3    6    8    2    8    8    3    6    4    8   10    9   16   19    4   11    5    6    6    6    9    2    9    4 \n     2    3.00 |    5   11   10    8   12    5   11   11    5    9    6   12   12   12   23   28    5   20   10   12   12   11   15    4   13    9 \n     3    2.00 |    8   12-  12   13   16-  10   15-  16-   8   12    9   17   14   15   25-  31-   7   25-  10   16   16-  19   16    6   17   12 \n     4    1.00 |   10   12-  17   16-  16-  13   15-  16-  12   13-   9-  21-  17-  18-  25-  31-   8   25-  13-  18   16-  19-  20-  10   23   15 \n     5    0.00 |   11   12-  21-  16-  16-  16-  15-  16-  12   13-   9-  21-  17-  18-  25-  31-   9   25-  13-  18-  16-  19-  20-  16   25   16 \n     6    0.00 |   11   12-  21-  16-  16-  16-  15-  16-  13   13-   9-  21-  17-  18-  25-  31-  10-  25-  13-  18-  16-  19-  20-  16-  26   17 \n     7    1.00 |   11   12-  21-  16-  16-  16-  15-  16-  15   13-   9-  21-  17-  18-  25-  31-  10-  25-  13-  18-  16-  19-  20-  16-  28   18 \n     8    0.00 |   12   12-  21-  16-  16-  16-  15-  16-  17   13-   9-  21-  17-  18-  25-  31-  10-  25-  13-  18-  16-  19-  20-  16-  30-  20-\n     9    0.00 |   12   12-  21-  16-  16-  16-  15-  16-  17   13-   9-  21-  17-  18-  25-  31-  10-  25-  13-  18-  16-  19-  20-  16-  30-  20-\n    10    0.00 |   12   12-  21-  16-  16-  16-  15-  16-  17   13-   9-  21-  17-  18-  25-  31-  10-  25-  13-  18-  16-  19-  20-  16-  30-  20-\n    11    0.00 |   12   12-  21-  16-  16-  16-  15-  16-  17   13-   9-  21-  17-  18-  25-  31-  10-  25-  13-  18-  16-  19-  20-  16-  30-  20-\n    12    0.00 |   12   12-  21-  16-  16-  16-  15-  16-  17   13-   9-  21-  17-  18-  25-  31-  10-  25-  13-  18-  16-  19-  20-  16-  30-  20-\n    13    0.00 |   12   12-  21-  16-  16-  16-  15-  16-  17   13-   9-  21-  17-  18-  25-  31-  10-  25-  13-  18-  16-  19-  20-  16-  30-  20-\n    14    0.00 |   12   12-  21-  16-  16-  16-  15-  16-  17   13-   9-  21-  17-  18-  25-  31-  10-  25-  13-  18-  16-  19-  20-  16-  30-  20-\n    15    0.00 |   12   12-  21-  16-  16-  16-  15-  16-  17   13-   9-  21-  17-  18-  25-  31-  10-  25-  13-  18-  16-  19-  20-  16-  30-  20-\n    16    0.00 |   12   12-  21-  16-  16-  16-  15-  16-  17   13-   9-  21-  17-  18-  25-  31-  10-  25-  13-  18-  16-  19-  20-  16-  30-  20-\nTesting the snapshot filters again:  sample=20  dcp=56\nTesting the snapshot filters:  sample=20  dcp=7  orig=BOS  dest=ORD  flt_no=101\nCoreProBP initialize *******************\nLeg1: AL2 201: BOS-ORD, bp=0.49, contrib=324.51, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=0.49, contrib=249.51, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=0.49, contrib=199.51, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=0.15, contrib=324.85, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=0.15, contrib=249.85, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=0.15, contrib=199.85, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.66, contrib=324.34, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.66, contrib=249.34, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.66, contrib=199.34, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=1.13, contrib=323.87, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=1.13, contrib=248.87, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=1.13, contrib=198.87, to path=BOS-LAX\n******************** CoreProBP iteration 0 *******************\nClass , sold=0, n=1, mu=0.00, agg_fare=324.51, rev_low=249.51, agg_mu=1.90, agg_sigma=0.68, prot=1.40, auth=87\nClass , sold=0, n=2, mu=0.00, agg_fare=265.64, rev_low=199.51, agg_mu=8.83, agg_sigma=2.11, prot=7.39, auth=85\nClass , sold=0, n=3, mu=0.00, agg_fare=215.22, rev_low=150.00, agg_mu=37.15, agg_sigma=8.73, prot=32.65, auth=79\nClass , sold=0, n=4, mu=0.00, agg_fare=202.71, rev_low=125.00, agg_mu=45.97, agg_sigma=9.01, prot=43.30, auth=54\nClass , sold=0, n=5, mu=0.00, agg_fare=191.82, rev_low=100.00, agg_mu=53.46, agg_sigma=9.23, prot=52.97, auth=43\n***** ProBP, after EMSRb *****\nFlight = 201, BOS-ORD, cap = 100, sold = 13, bid_price = 0.66\n    Org-Dst  Cls   Price    Dmd    Contrib   Bkt  Prot  Alloc\n    BOS-LAX   Y3  325.00    1.90    324.51     0      1     87\n    BOS-LAX   Y4  250.00    6.93    249.51     1      7     85\n    BOS-LAX   Y5  200.00   28.33    199.51     2     33     79\n    BOS-ORD   Y3  150.00    8.82    150.00     3     43     54\n    BOS-ORD   Y4  125.00    7.49    125.00     4     53     43\n    BOS-ORD   Y5  100.00   20.32    100.00     5      0     34\n    EMSRc, flt=201, \u03bc=53.46, \u03c3=9.23, z=3.63, agg_fare=191.82, cap=100, prob=0.00, emsr_c=0.03\nLeg1: AL2 201: BOS-ORD, bp=0.19, contrib=324.81, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=0.19, contrib=249.81, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=0.19, contrib=199.81, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=0.00, contrib=325.00, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=0.00, contrib=250.00, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=0.00, contrib=200.00, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.03, contrib=324.97, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.03, contrib=249.97, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.03, contrib=199.97, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=0.19, contrib=324.81, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=0.19, contrib=249.81, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=0.19, contrib=199.81, to path=BOS-LAX\n***** ProBP, after displacement adjustment *****\nFlight = 201, BOS-ORD, cap = 100, sold = 13, bid_price = 0.03\n    Org-Dst  Cls   Price    Dmd    Contrib   Bkt  Prot  Alloc\n    BOS-LAX   Testing the snapshot filters again:  sample=30  dcp=56\nTesting the snapshot filters:  sample=30  dcp=7  orig=BOS  dest=ORD  flt_no=101\nY3  325.00    1.90    324.81     0      1     87\n    BOS-LAX   Y4  250.00    6.93    249.81     1      7     85\n    BOS-LAX   Y5  200.00   28.33    199.81     2     33     79\n    BOS-ORD   Y3  150.00    8.82    150.00     3     43     54\n    BOS-ORD   Y4  125.00    7.49    125.00     4     53     43\n    BOS-ORD   Y5  100.00   20.32    100.00     5      0     34\n******************** CoreProBP iteration 1 *******************\nClass , sold=0, n=1, mu=0.00, agg_fare=324.81, rev_low=249.81, agg_mu=1.90, agg_sigma=0.68, prot=1.40, auth=87\nClass , sold=0, n=2, mu=0.00, agg_fare=265.94, rev_low=199.81, agg_mu=8.83, agg_sigma=2.11, prot=7.39, auth=85\nClass , sold=0, n=3, mu=0.00, agg_fare=215.52, rev_low=150.00, agg_mu=37.15, agg_sigma=8.73, prot=32.68, auth=79\nClass , sold=0, n=4, mu=0.00, agg_fare=202.95, rev_low=125.00, agg_mu=45.97, agg_sigma=9.01, prot=43.32, auth=54\nClass , sold=0, n=5, mu=0.00, agg_fare=192.03, rev_low=100.00, agg_mu=53.46, agg_sigma=9.23, prot=52.98, auth=43\n***** ProBP, after EMSRb *****\nFlight = 201, BOS-ORD, cap = 100, sold = 13, bid_price = 0.03\n    Org-Dst  Cls   Price    Dmd    Contrib   Bkt  Prot  Alloc\n    BOS-LAX   Y3  325.00    1.90    324.81     0      1     87\n    BOS-LAX   Y4  250.00    6.93    249.81     1      7     85\n    BOS-LAX   Y5  200.00   28.33    199.81     2     33     79\n    BOS-ORD   Y3  150.00    8.82    150.00     3     43     54\n    BOS-ORD   Y4  125.00    7.49    125.00     4     53     43\n    BOS-ORD   Y5  100.00   20.32    100.00     5      0     34\n    EMSRc, flt=201, \u03bc=53.46, \u03c3=9.23, z=3.63, agg_fare=192.03, cap=100, prob=0.00, emsr_c=0.03\nLeg1: AL2 201: BOS-ORD, bp=0.19, contrib=324.81, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=0.19, contrib=249.81, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=0.19, contrib=199.81, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=0.00, contrib=325.00, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=0.00, contrib=250.00, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=0.00, contrib=200.00, to path=BSnapshot of path untruncation:  sample=35  dcp=0  orig=BOS  dest=LAX  flt_no=202\nSnapshot of path untruncation:  sample=35  dcp=0  orig=BOS  dest=ORD  flt_no=202\nOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.03, contrib=324.97, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.03, contrib=249.97, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.03, contrib=199.97, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=0.19, contrib=324.81, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=0.19, contrib=249.81, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=0.19, contrib=199.81, to path=BOS-LAX\n***** ProBP, after displacement adjustment *****\nFlight = 201, BOS-ORD, cap = 100, sold = 13, bid_price = 0.03\n    Org-Dst  Cls   Price    Dmd    Contrib   Bkt  Prot  Alloc\n    BOS-LAX   Y3  325.00    1.90    324.81     0      1     87\n    BOS-LAX   Y4  250.00    6.93    249.81     1      7     85\n    BOS-LAX   Y5  200.00   28.33    199.81     2     33     79\n    BOS-ORD   Y3  150.00    8.82    150.00     3     43     54\n    BOS-ORD   Y4  125.00    7.49    125.00     4     53     43\n    BOS-ORD   Y5  100.00   20.32    100.00     5      0     34\n******************** CoreProBP iteration 2 *******************\nClass , sold=0, n=1, mu=0.00, agg_fare=324.81, rev_low=249.81, agg_mu=1.90, agg_sigma=0.68, prot=1.40, auth=87\nClass , sold=0, n=2, mu=0.00, agg_fare=265.94, rev_low=199.81, agg_mu=8.83, agg_sigma=2.11, prot=7.39, auth=85\nClass , sold=0, n=3, mu=0.00, agg_fare=215.52, rev_low=150.00, agg_mu=37.15, agg_sigma=8.73, prot=32.68, auth=79\nClass , sold=0, n=4, mu=0.00, agg_fare=202.95, rev_low=125.00, agg_mu=45.97, agg_sigma=9.01, prot=43.32, auth=54\nClass , sold=0, n=5, mu=0.00, agg_fare=192.03, rev_low=100.00, agg_mu=53.46, agg_sigma=9.23, prot=52.98, auth=43\n***** ProBP, after EMSRb *****\nFlight = 201, BOS-ORD, cap = 100, sold = 13, bid_price = 0.03\n    Org-Dst  Cls   Price    Dmd    Contrib   Bkt  Prot  Alloc\n    BOS-LAX   Y3  325.00    1.90    324.81     0      1     87\n    BOS-LAX   Y4  250.00    6.93    249.81     1      7     85\n    BOS-LAX   Y5  200.00   28.33    199.81     2     33     79\n    BOS-ORD   Y3  150.00    8.82    150.00     3     43     54\n    BOS-ORD   Y4  125.00    7.49    125.00     4     53     43\n    BOS-ORD   Y5  100.00   20.32    100.00     5      0     34\n    EMSRc, flt=201, \u03bc=53.46, \u03c3=9.23, z=3.63, agg_fare=192.03, cap=100, prob=0.00, emsr_c=0.03\nLeg1: AL2 201: BOS-ORD, bp=0.19, contrib=324.81, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=0.19, contrib=249.81, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=0.19, contrib=199.81, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=0.00, contrib=325.00, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=0.00, contrib=250.00, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=0.00, contrib=200.00, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.03, contrib=324.97, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.03, contrib=249.97, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.03, contrib=199.97, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=0.19, contrib=324.81, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=0.19, contrib=249.81, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=0.19, contrib=199.81, to path=BOS-LAX\n***** ProBP, after displacement adjustment *****\nFlight = 201, BOS-ORD, cap = 100, sold = 13, bid_price = 0.03\n    Org-Dst  Cls   Price    Dmd    Contrib   Bkt  Prot  Alloc\n    BOS-LAX   Y3  325.00    1.90    324.81     0      1     87\n    BOS-LAX   Y4  250.00    6.93    249.81     1      7     85\n    BOS-LAX   Y5  200.00   28.33    199.81     2     33     79\n    BOS-ORD   Y3  150.00    8.82    150.00     3     43     54\n    BOS-ORD   Y4  125.00    7.49    125.00     4     53     43\n    BOS-ORD   Y5  100.00   20.32    100.00     5      0     34\nProBP converged in 2 iterations\nLeg: AL1:101 BOS-ORD, cap: 100, sold: 60, bp: 0.00\n Class  Sold  ActRev    Fcst  StdDev FcstRev  Prot  Auth\n    Y0     0    0.00    0.00    0.00  400.00     0    40\n    Y1     0    0.00    9.71    2.94  300.00     8    40\n    Y2     1  450.00    9.99    2.75  200.00    19    31\n    Y3    31  257.26    0.00    0.00  150.00    20    21\n    Y4    22  221.59    0.00    0.00  125.00    21    20\n    Y5     6  100.00    0.00    0.00  100.00     0    19\nCoreProBP initialize *******************\nLeg1: AL2 201: BOS-ORD, bp=0.01, contrib=324.99, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=0.01, contrib=249.99, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=0.01, contrib=199.99, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=0.13, contrib=324.87, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=0.13, contrib=249.87, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=0.13, contrib=199.87, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.13, contrib=324.87, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.13, contrib=249.87, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.13, contrib=199.87, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=1.36, contrib=323.64, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=1.36, contrib=248.64, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=1.36, contrib=198.64, to path=BOS-LAX\n******************** CoreProBP iteration 0 *******************\nClass , sold=0, n=1, mu=0.00, agg_fare=324.99, rev_low=249.99, agg_mu=2.35, agg_sigma=0.83, prot=1.74, auth=90\nClass , sold=0, n=2, mu=0.00, agg_fare=272.49, rev_low=199.99, agg_mu=7.83, agg_sigma=1.67, prot=6.78, auth=88\nClass , sold=0, n=3, mu=0.00, agg_fare=217.50, rev_low=150.00, agg_mu=32.40, agg_sigma=9.93, prot=27.49, auth=83\nClass , sold=0, n=4, mu=0.00, agg_fare=204.87, rev_low=125.00, agg_mu=39.86, agg_sigma=10.09, prot=37.04, auth=62\nClass , sold=0, n=5, mu=0.00, agg_fare=196.15, rev_low=100.00, agg_mu=44.75, agg_sigma=10.18, prot=44.50, auth=52\n***** ProBP, after EMSRb *****\nFlight = 201, BOS-ORD, cap = 100, sold = 10, bid_price = 0.13\n    Org-Dst  Cls   Price    Dmd    Contrib   Bkt  Prot  Alloc\n    BOS-LAX   Y3  325.00    2.35    324.99     0      2     90\n    BOS-LAX   Y4  250.00    5.48    249.99     1      7     88\n    BOS-LAX   Y5  200.00   24.58    199.99     2     27     83\n    BOS-ORD   Y3  150.00    7.46    150.00     3     37     62\n    BOS-ORD   Y4  125.00    4.88    125.00     4     44     52\n    BOS-ORD   Y5  100.00   16.45    100.00     5      0     46\n    EMSRc, flt=201, \u03bc=44.75, \u03c3=10.18, z=4.44, agg_fare=196.15, cap=100, prob=0.00, emsr_c=0.00\nLeg1: AL2 201: BOS-ORD, bp=0.00, contrib=325.00, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=0.00, contrib=250.00, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=0.00, contrib=200.00, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=0.00, contrib=325.00, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=0.00, contrib=250.00, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=0.00, contrib=200.00, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.00, contrib=325.00, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.00, contrib=250.00, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.00, contrib=200.00, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=0.54, contrib=324.46, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=0.54, contrib=249.46, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=0.54, contrib=199.46, to path=BOS-LAX\n***** ProBP, after displacement adjustment *****\nFlight = 201, BOS-ORD, cap = 100, sold = 10, bid_price = 0.00\n    Org-Dst  Cls   Price    Dmd    Contrib   Bkt  Prot  Alloc\n    BOS-LAX   Y3  325.00    2.35    325.00     0      2     90\n    BOS-LAX   Y4  250.00    5.48    250.00     1      7     88\n    BOS-LAX   Y5  200.00   24.58    200.00     2     27     83\n    BOS-ORD   Y3  150.00    7.46    150.00     3     37     62\n    BOS-ORD   Y4  125.00    4.88    125.00     4     44     52\n    BOS-ORD   Y5  100.00   16.45    100.00     5      0     46\n******************** CoreProBP iteration 1 *******************\nClass , sold=0, n=1, mu=0.00, agg_fare=325.00, rev_low=250.00, agg_mu=2.35, agg_sigma=0.83, prot=1.74, auth=90\nClass , sold=0, n=2, mu=0.00, agg_fare=272.50, rev_low=200.00, agg_mu=7.83, agg_sigma=1.67, prot=6.78, auth=88\nClass , sold=0, n=3, mu=0.00, agg_fare=217.51, rev_low=150.00, agg_mu=32.40, agg_sigma=9.93, prot=27.49, auth=83\nClass , sold=0, n=4, mu=0.00, agg_fare=204.87, rev_low=125.00, agg_mu=39.86, agg_sigma=10.09, prot=37.04, auth=62\nClass , sold=0, n=5, mu=0.00, agg_fare=196.16, rev_low=100.00, agg_mu=44.75, agg_sigma=10.18, prot=44.50, auth=52\n***** ProBP, after EMSRb *****\nFlight = 201, BOS-ORD, cap = 100, sold = 10, bid_price = 0.00\n    Org-Dst  Cls   Price    Dmd    Contrib   Bkt  Prot  Alloc\n    BOS-LAX   Y3  325.00    2.35    325.00     0      2     90\n    BOS-LAX   Y4  250.00    5.48    250.00     1      7     88\n    BOS-LAX   Y5  200.00   24.58    200.00     2     27     83\n    BOS-ORD   Y3  150.00    7.46    150.00     3     37     62\n    BOS-ORD   Y4  125.00    4.88    125.00     4     44     52\n    BOS-ORD   Y5  100.00   16.45    100.00     5      0     46\n    EMSRc, flt=201, \u03bc=44.75, \u03c3=10.18, z=4.44, agg_fare=196.16, cap=100, prob=0.00, emsr_c=0.00\nLeg1: AL2 201: BOS-ORD, bp=0.00, contrib=325.00, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=0.00, contrib=250.00, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=0.00, contrib=200.00, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=0.00, contrib=325.00, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=0.00, contrib=250.00, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=0.00, contrib=200.00, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.00, contrib=325.00, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.00, contrib=250.00, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.00, contrib=200.00, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=0.54, contrib=324.46, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=0.54, contrib=249.46, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=0.54, contrib=199.46, to path=BOS-LAX\n***** ProBP, after displacement adjustment *****\nFlight = 201, BOS-ORD, cap = 100, sold = 10, bid_price = 0.00\n    Org-Dst  Cls   Price    Dmd    Contrib   Bkt  Prot  Alloc\n    BOS-LAX   Y3  325.00    2.35    325.00     0      2     90\n    BOS-LAX   Y4  250.00    5.48    250.00     1      7     88\n    BOS-LAX   Y5  200.00   24.58    200.00     2     27     83\n    BOS-ORD   Y3  150.00    7.46    150.00     3     37     62\n    BOS-ORD   Y4  125.00    4.88    125.00     4     44     52\n    BOS-ORD   Y5  100.00   16.45    100.00     5      0     46\n******************** CoreProBP iteration 2 *******************\nClass , sold=0, n=1, mu=0.00, agg_fare=325.00, rev_low=250.00, agg_mu=2.35, agg_sigma=0.83, prot=1.74, auth=90\nClass , sold=0, n=2, mu=0.00, agg_fare=272.50, rev_low=200.00, agg_mu=7.83, agg_sigma=1.67, prot=6.78, auth=88\nClass , sold=0, n=3, mu=0.00, agg_fare=217.51, rev_low=150.00, agg_mu=32.40, agg_sigma=9.93, prot=27.49, auth=83\nClass , sold=0, n=4, mu=0.00, agg_fare=204.87, rev_low=125.00, agg_mu=39.86, agg_sigma=10.09, prot=37.04, auth=62\nClass , sold=0, n=5, mu=0.00, agg_fare=196.16, rev_low=100.00, agg_mu=44.75, agg_sigma=10.18, prot=44.50, auth=52\n***** ProBP, after EMSRb *****\nFlight = 201, BOS-ORD, cap = 100, sold = 10, bid_price = 0.00\n    Org-Dst  Cls   Price    Dmd    Contrib   Bkt  Prot  Alloc\n    BOS-LAX   Y3  325.00    2.35    325.00     0      2     90\n    BOS-LAX   Y4  250.00    5.48    250.00     1      7     88\n    BOS-LAX   Y5  200.00   24.58    200.00     2     27     83\n    BOS-ORD   Y3  150.00    7.46    150.00     3     37     62\n    BOS-ORD   Y4  125.00    4.88    125.00     4     44     52\n    BOS-ORD   Y5  100.00   16.45    100.00     5      0     46\n    EMSRc, flt=201, \u03bc=44.75, \u03c3=10.18, z=4.44, agg_fare=196.16, cap=100, prob=0.00, emsr_c=0.00\nLeg1: AL2 201: BOS-ORD, bp=0.00, contrib=325.00, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=0.00, contrib=250.00, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=0.00, contrib=200.00, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=0.00, contrib=325.00, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=0.00, contrib=250.00, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=0.00, contrib=200.00, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.00, contrib=325.00, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.00, contrib=250.00, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.00, contrib=200.00, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=0.54, contrib=324.46, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=0.54, contrib=249.46, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=0.54, contrib=199.46, to path=BOS-LAX\n***** ProBP, after displacement adjustment *****\nFlight = 201, BOS-ORD, cap = 100, sold = 10, bid_price = 0.00\n    Org-Dst  Cls   Price    Dmd    Contrib   Bkt  Prot  Alloc\n    BOS-LAX   Y3  325.00    2.35    325.00     0      2     90\n    BOS-LAX   Y4  250.00    5.48    250.00     1      7     88\n    BOS-LAX   Y5  200.00   24.58    200.00     2     27     83\n    BOS-ORD   Y3  150.00    7.46    150.00     3     37     62\n    BOS-ORD   Y4  125.00    4.88    125.00     4     44     52\n    BOS-ORD   Y5  100.00   16.45    100.00     5      0     46\nProBP converged in 2 iterations\nLeg: AL1:101 BOS-ORD, cap: 100, sold: 56, bp: 0.00\n Class  Sold  ActRev    Fcst  StdDev FcstRev  Prot  Auth\n    Y0     0    0.00    0.00    0.00  400.00     0    44\n    Y1     0    0.00    9.25    3.09  300.00     8    44\n    Y2     1  450.00   12.15    3.22  200.00    20    36\n    Y3    33  314.39    0.00    0.00  150.00    21    23\n    Y4    14  187.50    0.00    0.00  125.00    22    22\n    Y5     8  100.00    0.00    0.00  100.00     0    22\n***** Class History, total demand = 0.45\n   DCP Inc_DMD |  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep\n     0    0.00 |    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0 \n     1    0.00 |    0    0    0    0    0    0    1    0    0    0    0    0    0    0    0    0    0    1    0    0    0    1    0    1    1    0 \n     2    0.00 |    0    0    1    0    0    0    1    0    0    1    0    1-   0    0    0    0    0    1    0    0-   0    1    0-   2    2    0 \n     3    0.00 |    0    0    1    0    0    0-   1    0-   0-   1-   0-   1-   0    0-   0    0    0    1-   0-   0-   0    3    0-   2-   2-   0 \n     4    0.45 |    0    0-   1-   0    0-   0-   1-   0-   0-   1-   0-   1-   0    0-   0    0-   0-   1-   0-   0-   0-   3-   0-   2-   2-   0 \n     5    0.00 |    0-   0-   1-   1    0-   0-   1-   0-   0-   1-   0-   1-   0-   0-   0-   0-   0-   1-   0-   0-   0-   3-   0-   2-   2-   0 \n     6    0.00 |    0-   0-   1-   1-   0-   0-   1-   0-   0-   1-   0-   1-   0-   0-   0-   0-   0-   1-   0-   0-   0-   3-   0-   2-   2-   0 \n     7    0.00 |    0-   0-   1-   1-   0-   0-   1-   0-   0-   1-   0-   1-   0-   0-   0-   0-   0-   1-   0-   0-   0-   3-   0-   2-   2-   0-\n     8    0.00 |    0-   0-   1-   1-   0-   0-   1-   0-   0-   1-   0-   1-   0-   0-   0-   0-   0-   1-   0-   0-   0-   3-   0-   2-   2-   0-\n     9    0.00 |    0-   0-   1-   1-   0-   0-   1-   0-   0-   1-   0-   1-   0-   0-   0-   0-   0-   1-   0-   0-   0-   3-   0-   2-   2-   0-\n    10    0.00 |    0-   0-   1-   1-   0-   0-   1-   0-   0-   1-   0-   1-   0-   0-   0-   0-   0-   1-   0-   0-   0-   3-   0-   2-   2-   0-\n    11    0.00 |    0-   0-   1-   1-   0-   0-   1-   0-   0-   1-   0-   1-   0-   0-   0-   0-   0-   1-   0-   0-   0-   3-   0-   2-   2-   0-\n    12    0.00 |    0-   0-   1-   1-   0-   0-   1-   0-   0-   1-   0-   1-   0-   0-   0-   0-   0-   1-   0-   0-   0-   3-   0-   2-   2-   0-\n    13    0.00 |    0-   0-   1-   1-   0-   0-   1-   0-   0-   1-   0-   1-   0-   0-   0-   0-   0-   1-   0-   0-   0-   3-   0-   2-   2-   0-\n    14    0.00 |    0-   0-   1-   1-   0-   0-   1-   0-   0-   1-   0-   1-   0-   0-   0-   0-   0-   1-   0-   0-   0-   3-   0-   2-   2-   0-\n    15    0.00 |    0-   0-   1-   1-   0-   0-   1-   0-   0-   1-   0-   1-   0-   0-   0-   0-   0-   1-   0-   0-   0-   3-   0-   2-   2-   0-\n    16    0.00 |    0-   0-   1-   1-   0-   0-   1-   0-   0-   1-   0-   1-   0-   0-   0-   0-   0-   1-   0-   0-   0-   3-   0-   2-   2-   0-\n***** Class History, total demand = 23.72\n   DCP Inc_DMD |  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep\n     0    6.00 |    0    0    0    0    0    0    0    1    0    0    1    0    0    0    0    0    0    0    0    0    0    0    0    0    1    0 \n     1    2.00 |    6    3    2    3    8    7    3   11    6    3    7    6    5    5    7    8    2   12    7   13    6    3    8    8    3    3 \n     2    6.00 |    8    3    4    4    9   14    4   15   11    3    9    9    7    8    9   11    3   18   11   22    8    4   13-  11    6    5 \n     3    5.00 |   14    5    5    8   14   17-   4   19   16    4   13-  11-  11   12-  13   16    6   24-  15-  25-  13    5   13-  14    7   11 \n     4    1.00 |   19    8-   5   10   17-  17-   6-  19-  18-   8   13-  11-  17   12-  17   18-   8   24-  15-  25-  18    7   13-  16-  12   13 \n     5    0.00 |   20    8-   8   11   17-  17-   6-  19-  18-   8   13-  11-  19-  12-  18   18-   9   24-  15-  25-  20-   8   13-  16-  12   16 \n     6    0.00 |   20    8-  10   11   17-  17-   6-  19-  18-   8   13-  11-  19-  12-  19   18-   9   24-  15-  25-  20-   8   13-  16-  13   17 \n     7    3.72 |   20    8-  10   12   17-  17-   6-  19-  18-  10   13-  11-  19-  12-  21-  18-  10   24-  15-  25-  20-   9   13-  16-  15   19 \n     8    0.00 |   23-   8-  11   12   17-  17-   6-  19-  18-  12   13-  11-  19-  12-  21-  18-  11-  24-  15-  25-  20-  10   13-  16-  17   21 \n     9    0.00 |   23-   8-  11   12   17-  17-   6-  19-  18-  12   13-  11-  19-  12-  21-  18-  11-  24-  15-  25-  20-  10   13-  16-  17   21 \n    10    0.00 |   23-   8-  11   12   17-  17-   6-  19-  18-  12   13-  11-  19-  12-  21-  18-  11-  24-  15-  25-  20-  10   13-  16-  17   21 \n    11    0.00 |   23-   8-  11   12   17-  17-   6-  19-  18-  12   13-  11-  19-  12-  21-  18-  11-  24-  15-  25-  20-  10   13-  16-  17   21 \n    12    0.00 |   23-   8-  11   12   17-  17-   6-  19-  18-  12   13-  11-  19-  12-  21-  18-  11-  24-  15-  25-  20-  10   13-  16-  17   21 \n    13    0.00 |   23-   8-  11   12   17-  17-   6-  19-  18-  12   13-  11-  19-  12-  21-  18-  11-  24-  15-  25-  20-  10   13-  16-  17   21 \n    14    0.00 |   23-   8-  11   12   17-  17-   6-  19-  18-  12   13-  11-  19-  12-  21-  18-  11-  24-  15-  25-  20-  10   13-  16-  17   21 \n    15    0.00 |   23-   8-  11   12   17-  17-   6-  19-  18-  12   13-  11-  19-  12-  21-  18-  11-  24-  15-  25-  20-  10   13-  16-  17   21 \n    16    0.00 |   23-   8-  11   12   17-  17-   6-  19-  18-  12   13-  11-  19-  12-  21-  18-  11-  24-  15-  25-  20-  10   13-  16-  17   21 \nTesting the snapshot filters again:  sample=20  dcp=56\nTesting the snapshot filters:  sample=20  dcp=7  orig=BOS  dest=ORD  flt_no=101\nCoreProBP initialize *******************\nLeg1: AL2 201: BOS-ORD, bp=3.68, contrib=321.32, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=3.68, contrib=246.32, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=3.68, contrib=196.32, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=0.61, contrib=324.39, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=0.61, contrib=249.39, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=0.61, contrib=199.39, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.60, contrib=324.40, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.60, contrib=249.40, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.60, contrib=199.40, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=0.64, contrib=324.36, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=0.64, contrib=249.36, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=0.64, contrib=199.36, to path=BOS-LAX\n******************** CoreProBP iteration 0 *******************\nClass , sold=0, n=1, mu=0.00, agg_fare=321.32, rev_low=246.32, agg_mu=1.74, agg_sigma=1.08, prot=0.95, auth=82\nClass , sold=0, n=2, mu=0.00, agg_fare=260.60, rev_low=196.32, agg_mu=9.12, agg_sigma=2.57, prot=7.36, auth=81\nClass , sold=0, n=3, mu=0.00, agg_fare=211.81, rev_low=150.00, agg_mu=37.85, agg_sigma=10.41, prot=32.14, auth=74\nClass , sold=0, n=4, mu=0.00, agg_fare=205.59, rev_low=125.00, agg_mu=42.09, agg_sigma=10.52, prot=39.20, auth=49\nClass , sold=0, n=5, mu=0.00, agg_fare=198.49, rev_low=100.00, agg_mu=46.15, agg_sigma=10.58, prot=46.05, auth=42\n***** ProBP, after EMSRb *****\nFlight = 201, BOS-ORD, cap = 100, sold = 18, bid_price = 0.60\n    Org-Dst  Cls   Price    Dmd    Contrib   Bkt  Prot  Alloc\n    BOS-LAX   Y3  325.00    1.74    321.32     0      1     82\n    BOS-LAX   Y4  250.00    7.39    246.32     1      7     81\n    BOS-LAX   Y5  200.00   28.73    196.32     2     32     74\n    BOS-ORD   Y3  150.00    4.24    150.00     3     39     49\n    BOS-ORD   Y4  125.00    4.07    125.00     4     46     42\n    BOS-ORD   Y5  100.00   18.78    100.00     5      0     36\n    EMSRc, flt=201, \u03bc=46.15, \u03c3=10.58, z=3.39, agg_fare=198Testing the snapshot filters again:  sample=30  dcp=56\nTesting the snapshot filters:  sample=30  dcp=7  orig=BOS  dest=ORD  flt_no=101\n.49, cap=100, prob=0.00, emsr_c=0.07\nLeg1: AL2 201: BOS-ORD, bp=13.79, contrib=311.21, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=13.79, contrib=236.21, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=13.79, contrib=186.21, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=8.46, contrib=316.54, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=8.46, contrib=241.54, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=8.46, contrib=191.54, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.07, contrib=324.93, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.07, contrib=249.93, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.07, contrib=199.93, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=3.69, contrib=321.31, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=3.69, contrib=246.31, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=3.69, contrib=196.31, to path=BOS-LAX\n***** ProBP, after displacement adjustment *****\nFlight = 201, BOS-ORD, cap = 100, sold = 18, bid_price = 0.07\n    Org-Dst  Cls   Price    Dmd    Contrib   Bkt  Prot  Alloc\n    BOS-LAX   Y3  325.00    1.74    311.21     0      1     82\n    BOS-LAX   Y4  250.00    7.39    236.21     1      7     81\n    BOS-LAX   Y5  200.00   28.73    186.21     2     32     74\n    BOS-ORD   Y3  150.00    4.24    150.00     3     39     49\n    BOS-ORD   Y4  125.00    4.07    125.00     4     46     42\n    BOS-ORD   Y5  100.00   18.78    100.00     5      0     36\n******************** CoreProBP iteration 1 *******************\nClass , sold=0, n=1, mu=0.00, agg_fare=311.21, rev_low=236.21, agg_mu=1.74, agg_sigma=1.08, prot=0.98, auth=82\nClass , sold=0, n=2, mu=0.00, agg_fare=250.49, rev_low=186.21, agg_mu=9.12, agg_sigma=2.57, prot=7.44, auth=81\nClass , sold=0, n=3, mu=0.00, agg_fare=201.70, rev_low=150.00, agg_mu=37.85, agg_sigma=10.41, prot=31.03, auth=74\nClass , sold=0, n=4, mu=0.00, agg_fare=196.50, rev_low=125.00, agg_mu=42.09, agg_sigma=10.52, prot=38.42, auth=50\nClass , sold=0, n=5, mu=0.00, agg_fare=190.19, rev_low=100.00, agg_mu=46.15, agg_sigma=10.58, prot=45.47, auth=43\n***** ProBP, after EMSRb *****\nFlight = 201, BOS-ORD, cap = 100, sold = 18, bid_price = 0.07\n    Org-Dst  Cls   Price    Dmd    Contrib   Bkt  Prot  Alloc\n    BOS-LAX   Y3  325.00    1.74    311.21     0      1     82\n    BOS-LAX   Y4  250.00    7.39    236.21     1      7     81\n    BOS-LAX   Y5  200.00   28.73    186.21     2     31     74\n    BOS-ORD   Y3  150.00    4.24    150.00     3     38     50\n    BOS-ORD   Y4  125.00    4.07    125.00     4     45     43\n    BOS-ORD   Y5  100.00   18.78    100.00     5      0     37\n    EMSRc, flt=201, \u03bc=46.15, \u03c3=10.58, z=3.39, agg_fare=190.19, cap=100, prob=0.00, emsr_c=0.07\nLeg1: AL2 201: BOS-ORD, bp=13.81, contrib=311.19, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=13.81, contrib=236.19, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=13.81, contrib=186.19, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=8.38, contrib=316.62, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=8.38, contrib=241.62, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=8.38, contrib=191.62, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.07, contrib=324.93, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.07, contrib=249.93, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.07, contrib=199.93, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=3.58, contrib=321.42, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=3.58, contrib=246.42, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=3.58, contrib=196.42, to path=BOS-LAX\n***** ProBP, after displacement adjustment *****\nFlight = 201, BOS-ORD, cap = 100, sold = 18, bid_price = 0.07\n    Org-Dst  Cls   Price    Dmd    Contrib   Bkt  Prot  Alloc\n    BOS-LAX   Y3  325.00    1.74    311.19     0      1     82\n    BOS-LAX   Y4  250.00    7.39    236.19     1      7     81\n    BOS-LAX   Y5  200.00   28.73    186.19     2     31     74\n    BOS-ORD   Y3  150.00    4.24    150.00     3     38     50\n    BOS-ORD   Y4  125.00    4.07    125.00     4     45     43\n    BOS-ORD   Y5  100.00   18.78    100.00     5      0     37\n******************** CoreProBP iteratiSnapshot of path untruncation:  sample=35  dcp=0  orig=BOS  dest=LAX  flt_no=202\nSnapshot of path untruncation:  sample=35  dcp=0  orig=BOS  dest=ORD  flt_no=202\non 2 *******************\nClass , sold=0, n=1, mu=0.00, agg_fare=311.19, rev_low=236.19, agg_mu=1.74, agg_sigma=1.08, prot=0.98, auth=82\nClass , sold=0, n=2, mu=0.00, agg_fare=250.47, rev_low=186.19, agg_mu=9.12, agg_sigma=2.57, prot=7.44, auth=81\nClass , sold=0, n=3, mu=0.00, agg_fare=201.68, rev_low=150.00, agg_mu=37.85, agg_sigma=10.41, prot=31.03, auth=74\nClass , sold=0, n=4, mu=0.00, agg_fare=196.48, rev_low=125.00, agg_mu=42.09, agg_sigma=10.52, prot=38.42, auth=50\nClass , sold=0, n=5, mu=0.00, agg_fare=190.18, rev_low=100.00, agg_mu=46.15, agg_sigma=10.58, prot=45.47, auth=43\n***** ProBP, after EMSRb *****\nFlight = 201, BOS-ORD, cap = 100, sold = 18, bid_price = 0.07\n    Org-Dst  Cls   Price    Dmd    Contrib   Bkt  Prot  Alloc\n    BOS-LAX   Y3  325.00    1.74    311.19     0      1     82\n    BOS-LAX   Y4  250.00    7.39    236.19     1      7     81\n    BOS-LAX   Y5  200.00   28.73    186.19     2     31     74\n    BOS-ORD   Y3  150.00    4.24    150.00     3     38     50\n    BOS-ORD   Y4  125.00    4.07    125.00     4     45     43\n    BOS-ORD   Y5  100.00   18.78    100.00     5      0     37\n    EMSRc, flt=201, \u03bc=46.15, \u03c3=10.58, z=3.39, agg_fare=190.18, cap=100, prob=0.00, emsr_c=0.07\nLeg1: AL2 201: BOS-ORD, bp=13.81, contrib=311.19, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=13.81, contrib=236.19, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=13.81, contrib=186.19, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=8.39, contrib=316.61, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=8.39, contrib=241.61, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=8.39, contrib=191.61, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.07, contrib=324.93, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.07, contrib=249.93, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.07, contrib=199.93, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=3.58, contrib=321.42, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=3.58, contrib=246.42, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=3.58, contrib=196.42, to path=BOS-LAX\n***** ProBP, after displacement adjustment *****\nFlight = 201, BOS-ORD, cap = 100, sold = 18, bid_price = 0.07\n    Org-Dst  Cls   Price    Dmd    Contrib   Bkt  Prot  Alloc\n    BOS-LAX   Y3  325.00    1.74    311.19     0      1     82\n    BOS-LAX   Y4  250.00    7.39    236.19     1      7     81\n    BOS-LAX   Y5  200.00   28.73    186.19     2     31     74\n    BOS-ORD   Y3  150.00    4.24    150.00     3     38     50\n    BOS-ORD   Y4  125.00    4.07    125.00     4     45     43\n    BOS-ORD   Y5  100.00   18.78    100.00     5      0     37\nProBP converged in 2 iterations\nLeg: AL1:101 BOS-ORD, cap: 100, sold: 83, bp: 0.00\n Class  Sold  ActRev    Fcst  StdDev FcstRev  Prot  Auth\n    Y0     0    0.00    0.00    0.00  400.00     0    17\n    Y1     5  625.00    7.61    3.62  300.00     6    17\n    Y2    16  403.12    8.09    3.24  200.00    14    10\n    Y3    45  239.44    0.00    0.00  150.00    16     2\n    Y4     9  180.56    0.00    0.00  125.00    17     1\n    Y5     8  100.00    0.00    0.00  100.00     0     0\nCoreProBP initialize *******************\nLeg1: AL2 201: BOS-ORD, bp=2.15, contrib=322.85, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=2.15, contrib=247.85, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=2.15, contrib=197.85, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=0.49, contrib=324.51, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=0.49, contrib=249.51, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=0.49, contrib=199.51, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.53, contrib=324.47, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.53, contrib=249.47, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.53, contrib=199.47, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=0.55, contrib=324.45, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=0.55, contrib=249.45, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=0.55, contrib=199.45, to path=BOS-LAX\n******************** CoreProBP iteration 0 *******************\nClass , sold=0, n=1, mu=0.00, agg_fare=322.85, rev_low=247.85, agg_mu=1.70, agg_sigma=1.03, prot=0.95, auth=74\nClass , sold=0, n=2, mu=0.00, agg_fare=263.62, rev_low=197.85, agg_mu=8.09, agg_sigma=2.17, prot=6.62, auth=73\nClass , sold=0, n=3, mu=0.00, agg_fare=213.16, rev_low=150.00, agg_mu=34.75, agg_sigma=10.81, prot=28.97, auth=67\nClass , sold=0, n=4, mu=0.00, agg_fare=204.74, rev_low=125.00, agg_mu=40.10, agg_sigma=10.94, prot=37.02, auth=45\nClass , sold=0, n=5, mu=0.00, agg_fare=196.36, rev_low=100.00, agg_mu=44.80, agg_sigma=11.02, prot=44.55, auth=36\n***** ProBP, after EMSRb *****\nFlight = 201, BOS-ORD, cap = 100, sold = 26, bid_price = 0.53\n    Org-Dst  Cls   Price    Dmd    Contrib   Bkt  Prot  Alloc\n    BOS-LAX   Y3  325.00    1.70    322.85     0      1     74\n    BOS-LAX   Y4  250.00    6.39    247.85     1      7     73\n    BOS-LAX   Y5  200.00   26.66    197.85     2     29     67\n    BOS-ORD   Y3  150.00    5.35    150.00     3     37     45\n    BOS-ORD   Y4  125.00    4.71    125.00     4     45     36\n    BOS-ORD   Y5  100.00   16.15    100.00     5      0     29\n    EMSRc, flt=201, \u03bc=44.80, \u03c3=11.02, z=2.65, agg_fare=196.36, cap=100, prob=0.00, emsr_c=0.79\nLeg1: AL2 201: BOS-ORD, bp=3.04, contrib=321.96, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=3.04, contrib=246.96, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=3.04, contrib=196.96, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=0.06, contrib=324.94, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=0.06, contrib=249.94, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=0.06, contrib=199.94, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.79, contrib=324.21, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.79, contrib=249.21, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.79, contrib=199.21, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=0.04, contrib=324.96, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=0.04, contrib=249.96, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=0.04, contrib=199.96, to path=BOS-LAX\n***** ProBP, after displacement adjustment *****\nFlight = 201, BOS-ORD, cap = 100, sold = 26, bid_price = 0.79\n    Org-Dst  Cls   Price    Dmd    Contrib   Bkt  Prot  Alloc\n    BOS-LAX   Y3  325.00    1.70    321.96     0      1     74\n    BOS-LAX   Y4  250.00    6.39    246.96     1      7     73\n    BOS-LAX   Y5  200.00   26.66    196.96     2     29     67\n    BOS-ORD   Y3  150.00    5.35    150.00     3     37     45\n    BOS-ORD   Y4  125.00    4.71    125.00     4     45     36\n    BOS-ORD   Y5  100.00   16.15    100.00     5      0     29\n******************** CoreProBP iteration 1 *******************\nClass , sold=0, n=1, mu=0.00, agg_fare=321.96, rev_low=246.96, agg_mu=1.70, agg_sigma=1.03, prot=0.95, auth=74\nClass , sold=0, n=2, mu=0.00, agg_fare=262.73, rev_low=196.96, agg_mu=8.09, agg_sigma=2.17, prot=6.63, auth=73\nClass , sold=0, n=3, mu=0.00, agg_fare=212.27, rev_low=150.00, agg_mu=34.75, agg_sigma=10.81, prot=28.87, auth=67\nClass , sold=0, n=4, mu=0.00, agg_fare=203.97, rev_low=125.00, agg_mu=40.10, agg_sigma=10.94, prot=36.96, auth=45\nClass , sold=0, n=5, mu=0.00, agg_fare=195.67, rev_low=100.00, agg_mu=44.80, agg_sigma=11.02, prot=44.50, auth=37\n***** ProBP, after EMSRb *****\nFlight = 201, BOS-ORD, cap = 100, sold = 26, bid_price = 0.79\n    Org-Dst  Cls   Price    Dmd    Contrib   Bkt  Prot  Alloc\n    BOS-LAX   Y3  325.00    1.70    321.96     0      1     74\n    BOS-LAX   Y4  250.00    6.39    246.96     1      7     73\n    BOS-LAX   Y5  200.00   26.66    196.96     2     29     67\n    BOS-ORD   Y3  150.00    5.35    150.00     3     37     45\n    BOS-ORD   Y4  125.00    4.71    125.00     4     44     37\n    BOS-ORD   Y5  100.00   16.15    100.00     5      0     30\n    EMSRc, flt=201, \u03bc=44.80, \u03c3=11.02, z=2.65, agg_fare=195.67, cap=100, prob=0.00, emsr_c=0.79\nLeg1: AL2 201: BOS-ORD, bp=3.04, contrib=321.96, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=3.04, contrib=246.96, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=3.04, contrib=196.96, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=0.06, contrib=324.94, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=0.06, contrib=249.94, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=0.06, contrib=199.94, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.79, contrib=324.21, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.79, contrib=249.21, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.79, contrib=199.21, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=0.04, contrib=324.96, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=0.04, contrib=249.96, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=0.04, contrib=199.96, to path=BOS-LAX\n***** ProBP, after displacement adjustment *****\nFlight = 201, BOS-ORD, cap = 100, sold = 26, bid_price = 0.79\n    Org-Dst  Cls   Price    Dmd    Contrib   Bkt  Prot  Alloc\n    BOS-LAX   Y3  325.00    1.70    321.96     0      1     74\n    BOS-LAX   Y4  250.00    6.39    246.96     1      7     73\n    BOS-LAX   Y5  200.00   26.66    196.96     2     29     67\n    BOS-ORD   Y3  150.00    5.35    150.00     3     37     45\n    BOS-ORD   Y4  125.00    4.71    125.00     4     44     37\n    BOS-ORD   Y5  100.00   16.15    100.00     5      0     30\n******************** CoreProBP iteration 2 *******************\nClass , sold=0, n=1, mu=0.00, agg_fare=321.96, rev_low=246.96, agg_mu=1.70, agg_sigma=1.03, prot=0.95, auth=74\nClass , sold=0, n=2, mu=0.00, agg_fare=262.74, rev_low=196.96, agg_mu=8.09, agg_sigma=2.17, prot=6.63, auth=73\nClass , sold=0, n=3, mu=0.00, agg_fare=212.27, rev_low=150.00, agg_mu=34.75, agg_sigma=10.81, prot=28.88, auth=67\nClass , sold=0, n=4, mu=0.00, agg_fare=203.97, rev_low=125.00, agg_mu=40.10, agg_sigma=10.94, prot=36.96, auth=45\nClass , sold=0, n=5, mu=0.00, agg_fare=195.67, rev_low=100.00, agg_mu=44.80, agg_sigma=11.02, prot=44.50, auth=37\n***** ProBP, after EMSRb *****\nFlight = 201, BOS-ORD, cap = 100, sold = 26, bid_price = 0.79\n    Org-Dst  Cls   Price    Dmd    Contrib   Bkt  Prot  Alloc\n    BOS-LAX   Y3  325.00    1.70    321.96     0      1     74\n    BOS-LAX   Y4  250.00    6.39    246.96     1      7     73\n    BOS-LAX   Y5  200.00   26.66    196.96     2     29     67\n    BOS-ORD   Y3  150.00    5.35    150.00     3     37     45\n    BOS-ORD   Y4  125.00    4.71    125.00     4     44     37\n    BOS-ORD   Y5  100.00   16.15    100.00     5      0     30\n    EMSRc, flt=201, \u03bc=44.80, \u03c3=11.02, z=2.65, agg_fare=195.67, cap=100, prob=0.00, emsr_c=0.79\nLeg1: AL2 201: BOS-ORD, bp=3.04, contrib=321.96, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=3.04, contrib=246.96, to path=BOS-LAX\nLeg1: AL2 201: BOS-ORD, bp=3.04, contrib=196.96, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=0.06, contrib=324.94, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=0.06, contrib=249.94, to path=BOS-LAX\nLeg1: AL2 202: BOS-ORD, bp=0.06, contrib=199.94, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.79, contrib=324.21, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.79, contrib=249.21, to path=BOS-LAX\nLeg2: AL2 211: ORD-LAX, bp=0.79, contrib=199.21, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=0.04, contrib=324.96, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=0.04, contrib=249.96, to path=BOS-LAX\nLeg2: AL2 212: ORD-LAX, bp=0.04, contrib=199.96, to path=BOS-LAX\n***** ProBP, after displacement adjustment *****\nFlight = 201, BOS-ORD, cap = 100, sold = 26, bid_price = 0.79\n    Org-Dst  Cls   Price    Dmd    Contrib   Bkt  Prot  Alloc\n    BOS-LAX   Y3  325.00    1.70    321.96     0      1     74\n    BOS-LAX   Y4  250.00    6.39    246.96     1      7     73\n    BOS-LAX   Y5  200.00   26.66    196.96     2     29     67\n    BOS-ORD   Y3  150.00    5.35    150.00     3     37     45\n    BOS-ORD   Y4  125.00    4.71    125.00     4     44     37\n    BOS-ORD   Y5  100.00   16.15    100.00     5      0     30\nProBP converged in 2 iterations\nLeg: AL1:101 BOS-ORD, cap: 100, sold: 88, bp: 0.00\n Class  Sold  ActRev    Fcst  StdDev FcstRev  Prot  Auth\n    Y0     0    0.00    0.00    0.00  400.00     0    12\n    Y1     4  543.75    8.55    3.34  300.00     7    12\n    Y2    13  315.38    6.52    3.06  200.00    14     4\n    Y3    35  255.00    0.00    0.00  150.00    15     0\n    Y4    19  197.37    0.00    0.00  125.00    16     0\n    Y5    17  100.00    0.00    0.00  100.00     0     0\n***** Class History, total demand = 1.67\n   DCP Inc_DMD |  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep\n     0    0.00 |    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0 \n     1    0.00 |    0    0    1    0    0    0    0    0    1    0    1    0    0    0    0    0    0    1    1    0    0    0    0    0    0    0 \n     2    0.35 |    0    0    1    0    1    1    0    0    1    0    1    0    0    0    0    2    0    1    1    0    0    1    1    0    0-   0 \n     3    0.69 |    0-   0-   1-   1    1    1-   0-   0    1    0    1-   0    0-   0-   0-   2-   0-   1-   1    0    0-   1    2    0-   0-   0 \n     4    0.00 |    0-   0-   1-   1-   2-   1-   0-   0-   1-   0    1-   0-   0-   0-   0-   2-   0-   1-   1-   0-   0-   1-   2-   0-   0-   1 \n     5    0.00 |    0-   0-   1-   1-   2-   1-   0-   0-   1-   0    1-   0-   0-   0-   0-   2-   0-   1-   1-   0-   0-   1-   2-   0-   0-   1 \n     6    0.63 |    0-   0-   1-   1-   2-   1-   0-   0-   1-   0    1-   0-   0-   0-   0-   2-   0-   1-   1-   0-   0-   1-   2-   0-   0-   1 \n     7    0.00 |    0-   0-   1-   1-   2-   1-   0-   0-   1-   0-   1-   0-   0-   0-   0-   2-   0-   1-   1-   0-   0-   1-   2-   0-   0-   2 \n     8    0.00 |    0-   0-   1-   1-   2-   1-   0-   0-   1-   0-   1-   0-   0-   0-   0-   2-   0-   1-   1-   0-   0-   1-   2-   0-   0-   2-\n     9    0.00 |    0-   0-   1-   1-   2-   1-   0-   0-   1-   0-   1-   0-   0-   0-   0-   2-   0-   1-   1-   0-   0-   1-   2-   0-   0-   2-\n    10    0.00 |    0-   0-   1-   1-   2-   1-   0-   0-   1-   0-   1-   0-   0-   0-   0-   2-   0-   1-   1-   0-   0-   1-   2-   0-   0-   2-\n    11    0.00 |    0-   0-   1-   1-   2-   1-   0-   0-   1-   0-   1-   0-   0-   0-   0-   2-   0-   1-   1-   0-   0-   1-   2-   0-   0-   2-\n    12    0.00 |    0-   0-   1-   1-   2-   1-   0-   0-   1-   0-   1-   0-   0-   0-   0-   2-   0-   1-   1-   0-   0-   1-   2-   0-   0-   2-\n    13    0.00 |    0-   0-   1-   1-   2-   1-   0-   0-   1-   0-   1-   0-   0-   0-   0-   2-   0-   1-   1-   0-   0-   1-   2-   0-   0-   2-\n    14    0.00 |    0-   0-   1-   1-   2-   1-   0-   0-   1-   0-   1-   0-   0-   0-   0-   2-   0-   1-   1-   0-   0-   1-   2-   0-   0-   2-\n    15    0.00 |    0-   0-   1-   1-   2-   1-   0-   0-   1-   0-   1-   0-   0-   0-   0-   2-   0-   1-   1-   0-   0-   1-   2-   0-   0-   2-\n    16    0.00 |    0-   0-   1-   1-   2-   1-   0-   0-   1-   0-   1-   0-   0-   0-   0-   2-   0-   1-   1-   0-   0-   1-   2-   0-   0-   2-\n***** Class History, total demand = 20.97\n   DCP Inc_DMD |  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep  Dep\n     0    5.00 |    0    2    0    0    0    0    0    0    0    0    0    1    0    0    0    0    0    0    0    0    0    0    0    1    0    0 \n     1    3.00 |    5    4    2    5    4    7    6    9    4    3    6    3    5    6    4    5    8    9    5    7   12    6    3    9    6    2 \n     2    2.00 |    8    7    3    9    4   11    8   11    7    3    7    5   11    7    8   10   10   14    6   12   16    9    7   11   13    5 \n     3    3.00 |   10    9-   3   14    7   11   11   13    8    5    9    7   13   11    8   14-  16-  26   10   17   19-  16    7   12-  15-   7 \n     4    2.00 |   13    9-   4   15-  13-  12   13   14   11    7   10   11   15-  13-   9   14-  16-  29-  11   21-  19-  22   11   12-  15-   8 \n     5    1.44 |   15    9-   6-  15-  13-  13   15-  18-  12    9   12   12-  15-  13-  10   14-  16-  29-  12-  21-  19-  23-  13-  12-  15-   8 \n     6    1.97 |   16-   9-   6-  15-  13-  13   15-  18-  15   10   13   12-  15-  13-  11   14-  16-  29-  12-  21-  19-  23-  13-  12-  15-   9 \n     7    2.57 |   16-   9-   6-  15-  13-  16-  15-  18-  17-  11-  14   12-  15-  13-  14   14-  16-  29-  12-  21-  19-  23-  13-  12-  15-   9 \n     8    0.00 |   16-   9-   6-  15-  13-  16-  15-  18-  17-  11-  18   12-  15-  13-  15-  14-  16-  29-  12-  21-  19-  23-  13-  12-  15-  11 \n     9    0.00 |   16-   9-   6-  15-  13-  16-  15-  18-  17-  11-  18   12-  15-  13-  15-  14-  16-  29-  12-  21-  19-  23-  13-  12-  15-  11 \n    10    0.00 |   16-   9-   6-  15-  13-  16-  15-  18-  17-  11-  18   12-  15-  13-  15-  14-  16-  29-  12-  21-  19-  23-  13-  12-  15-  11 \n    11    0.00 |   16-   9-   6-  15-  13-  16-  15-  18-  17-  11-  18   12-  15-  13-  15-  14-  16-  29-  12-  21-  19-  23-  13-  12-  15-  11 \n    12    0.00 |   16-   9-   6-  15-  13-  16-  15-  18-  17-  11-  18   12-  15-  13-  15-  14-  16-  29-  12-  21-  19-  23-  13-  12-  15-  11 \n    13    0.00 |   16-   9-   6-  15-  13-  16-  15-  18-  17-  11-  18   12-  15-  13-  15-  14-  16-  29-  12-  21-  19-  23-  13-  12-  15-  11 \n    14    0.00 |   16-   9-   6-  15-  13-  16-  15-  18-  17-  11-  18   12-  15-  13-  15-  14-  16-  29-  12-  21-  19-  23-  13-  12-  15-  11 \n    15    0.00 |   16-   9-   6-  15-  13-  16-  15-  18-  17-  11-  18   12-  15-  13-  15-  14-  16-  29-  12-  21-  19-  23-  13-  12-  15-  11 \n    16    0.00 |   16-   9-   6-  15-  13-  16-  15-  18-  17-  11-  18   12-  15-  13-  15-  14-  16-  29-  12-  21-  19-  23-  13-  12-  15-  11 \n[2023-08-14 20:17:37,692] passengersim.INFO: Th' th' that's all folks !!!    (Elapsed time = 11.91)\n</pre> In\u00a0[7]: Copied! <pre>summary.demands\n</pre> summary.demands Out[7]: orig dest segment sold revenue avg_fare gt_demand gt_sold gt_revenue 0 BOS ORD business 84 13825.0 164.583333 171731 148903 26331425.0 1 BOS ORD leisure 60 6450.0 107.500000 223259 165784 19056125.0 2 ORD LAX business 108 28825.0 266.898148 297776 255259 69402525.0 3 ORD LAX leisure 93 16550.0 177.956989 372712 259786 46841250.0 4 BOS LAX business 100 35500.0 355.000000 249534 194420 75014950.0 5 BOS LAX leisure 65 14850.0 228.461538 349205 212316 52184975.0 In\u00a0[8]: Copied! <pre>summary.legs\n</pre> summary.legs Out[8]: carrier flt_no orig dest avg_sold avg_rev lf 0 AL1 101 BOS ORD 89.0268 25256.230 89.026800 1 AL1 102 BOS ORD 88.9352 25210.200 88.935200 2 AL2 201 BOS ORD 55.3096 5745.855 55.309600 3 AL2 202 BOS ORD 55.2976 5743.725 55.297600 4 AL1 111 ORD LAX 109.2804 16741.230 91.067000 5 AL1 112 ORD LAX 109.2248 16719.870 91.020667 6 AL2 211 ORD LAX 75.1040 10058.095 62.586667 7 AL2 212 ORD LAX 75.1032 10057.295 62.586000 In\u00a0[9]: Copied! <pre>summary.paths\n</pre> summary.paths Out[9]: orig dest carrier1 flt_no1 carrier2 flt_no2 avg_sold avg_rev 0 BOS LAX AL1 101 AL1 111.0 47.0164 18349.23 1 BOS LAX AL1 102 AL1 112.0 47.0592 18372.78 2 BOS LAX AL2 201 AL2 211.0 34.3332 7084.47 3 BOS LAX AL2 202 AL2 212.0 34.2856 7073.49 4 BOS ORD AL1 101 None NaN 42.0104 6907.00 5 BOS ORD AL1 102 None NaN 41.8760 6837.42 6 BOS ORD AL2 201 None NaN 20.9764 2203.62 7 BOS ORD AL2 202 None NaN 21.0120 2206.98 8 ORD LAX AL1 111 None NaN 62.2640 16741.23 9 ORD LAX AL1 112 None NaN 62.1656 16719.87 10 ORD LAX AL2 211 None NaN 40.7708 6515.86 11 ORD LAX AL2 212 None NaN 40.8176 6520.55 In\u00a0[10]: Copied! <pre>summary.airlines\n</pre> summary.airlines Out[10]: name avg_sold load_factor avg_rev asm rpm 0 AL1 302 88.981 83927.53 432000000.0 384397920.0 1 AL2 192 0.000 31604.97 0.0 0.0 In\u00a0[11]: Copied! <pre>summary.airlines.set_index(\"name\")[[\"asm\", \"rpm\"]].plot.bar();\n</pre> summary.airlines.set_index(\"name\")[[\"asm\", \"rpm\"]].plot.bar(); In\u00a0[12]: Copied! <pre>summary.fig_airline_loads()\n</pre> summary.fig_airline_loads() Out[12]:"},{"location":"Tutorials/demo-3mkt-2carrier.nbconvert.html#three-market-two-carrier-test","title":"Three Market Two Carrier Test\u00b6","text":"<p>One carrier uses EMSR, the other ProBP.</p>"},{"location":"Tutorials/demo-3mkt-db.nbconvert.html","title":"Three Market Database Demo","text":"In\u00a0[1]: Copied! <pre>import passengersim as sw\n</pre> import passengersim as sw In\u00a0[2]: Copied! <pre>input_file = sw.demo_network(\"3mkt\")\n</pre> input_file = sw.demo_network(\"3mkt\") <p>In this notebook, we will demonstrate the usage of SQLite database logging.  In order to manipulate the configurations, we'll separate the simulation initialization into two steps: first we load the configs from YAML, then we apply configs to a Simlaution. That way, we can maipulate those configs directly in Python before running the sim.</p> <p>So, first we load the configs.</p> In\u00a0[3]: Copied! <pre>cfg = sw.Config.from_yaml(input_file)\n</pre> cfg = sw.Config.from_yaml(input_file) <p>Then, we can manipulate the configs.  By default we our database engine will store detailed info on multiple simulation attributes at each DCP:</p> In\u00a0[4]: Copied! <pre>cfg.db.write_items\n</pre> cfg.db.write_items Out[4]: <pre>{'bookings', 'demand_final', 'fare_final', 'leg_final'}</pre> <p>Let's remove the \"demand_final\" writer, so we can replace it with a custom tool we provide in Python.</p> In\u00a0[5]: Copied! <pre>cfg.db.write_items.remove(\"demand_final\")\ncfg.db.write_items\n</pre> cfg.db.write_items.remove(\"demand_final\") cfg.db.write_items Out[5]: <pre>{'bookings', 'fare_final', 'leg_final'}</pre> <p>Our custom Python command is <code>save_demand_to_database</code>, in the <code>passengersim.database.write_demands</code> package. We can attach that function to the list of <code>dcp_write_hooks</code>.</p> In\u00a0[6]: Copied! <pre>from passengersim.database.write_demands import save_demand_to_database\n\ncfg.db.dcp_write_hooks.append(save_demand_to_database)\n</pre> from passengersim.database.write_demands import save_demand_to_database  cfg.db.dcp_write_hooks.append(save_demand_to_database) <p>We can also set our SQLite database engine to reside exclusively in memory, like this:</p> In\u00a0[7]: Copied! <pre>cfg.db.filename = \":memory:\"\n</pre> cfg.db.filename = \":memory:\" In\u00a0[8]: Copied! <pre>import os\nif os.path.exists(cfg.db.filename):\n    os.remove(cfg.db.filename)\n</pre> import os if os.path.exists(cfg.db.filename):     os.remove(cfg.db.filename) <p>We use the compiled code for writing SQL with the <code>fast</code> flag:</p> In\u00a0[9]: Copied! <pre>cfg.db.fast = True\n</pre> cfg.db.fast = True <p>Some experimental \"pragma\" commands that may make SQLite go faster...</p> In\u00a0[10]: Copied! <pre>cfg.db.pragmas = [\n    \"journal_mode = MEMORY\",\n    \"synchronous = 0\",\n    \"cache_size = 1000000\",\n    \"locking_mode = EXCLUSIVE\",\n    \"temp_store = MEMORY\",\n]\n</pre> cfg.db.pragmas = [     \"journal_mode = MEMORY\",     \"synchronous = 0\",     \"cache_size = 1000000\",     \"locking_mode = EXCLUSIVE\",     \"temp_store = MEMORY\", ] <p>We don't want to also write raw data files, so we'll turn those off:</p> In\u00a0[11]: Copied! <pre>cfg.simulation_controls.write_raw_files = False\n</pre> cfg.simulation_controls.write_raw_files = False <p>Now we are ready to create and run our simulation.</p> In\u00a0[12]: Copied! <pre>sim = sw.Simulation(cfg, output_dir=\"./demo-3mkt-out\")\n</pre> sim = sw.Simulation(cfg, output_dir=\"./demo-3mkt-out\") <pre>Airline = AL1, control = leg\nAirline = AL2, control = leg\nAirline = AL3, control = leg\n[2023-08-14 20:17:40,503] passengersim.database.database.INFO: connecting to sqlite database: :memory:\nAirline = AL4, control = leg\n[2023-08-14 20:17:40,503] passengersim.database.database.INFO: initializing sqlite tables\n</pre> In\u00a0[13]: Copied! <pre>summary = sim.run(log_reports=False)\n</pre> summary = sim.run(log_reports=False) <pre>[2023-08-14 20:17:40,506] passengersim.database.database.INFO: deleting existing scenario 'Three Market Test Network' from database\n[2023-08-14 20:17:40,507] passengersim.INFO: building connections\n[2023-08-14 20:17:40,507] passengersim.INFO: Connections done, num_paths = 18\n[2023-08-14 20:17:41,436] passengersim.INFO: Th' th' that's all folks !!!    (Elapsed time = 0.93)\n</pre> In\u00a0[14]: Copied! <pre>summary.demands\n</pre> summary.demands Out[14]: orig dest segment sold revenue avg_fare gt_demand gt_sold gt_revenue 0 BOS SFO business 55 20572.38 374.043273 14149 11043 4.067501e+06 1 BOS SFO leisure 6 1867.28 311.213333 17761 1055 3.290952e+05 2 BOS ORD business 102 47301.33 463.738529 23420 23420 1.083009e+07 3 BOS ORD leisure 18 5881.28 326.737778 29165 6931 2.274515e+06 4 BOS DFW business 122 70669.76 579.260328 19810 19810 1.166860e+07 5 BOS DFW leisure 124 42519.66 342.900484 27984 13646 4.693767e+06 In\u00a0[15]: Copied! <pre>summary.legs\n</pre> summary.legs Out[15]: carrier flt_no orig dest avg_sold avg_rev lf 0 AL1 1 BOS SFO 29.465 10680.11855 29.465000 1 AL2 2 BOS SFO 31.025 11302.86455 31.025000 2 AL1 3 BOS ORD 50.095 21580.50595 50.095000 3 AL2 4 BOS ORD 50.635 21948.10560 50.635000 4 AL3 5 BOS ORD 51.025 21994.42095 42.520833 5 AL1 6 BOS DFW 41.750 20345.93430 34.791667 6 AL1 7 BOS DFW 42.445 20839.31465 35.370833 7 AL2 8 BOS DFW 41.405 20301.95650 34.504167 8 AL4 9 BOS DFW 41.680 20324.63570 34.733333 In\u00a0[16]: Copied! <pre>summary.paths\n</pre> summary.paths Out[16]: orig dest carrier1 flt_no1 carrier2 flt_no2 avg_sold avg_rev 0 BOS SFO AL1 1 None None 29.465 10680.11855 1 BOS SFO AL2 2 None None 31.025 11302.86455 2 BOS ORD AL1 3 None None 50.095 21580.50595 3 BOS ORD AL2 4 None None 50.635 21948.10560 4 BOS ORD AL3 5 None None 51.025 21994.42095 5 BOS DFW AL1 6 None None 41.750 20345.93430 6 BOS DFW AL1 7 None None 42.445 20839.31465 7 BOS DFW AL2 8 None None 41.405 20301.95650 8 BOS DFW AL4 9 None None 41.680 20324.63570 9 BOS DFW AL1 6 None None 41.750 20345.93430 10 BOS DFW AL1 7 None None 42.445 20839.31465 11 BOS DFW AL2 8 None None 41.405 20301.95650 12 BOS DFW AL4 9 None None 41.680 20324.63570 13 BOS ORD AL1 3 None None 50.095 21580.50595 14 BOS ORD AL2 4 None None 50.635 21948.10560 15 BOS ORD AL3 5 None None 51.025 21994.42095 16 BOS SFO AL1 1 None None 29.465 10680.11855 17 BOS SFO AL2 2 None None 31.025 11302.86455 In\u00a0[17]: Copied! <pre>summary.airlines\n</pre> summary.airlines Out[17]: name avg_sold load_factor avg_rev asm rpm 0 AL1 164 36.457074 73445.87345 118440000.0 43179759.0 1 AL2 123 37.369630 53552.92665 76560000.0 28610189.0 2 AL3 51 42.520833 21994.42095 41880000.0 17807725.0 3 AL4 42 34.733333 20324.63570 41880000.0 14546320.0 In\u00a0[18]: Copied! <pre>summary.load_factors\n</pre> summary.load_factors Out[18]: carrier avg_sold avg_lf sys_lf avg_rev yield avg_price n_obs 0 AL1 164.0 37.22 36.46 73445.87 0.124 449.0 200 1 AL2 123.0 38.46 37.37 53552.93 0.140 435.0 200 2 AL3 51.0 42.52 42.52 21994.42 0.105 431.0 200 3 AL4 42.0 34.73 34.73 20324.64 0.097 488.0 200 In\u00a0[19]: Copied! <pre>summary.bookings_by_timeframe\n</pre> summary.bookings_by_timeframe Out[19]: carrier class rrd avg_sold avg_business avg_leisure avg_revenue avg_price tot_sold 0 AL1 Y0 0 0.000 0.0 0.000 0.0000 NaN 0.0 1 AL1 Y0 1 0.000 0.0 0.000 0.0000 NaN 0.0 2 AL1 Y0 3 0.000 0.0 0.000 0.0000 NaN 0.0 3 AL1 Y0 5 0.000 0.0 0.000 0.0000 NaN 0.0 4 AL1 Y0 7 0.000 0.0 0.000 0.0000 NaN 0.0 ... ... ... ... ... ... ... ... ... ... 675 AL4 Y9 35 2.975 0.0 2.975 906.0660 304.56 595.0 676 AL4 Y9 42 2.080 0.0 2.080 633.4848 304.56 416.0 677 AL4 Y9 49 1.195 0.0 1.195 363.9492 304.56 239.0 678 AL4 Y9 56 0.655 0.0 0.655 199.4868 304.56 131.0 679 AL4 Y9 63 0.005 0.0 0.005 1.5228 304.56 1.0 <p>680 rows \u00d7 9 columns</p> In\u00a0[20]: Copied! <pre>summary.fig_bookings_by_timeframe()\n</pre> summary.fig_bookings_by_timeframe() Out[20]: In\u00a0[21]: Copied! <pre>summary.fig_bookings_by_timeframe(by_airline=False)\n</pre> summary.fig_bookings_by_timeframe(by_airline=False) Out[21]: In\u00a0[22]: Copied! <pre>summary.fig_airline_loads(raw_df=True)\n</pre> summary.fig_airline_loads(raw_df=True) Out[22]: measure name value 0 asm AL1 118440000.0 1 asm AL2 76560000.0 2 asm AL3 41880000.0 3 asm AL4 41880000.0 4 rpm AL1 43179759.0 5 rpm AL2 28610189.0 6 rpm AL3 17807725.0 7 rpm AL4 14546320.0 In\u00a0[23]: Copied! <pre>summary.fig_fare_class_mix()\n</pre> summary.fig_fare_class_mix() Out[23]: In\u00a0[24]: Copied! <pre>summary.total_demand\n</pre> summary.total_demand Out[24]: <pre>664.40163718632</pre> <p>We've written only to an in-memory database, but we want to dump that thing to disk now for posterity:</p> In\u00a0[25]: Copied! <pre>sim.backup_db(\"backup-db.sqlite\")\n</pre> sim.backup_db(\"backup-db.sqlite\") <pre>Copied all 1560 pages.\n</pre> <p>We can get dataframes from SQL queries while we have the database connection open...</p> In\u00a0[26]: Copied! <pre>bookings = sim.cnx.dataframe(\"SELECT * FROM bookings_by_timeframe\")\nbookings\n</pre> bookings = sim.cnx.dataframe(\"SELECT * FROM bookings_by_timeframe\") bookings Out[26]: scenario carrier booking_class rrd tot_sold avg_sold avg_business avg_leisure avg_revenue avg_price updated_at 0 Three Market Test Network AL1 Y0 0 0.0 0.000 0.0 0.000 0.0000 NaN 2023-08-15 01:17:41 1 Three Market Test Network AL1 Y0 1 0.0 0.000 0.0 0.000 0.0000 NaN 2023-08-15 01:17:41 2 Three Market Test Network AL1 Y0 3 0.0 0.000 0.0 0.000 0.0000 NaN 2023-08-15 01:17:41 3 Three Market Test Network AL1 Y0 5 0.0 0.000 0.0 0.000 0.0000 NaN 2023-08-15 01:17:41 4 Three Market Test Network AL1 Y0 7 0.0 0.000 0.0 0.000 0.0000 NaN 2023-08-15 01:17:41 ... ... ... ... ... ... ... ... ... ... ... ... 675 Three Market Test Network AL4 Y9 35 595.0 2.975 0.0 2.975 906.0660 304.56 2023-08-15 01:17:41 676 Three Market Test Network AL4 Y9 42 416.0 2.080 0.0 2.080 633.4848 304.56 2023-08-15 01:17:41 677 Three Market Test Network AL4 Y9 49 239.0 1.195 0.0 1.195 363.9492 304.56 2023-08-15 01:17:41 678 Three Market Test Network AL4 Y9 56 131.0 0.655 0.0 0.655 199.4868 304.56 2023-08-15 01:17:41 679 Three Market Test Network AL4 Y9 63 1.0 0.005 0.0 0.005 1.5228 304.56 2023-08-15 01:17:41 <p>680 rows \u00d7 11 columns</p> <p>Once we close the database connection, we can no longer use it for reading or writing. If it was an in-memory database, closing it means that content is gone for good, unless it was backed up to disk (as we did above).</p> In\u00a0[27]: Copied! <pre>sim.cnx.close()\n</pre> sim.cnx.close() In\u00a0[28]: Copied! <pre>leg_detail = sim.cnx.dataframe(\"SELECT * FROM leg_detail\")\n</pre> leg_detail = sim.cnx.dataframe(\"SELECT * FROM leg_detail\") <pre>\n---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\nCell In[28], line 1\n----&gt; 1 leg_detail = sim.cnx.dataframe(\"SELECT * FROM leg_detail\")\n\nFile ~/Git/passengersim-core/src/passengersim/passengersim/database/database.py:147, in Database.dataframe(self, query, params)\n    145 \"\"\"Run a SQL query and return the results as a pandas DataFrame.\"\"\"\n    146 if not self.is_open:\n--&gt; 147     raise ValueError(\"database is not open\")\n    148 import pandas as pd\n    150 return pd.read_sql_query(query, self._connection, params=params)\n\nValueError: database is not open</pre>"},{"location":"Tutorials/demo-3mkt-db.nbconvert.html#three-market-database-demo","title":"Three Market Database Demo\u00b6","text":""},{"location":"Tutorials/demo-3mkt.nbconvert.html","title":"Three Market Test","text":"In\u00a0[1]: Copied! <pre>import passengersim as sw\n</pre> import passengersim as sw In\u00a0[2]: Copied! <pre>input_file = sw.demo_network(\"3mkt\")\n</pre> input_file = sw.demo_network(\"3mkt\") In\u00a0[3]: Copied! <pre>input_file\n</pre> input_file Out[3]: <pre>PosixPath('/Users/jpn/Git/passengersim-core/src/passengersim/passengersim/networks/3mkt.yaml')</pre> In\u00a0[4]: Copied! <pre>sim = sw.Simulation.from_yaml(input_file)\n</pre> sim = sw.Simulation.from_yaml(input_file) <pre>Airline = AL1, control = leg\nAirline = AL2, control = leg\nAirline = AL3, control = leg\nAirline = AL4, control = leg\n[2023-08-14 20:17:43,859] passengersim.database.database.INFO: connecting to sqlite database: airsim-output.sqlite\n[2023-08-14 20:17:43,860] passengersim.database.database.INFO: initializing sqlite tables\n</pre> In\u00a0[5]: Copied! <pre>summary = sim.run(log_reports=False)\n</pre> summary = sim.run(log_reports=False) <pre>[2023-08-14 20:17:43,863] passengersim.database.database.INFO: deleting existing scenario 'Three Market Test Network' from database\n[2023-08-14 20:17:43,864] passengersim.INFO: building connections\n[2023-08-14 20:17:43,864] passengersim.INFO: Connections done, num_paths = 18\n[2023-08-14 20:17:44,694] passengersim.INFO: Th' th' that's all folks !!!    (Elapsed time = 0.83)\n</pre> In\u00a0[6]: Copied! <pre>summary.demands\n</pre> summary.demands Out[6]: orig dest segment sold revenue avg_fare gt_demand gt_sold gt_revenue 0 BOS SFO business 55 20572.38 374.043273 14149 11043 4.067501e+06 1 BOS SFO leisure 6 1867.28 311.213333 17761 1055 3.290952e+05 2 BOS ORD business 102 47301.33 463.738529 23420 23420 1.083009e+07 3 BOS ORD leisure 18 5881.28 326.737778 29165 6931 2.274515e+06 4 BOS DFW business 122 70669.76 579.260328 19810 19810 1.166860e+07 5 BOS DFW leisure 124 42519.66 342.900484 27984 13646 4.693767e+06 In\u00a0[7]: Copied! <pre>summary.legs\n</pre> summary.legs Out[7]: carrier flt_no orig dest avg_sold avg_rev lf 0 AL1 1 BOS SFO 29.465 10680.11855 29.465000 1 AL2 2 BOS SFO 31.025 11302.86455 31.025000 2 AL1 3 BOS ORD 50.095 21580.50595 50.095000 3 AL2 4 BOS ORD 50.635 21948.10560 50.635000 4 AL3 5 BOS ORD 51.025 21994.42095 42.520833 5 AL1 6 BOS DFW 41.750 20345.93430 34.791667 6 AL1 7 BOS DFW 42.445 20839.31465 35.370833 7 AL2 8 BOS DFW 41.405 20301.95650 34.504167 8 AL4 9 BOS DFW 41.680 20324.63570 34.733333 In\u00a0[8]: Copied! <pre>summary.paths\n</pre> summary.paths Out[8]: orig dest carrier1 flt_no1 carrier2 flt_no2 avg_sold avg_rev 0 BOS SFO AL1 1 None None 29.465 10680.11855 1 BOS SFO AL2 2 None None 31.025 11302.86455 2 BOS ORD AL1 3 None None 50.095 21580.50595 3 BOS ORD AL2 4 None None 50.635 21948.10560 4 BOS ORD AL3 5 None None 51.025 21994.42095 5 BOS DFW AL1 6 None None 41.750 20345.93430 6 BOS DFW AL1 7 None None 42.445 20839.31465 7 BOS DFW AL2 8 None None 41.405 20301.95650 8 BOS DFW AL4 9 None None 41.680 20324.63570 9 BOS DFW AL1 6 None None 41.750 20345.93430 10 BOS DFW AL1 7 None None 42.445 20839.31465 11 BOS DFW AL2 8 None None 41.405 20301.95650 12 BOS DFW AL4 9 None None 41.680 20324.63570 13 BOS ORD AL1 3 None None 50.095 21580.50595 14 BOS ORD AL2 4 None None 50.635 21948.10560 15 BOS ORD AL3 5 None None 51.025 21994.42095 16 BOS SFO AL1 1 None None 29.465 10680.11855 17 BOS SFO AL2 2 None None 31.025 11302.86455 In\u00a0[9]: Copied! <pre>summary.airlines\n</pre> summary.airlines Out[9]: name avg_sold load_factor avg_rev asm rpm 0 AL1 164 36.457074 73445.87345 118440000.0 43179759.0 1 AL2 123 37.369630 53552.92665 76560000.0 28610189.0 2 AL3 51 42.520833 21994.42095 41880000.0 17807725.0 3 AL4 42 34.733333 20324.63570 41880000.0 14546320.0 In\u00a0[10]: Copied! <pre>summary.airlines.set_index(\"name\")[[\"asm\", \"rpm\"]].plot.bar();\n</pre> summary.airlines.set_index(\"name\")[[\"asm\", \"rpm\"]].plot.bar(); In\u00a0[11]: Copied! <pre>summary.fig_airline_loads()\n</pre> summary.fig_airline_loads() Out[11]:"},{"location":"Tutorials/demo-3mkt.nbconvert.html#three-market-test","title":"Three Market Test\u00b6","text":""},{"location":"user-guide/cli.html","title":"Command Line Interface","text":"<p>AirSim Command Line Interface</p> <p>Usage:</p> <pre><code>$ python -m AirSim [OPTIONS] COMMAND [ARGS]...\n</code></pre> <p>Options:</p> <ul> <li><code>--help</code>: Show this message and exit.</li> </ul> <p>Commands:</p> <ul> <li><code>info</code></li> <li><code>run</code></li> </ul>"},{"location":"user-guide/cli.html#python-m-airsim-info","title":"<code>python -m AirSim info</code>","text":"<p>Usage:</p> <pre><code>$ python -m AirSim info [OPTIONS]\n</code></pre> <p>Options:</p> <ul> <li><code>--help</code>: Show this message and exit.</li> </ul>"},{"location":"user-guide/cli.html#python-m-airsim-run","title":"<code>python -m AirSim run</code>","text":"<p>Usage:</p> <pre><code>$ python -m AirSim run [OPTIONS]\n</code></pre> <p>Options:</p> <ul> <li><code>-n, --network-file PATH</code>: A file that defines the network and various simulation options.  [required]</li> <li><code>-a, --airports-file PATH</code>: A file that defines the airports used in the simulation.</li> <li><code>-o, --out-dir PATH</code>: Out files are written to this directory.</li> <li><code>--db-engine TEXT</code>: [default: sqlite]</li> <li><code>--db-filename TEXT</code>: Use this filename for the output database file. Applies to the the SQLite engine only.  [default: airsim-output.sqlite]</li> <li><code>--fast / --slow</code>: For the SQLite engine only, running in 'fast' mode will store everything in an in-memory first, and dump the entire database to disk only when the simulation is complete.  This can be quite advantageous when the write speed of the disk is slow.  [default: slow]</li> <li><code>--help</code>: Show this message and exit.</li> </ul>"},{"location":"user-guide/counting-simulations.html","title":"Counting Simulations","text":"<p>A simulation run consists of a number of independent trials, and each trial is  made up of a sequence of dependent samples -- earlier samples in a trial are used to develop forecasts and train optimization algorithms used by carriers in later samples of the same trial.</p> <p>The number of trials is set by the  <code>num_trials</code> configuration, and the number of samples in each trial is set by <code>num_samples</code>. Both values can be found in the <code>simulation_controls</code> configuration inputs.</p> <p>We can think of a sample as a \"typical\" departure day.  When generating results,  the first X samples from each trial as these are during a \"burn period\" when the  simulation is getting started and sufficient history is being generated to use  for forecasts and other steps.  The nuber of samples in the burn period is set by the <code>burn_samples</code>  configuration value.</p>"},{"location":"user-guide/installation.html","title":"Installation","text":"<p>Install instructions will be here.</p>"},{"location":"user-guide/installation.html#gt-student-quick-start","title":"GT Student Quick-start","text":"<ol> <li>Double click <code>create-airsim-env.cmd</code> in <code>C:\\PyPI-Local</code> to install your working environment.</li> <li>Look on your desktop for <code>AirSim-Env.cmd</code>, double click that to open and use your environment.</li> <li>Inside the <code>AirSim-Env</code> window, run the following command to run a simple simulation     and confirm it is working.    <pre><code>python -m AirSim run -n \"C:\\AirSim-networks\\network-3mkt-pods.txt\" ^\n      -o \"%USERPROFILE%\\air-sim-outputs\" --fast\n</code></pre>    You should then see an \"air-sim-outputs\" directory in your home directory.  With the <code>--fast</code>    option, the .sqlite file in the output directory is just a stub until the simulation completes,     then it is populated all at once with the stored data from that simulation.  This overcomes the     very slow file write speeds on this server.</li> </ol> <p>For actual simulation experiments, you'll want to change the <code>-n</code> file to the network simulation defs  that you want to use.  To work with the outputs in Python, see reading data</p>"},{"location":"user-guide/randomness.html","title":"Simulation Randomness","text":""},{"location":"user-guide/randomness.html#demand-generation-k-factors","title":"Demand Generation K-Factors","text":"<p>There are multiple sources of variability that is introduced in the simulation. Variability in the level of demand by passenger type on any given day for any origin-destination pair is controlled by a number of k-factors, which are used  to create some correlation across various dimensions of demand.</p> <p>Three k-factors are used to introduce correlation in demand across all markets in  the system and between business/leisure demand within a market. The equation to  generate the mean demand for a given market and passenger type  is given as: </p> <p>\\(\\mu'_{OD-Biz} = \\mu_{OD-Biz} + (SRN \\times k_{sys}) + (MRN \\times k_{mkt}) + (PRN \\times k_{paxtype})\\) </p> <p>where SRN, MRN, and PRN are random numbers associated with the system, market,  and passenger k-factors, respectively.</p> <p>The intuition behind using three k-factors is that even across a \"typical\" departure  day (like Wednesdays) we may have high demand days across the system and low demand  days across the system.  Likewise, if business demand is above average, we expect  that leisure demand may also be above average. Intuitively, when generating demands,  for a given sample (or departure day in the simulation), we add the term  (SRN x <code>sys_k_factor</code>) to every single market and passenger in the system for that  departure day, we add a unique (MRN x <code>mkt_k_factor</code>) to each origin-destination  market in the sample, and we add a unique (PRN x <code>pax_type_k_factor</code>) for each  passenger type within the market. The addition of the (SRN x <code>sys_k_factor</code>) to  \"everything\" in the sample creates a system-level correlation (i.e., demand on  a given departure date or sample could be \"high\" across the system or \"low\"  compared to average).  </p> <p>The addition of the (MRN x <code>mkt_k_factor</code>) to a market creates a market-level  correlation (i.e., if business demand is running higher than average in the  market, we expect leisure demand will run higher than average in general as  well).  </p> <p>The use of the (PRN x <code>pax_type_k_factor</code>) ensures that there is some random  component that is independent between business and leisure passengers in a  given market.</p> <p>In addition to the k-factors that are used to introduce correlation, we have a z-factor. We assume that actual demand, given mean demand, will vary across samples (or  departure dates) according to a constant z-factor given as \\(\\mu\\) divided by \\(\\sigma^2\\). </p> <p>Given different levels of aggregation, we expect that <code>sys_k_factor</code> &lt; <code>mkt_k_factor</code> &lt; <code>pax_type_k_factor</code>.</p> <p>Once we generate the means and std dev for correlated demands by OD and pax type  using the methodology described above, we use these to generate the \u201cactual\u201d demands  for a sample using the equation</p> <p>\\(\\mu'_{OD-Biz} + NRV x \\sigma'_{OD-Biz}\\), </p> <p>where NRV is a normal random variable.</p>"},{"location":"user-guide/randomness.html#demand-allocation-to-time-periods","title":"Demand Allocation to Time Periods","text":"<p>The demand generation above is used to find the total demand for each passenger type in each market on each travel day.  This total value is subsequently distributed  over the booking time periods.</p> <p>While the methodology for this is not (yet) explained here, note that the <code>tf_k_factor</code>  is used to generate variability in how demand is allocated to the different time  frames (also using the booking curves as a key input).</p>"},{"location":"user-guide/rm-systems.html","title":"RM Systems","text":"<p>A revenue management (RM) system is defined by one or more steps. The steps tell  the simulation which demand untruncation, demand forecasting, and optimization  algorithms to use.  These steps also provide information on the kind of forecast  and optimization used (i.e., leg or path) and if path-level information should be  aggregated to leg-level information before a step is performed.  Finally, these  steps allow the user to specify algorithm-specific parameters, e.g., when using  exponential smoothing the user can specify the smoothing constant, alpha.</p> <p>Each carrier should have an RM system that it uses. In PassengerSim, users have  the ability to create a single RM system and assign it to all carriers, or to  create multiple RM systems and assign different RM systems to different carriers.</p> <p>Below is an example that defines 4 RM systems.  It will be helpful to use these  examples to understand the different step_types and options associated with each  step_type.</p> <pre><code>rm_systems:\n  fcfs:\n    steps: []\n  rm_nd:\n    steps:\n      - step_type: untruncation\n        name: untruncation\n        algorithm: none\n        kind: leg\n      - step_type: forecast\n        name: forecast\n        algorithm: additive_pickup\n        alpha: 0.1\n        kind: leg\n      - step_type: emsr\n        name: optimization\n        algorithm: emsrb\n        kind: leg\n  rm_em:\n    steps:\n      - step_type: untruncation\n        name: untruncation\n        algorithm: none\n        kind: leg\n      - step_type: forecast\n        name: forecast\n        algorithm: additive_pickup\n        alpha: 0.15\n        kind: leg\n      - step_type: emsr\n        name: optimization\n        algorithm: fcfs\n        kind: leg\n  rm_probp:\n    steps:\n      - step_type: untruncation\n        name: untruncation\n        algorithm: em\n        kind: path\n      - step_type: forecast\n        name: path_forecast\n        algorithm: exp_smoothing\n        alpha: 0.15\n        kind: path\n      - step_type: probp\n        name: optimization\n      - step_type: aggregation\n        name: aggregate\n      - step_type: emsr\n        name: optimization\n        algorithm: emsrb\n        kind: leg\n</code></pre> <p>The first RM system is based on a first-come, first-serve approach (named <code>fcfs</code>).  No steps are defined for <code>fcfs</code> as there is no demand detruncation, demand  forecasting, or optimization done with FCFS.  If step_types are defined when  <code>fcfs</code> is explicitly specified as the optimization algorithm, they will be ignored.</p> <p>The second RM system, named <code>rm_nd</code>, is leg-based and uses an <code>additive_pickup</code>  forecasting model with EMSRb and no demand detrunction. The alpha parameter that  is specified in the forecast <code>step_type</code> will be ignored as it is not used for  the additive pick-up model.</p> <p>The third RM system, named <code>rm_em</code>, is using the expectation-maximization (EM)  method of detruncation with an exponential smoothing demand forecasting approach  that has a smoothing constant of alpha of 0.15 with and EMSRb optimizer. Both the  forecasts and optimization are done using leg-level inputs.</p> <p>Finally, the fourth RM system, named <code>rm_probp</code>, is also using the EM method of  detruncation with an exponential smoothing dmeand forecasting approach that has  a smoothing constant or alpha of 0.15.  Unlike in <code>rm_em</code> however, the untruncation and forecasting steps are done at the path level. The optimization  step is based on probp that first finds displacement costs at a path level, then  aggregates them to a leg-level in the aggregation step type, and finally calculates  protection levels using EMSRb with leg-level demand inputs.</p> <p>Given an overview of how RM systems are constructed, let's now look at each  step in detail.</p>"},{"location":"user-guide/rm-systems.html#untruncation","title":"Untruncation","text":"<pre><code>- step_type: untruncation\n  name: untruncation\n  algorithm: none, em, naive1, naive2\n  kind: leg, path\n</code></pre> <p>There are three untruncation (also called detruncation) algorithms.  The first,  <code>em</code>, is based on the expectation maximization method.  The <code>naive1</code> and <code>naive2</code>  methods are based on Shebelov presentation. The untruncation steps can be performed at the path or leg level.</p>"},{"location":"user-guide/rm-systems.html#forecast","title":"Forecast","text":"<pre><code>- step_type: forecast\n  name: path_forecast\n  algorithm: exp_smoothing, additive_pickup\n  alpha: 0.15\n  kind: leg, path\n</code></pre> <p>There are two forecasting algorithms: exponential smoothing (that uses a smoothing  or alpha parameter) and additive_pickup model.  The exponential smoothing model  does not (currently) incorporate trend or seasonality.  The additive_pickup model  is based on information from departed flights only and does not use the alpha  parameter. The forecasting step can be performaned at the leg or path level. However, if the forecast is at the leg level then detruncation can only be done  at the leg level (will this generate an error?)</p>"},{"location":"user-guide/rm-systems.html#emsr-optimization","title":"EMSR Optimization","text":"<pre><code>- step_type: emsr\n  name: optimization\n  algorithm: emsra, emsrb, fcfs\n  kind: leg\n</code></pre> <p>The step_type emsr is used for algorithms based on the expected marginal seat  revenue approach and also can be used for fcfs. (although the first RM system  defined as fcfs in the example above is a cleaner way to specify the fcfs option).</p>"},{"location":"user-guide/rm-systems.html#probp-optimization","title":"ProBP Optimization","text":"<pre><code>- step_type: probp\n  name: optimization\n</code></pre> <p>The step_type probp does just as the name suggests - uses the probabilistic bid  price algorithm to determine path-based displacment costs.  After these are found,  two more steps are needed - the first is to aggregate path-level information to  leg-level information and do the probp proration? and the next is to use the  leg-level inputs to find protection levels using emsrb.</p>"},{"location":"user-guide/untruncation.html","title":"Untruncation","text":"<p>Write a description of this concept here.</p>"},{"location":"user-guide/writing-configs.html","title":"Config Files","text":"<p>Most control of the simulation is done via configuration files written in YAML format.</p>"},{"location":"user-guide/writing-configs.html#simulation-controls","title":"Simulation Controls","text":"<pre><code>scenario: Three Market Test Network\nsimulation_controls:\nrandom_seed: 42\nnum_trials: 1\nnum_samples: 300\nsys_k_factor: 0.1\nmkt_k_factor: 0.2\npax_type_k_factor: 0.4\ntf_k_factor: 0.1\nz_factor: 2.0\nprorate_revenue: true\ndwm_lite: false\nmax_connect_time: 120\ndisable_ap: false\ndemand_multiplier: 1.0\nmanual_paths: true\n</code></pre>"},{"location":"user-guide/writing-configs.html#rm-systems","title":"RM Systems","text":"<p>The <code>rm_systems</code> key allows the user to define one or more revenue management systems that may be used by carriers.</p> <p>These systems can either be defined as a list, where each item in the list defines both a name and steps, or you can write the same instruction as a nested mapping, with the names as keys and the values giving the other attributes of each RM system, (for now, just a list of steps) like this:</p> as listas dict <p><pre><code>rm_systems:\n- name: rm_test1\nsteps:\n- step_type: untruncation  #(1)!\nname: untruncation\nalgorithm: em\nkind: leg\n- step_type: forecast\nname: forecast\nalgorithm: exp_smoothing\nalpha: 0.1\nkind: leg\n- step_type: optimization\nname: optimization\nalgorithm: emsrb  #(2)!\nkind: leg\n</code></pre></p> <ol> <li> Untruncation allows us to figure out how much demand was censored.</li> <li>If you define different RM systems, you can attach different optimization algorithms, such as     ProBP.</li> </ol> <p><pre><code>rm_systems:\nrm_test1:\nsteps:\n- step_type: untruncation  #(1)!\nname: untruncation\nalgorithm: em\nkind: leg\n- step_type: forecast\nname: forecast\nalgorithm: exp_smoothing\nalpha: 0.1\nkind: leg\n- step_type: optimization\nname: optimization\nalgorithm: emsrb  #(2)!\nkind: leg\n</code></pre></p> <ol> <li> Untruncation allows us to figure out how much demand was censored.</li> <li>If you define different RM systems, you can attach different optimization algorithms, such as     ProBP.</li> </ol>"},{"location":"user-guide/writing-configs.html#passenger-choice-models","title":"Passenger Choice Models","text":"<pre><code>choice_models:\nbusiness:\nkind: pods\nemult: 1.6\nbasefare_mult: 2.5\npath_quality:  [38.30,  0.10]\npreferred_airline:  [-12.29,  0.17]\ntolerance: 2.0\nr1: 0.30\nr2: 0.10\nr3: 0.20\nr4: 0.15\nleisure:\nkind: pods\nemult: 1.5\nbasefare_mult: 1.0\npath_quality:  [2.02, 0.12]\npreferred_airline:  [-1.98, 0.11]\ntolerance: 5.0\nr1: 0.30\nr2: 0.15\nr3: 0.25\nr4: 0.20\n</code></pre>"},{"location":"user-guide/writing-configs.html#define-carriers","title":"Define Carriers","text":"<pre><code>airlines:\n- name: AL1\nrm_system: rm_test1\n- name: AL2\nrm_system: rm_test1\n- name: AL3\nrm_system: rm_test1\n- name: AL4\nrm_system: rm_test1\n</code></pre>"},{"location":"user-guide/writing-configs.html#define-booking-classes","title":"Define Booking Classes","text":"<pre><code>classes:\n- Y0\n- Y1\n- Y2\n- Y3\n- Y4\n- Y5\n- Y6\n- Y7\n- Y8\n- Y9\n</code></pre>"},{"location":"user-guide/writing-configs.html#data-collection-points-dcps","title":"Data Collection Points (DCPs)","text":"<pre><code>dcps:\n- 63\n- 56\n- 49\n- 42\n- 35\n- 31\n- 28\n- 24\n- 21\n- 17\n- 14\n- 10\n- 7\n- 5\n- 3\n- 1\n</code></pre>"},{"location":"user-guide/writing-configs.html#booking-curves","title":"Booking Curves","text":"<pre><code>booking_curves:\n- name: '1'\ncurve:\n63: 0.01\n56: 0.02\n49: 0.05\n42: 0.13\n35: 0.19\n31: 0.23\n28: 0.29\n24: 0.35\n21: 0.45\n17: 0.54\n14: 0.67\n10: 0.79\n7: 0.86\n5: 0.91\n3: 0.96\n1: 1.0\n- name: '2'\ncurve:\n63: 0.13\n56: 0.22\n49: 0.37\n42: 0.52\n35: 0.64\n31: 0.7\n28: 0.75\n24: 0.78\n21: 0.83\n17: 0.87\n14: 0.91\n10: 0.94\n7: 0.96\n5: 0.98\n3: 0.99\n1: 1.0\n- name: '3'\ncurve:\n63: 0.04\n56: 0.06\n49: 0.12\n42: 0.26\n35: 0.35\n31: 0.41\n28: 0.48\n24: 0.54\n21: 0.63\n17: 0.7\n14: 0.81\n10: 0.88\n7: 0.93\n5: 0.96\n3: 0.98\n1: 1.0\n- name: '4'\ncurve:\n63: 0.21\n56: 0.35\n49: 0.53\n42: 0.67\n35: 0.76\n31: 0.8\n28: 0.83\n24: 0.85\n21: 0.88\n17: 0.91\n14: 0.94\n10: 0.96\n7: 0.97\n5: 0.98\n3: 0.99\n1: 1.0\n</code></pre>"},{"location":"user-guide/writing-configs.html#legs","title":"Legs","text":"<pre><code>legs:\n- carrier: AL1\nfltno: 1\norig: BOS\ndest: SFO\ndate: '2020-01-01'\ndep_time: 08:00\narr_time: '10:00'\ncapacity: 100\ndistance: 867.0\n- carrier: AL2\nfltno: 2\norig: BOS\ndest: SFO\ndate: '2020-01-01'\ndep_time: '14:00'\narr_time: '16:00'\ncapacity: 100\ndistance: 867.0\n...\n</code></pre>"},{"location":"user-guide/writing-configs.html#paths","title":"Paths","text":"<pre><code>paths:\n- orig: BOS\ndest: SFO\npath_quality_index: 1.0\nlegs:\n- 1\n- orig: BOS\ndest: SFO\npath_quality_index: 1.0\nlegs:\n- 2\n- orig: BOS\ndest: ORD\npath_quality_index: 1.0\nlegs:\n- 3\n...\n</code></pre>"}]}